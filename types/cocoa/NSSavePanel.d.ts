/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSSavePanel<T = any> extends NSPanel, FIFinderViewDelegateProtocol, NSTouchBarDelegateProtocol {
    _setTagsIfNecessary<R = void>(): R;
    _registerTagsWithFinder<R = void>(): R;
    _commitPendingTags<R = void>(): R;
    _tagsDidChange<R = void, P0 = unknown>(__tagsDidChange: P0): R;
    _tags<R = unknown>(): R;
    _setTags<R = void, P0 = unknown>(__setTags: P0): R;
    _showsTagField<R = boolean>(): R;
    _setShowsTagField<R = void, P0 = boolean>(__setShowsTagField: P0): R;
    _shouldSetTagsForClient<R = boolean>(): R;
    _setShouldSetTagsForClient<R = void, P0 = boolean>(__setShouldSetTagsForClient: P0): R;
    _revertOriginalDocumentCheckBoxHit<R = void, P0 = unknown>(__revertOriginalDocumentCheckBoxHit: P0): R;
    _shouldRevertOriginalDocument<R = boolean>(): R;
    _setShouldRevertOriginalDocument<R = void, P0 = boolean>(__setShouldRevertOriginalDocument: P0): R;
    _showsRevertOriginalDocumentButton<R = boolean>(): R;
    _setShowsRevertOriginalDocumentButton<R = void, P0 = boolean>(__setShowsRevertOriginalDocumentButton: P0): R;
    _overwritingAlertSuppressionURL<R = unknown>(): R;
    _setOverwritingAlertSuppressionURL<R = void, P0 = unknown>(__setOverwritingAlertSuppressionURL: P0): R;
    _dontSaveButtonTitle<R = unknown>(): R;
    _setDontSaveButtonTitle<R = void, P0 = unknown>(__setDontSaveButtonTitle: P0): R;
    dontSave<R = void, P0 = unknown>(_dontSave: P0): R;
    _setAlertInformativeMessage<R = void, P0 = unknown>(__setAlertInformativeMessage: P0): R;
    _alertInformativeMessage<R = unknown>(): R;
    _setAlertMessage<R = void, P0 = unknown>(__setAlertMessage: P0): R;
    _alertMessage<R = unknown>(): R;
    _useAlertStyle<R = boolean>(): R;
    _showNewDocumentButton<R = boolean>(): R;
    _setShowNewDocumentButtonShouldLayout<R = boolean, P0 = boolean>(__setShowNewDocumentButtonShouldLayout: P0): R;
    _setShowNewDocumentButton<R = void, P0 = boolean>(__setShowNewDocumentButton: P0): R;
    _showNewFolderButton<R = boolean>(): R;
    _setCancelButtonTitle<R = void, P0 = unknown>(__setCancelButtonTitle: P0): R;
    _cancelButtonTitle<R = unknown>(): R;
    _okButtonDisabled<R = boolean>(): R;
    _setOkButtonDisabled<R = void, P0 = boolean>(__setOkButtonDisabled: P0): R;
    _bottomControlsDisabled<R = boolean>(): R;
    _setBottomControlsDisabled<R = void, P0 = boolean>(__setBottomControlsDisabled: P0): R;
    _updateControlStates<R = void>(): R;
    _setUseAlertStyle<R = void, P0 = boolean>(__setUseAlertStyle: P0): R;
    set_marginConstraint6<R = void, P0 = unknown>(_set_marginConstraint6: P0): R;
    _marginConstraint6<R = unknown>(): R;
    set_finderKitMarginConstraint<R = void, P0 = unknown>(_set_finderKitMarginConstraint: P0): R;
    _finderKitMarginConstraint<R = unknown>(): R;
    set_marginConstraint4<R = void, P0 = unknown>(_set_marginConstraint4: P0): R;
    _marginConstraint4<R = unknown>(): R;
    set_marginConstraint3<R = void, P0 = unknown>(_set_marginConstraint3: P0): R;
    _marginConstraint3<R = unknown>(): R;
    set_marginConstraint2<R = void, P0 = unknown>(_set_marginConstraint2: P0): R;
    _marginConstraint2<R = unknown>(): R;
    set_marginConstraint1<R = void, P0 = unknown>(_set_marginConstraint1: P0): R;
    _marginConstraint1<R = unknown>(): R;
    set_accessoryViewForcedWidthConstraint<R = void, P0 = unknown>(_set_accessoryViewForcedWidthConstraint: P0): R;
    _accessoryViewForcedWidthConstraint<R = unknown>(): R;
    set_accessoryViewForcedHeightConstraint<R = void, P0 = unknown>(_set_accessoryViewForcedHeightConstraint: P0): R;
    _accessoryViewForcedHeightConstraint<R = unknown>(): R;
    set_navPanelWidthConstraint<R = void, P0 = unknown>(_set_navPanelWidthConstraint: P0): R;
    _navPanelWidthConstraint<R = unknown>(): R;
    set_navPanelCollapsingConstraint<R = void, P0 = unknown>(_set_navPanelCollapsingConstraint: P0): R;
    _navPanelCollapsingConstraint<R = unknown>(): R;
    set_extrasSeparatorConstraint<R = void, P0 = unknown>(_set_extrasSeparatorConstraint: P0): R;
    _extrasSeparatorConstraint<R = unknown>(): R;
    set_textCenteringConstraint<R = void, P0 = unknown>(_set_textCenteringConstraint: P0): R;
    _textCenteringConstraint<R = unknown>(): R;
    set_alertLeadingTextAlignmentConstraint<R = void, P0 = unknown>(_set_alertLeadingTextAlignmentConstraint: P0): R;
    _alertLeadingTextAlignmentConstraint<R = unknown>(): R;
    set_alertStyleContentView<R = void, P0 = unknown>(_set_alertStyleContentView: P0): R;
    _alertStyleContentView<R = unknown>(): R;
    set_widthCollapsingConstraint<R = void, P0 = unknown>(_set_widthCollapsingConstraint: P0): R;
    _widthCollapsingConstraint<R = unknown>(): R;
    set_tagFieldLabel<R = void, P0 = unknown>(_set_tagFieldLabel: P0): R;
    _tagFieldLabel<R = unknown>(): R;
    set_tagField<R = void, P0 = unknown>(_set_tagField: P0): R;
    _tagField<R = unknown>(): R;
    set_tagFieldProxy<R = void, P0 = unknown>(_set_tagFieldProxy: P0): R;
    _tagFieldProxy<R = unknown>(): R;
    set_tagFieldContainer<R = void, P0 = unknown>(_set_tagFieldContainer: P0): R;
    _tagFieldContainer<R = unknown>(): R;
    set_accessoryBottomSeparator<R = void, P0 = unknown>(_set_accessoryBottomSeparator: P0): R;
    _accessoryBottomSeparator<R = unknown>(): R;
    set_navBottomSeparator<R = void, P0 = unknown>(_set_navBottomSeparator: P0): R;
    _navBottomSeparator<R = unknown>(): R;
    set_revertOriginalDocumentButton<R = void, P0 = unknown>(_set_revertOriginalDocumentButton: P0): R;
    _revertOriginalDocumentButton<R = unknown>(): R;
    set_optionsButton<R = void, P0 = unknown>(_set_optionsButton: P0): R;
    _optionsButton<R = unknown>(): R;
    set_newDocumentButton<R = void, P0 = unknown>(_set_newDocumentButton: P0): R;
    _newDocumentButton<R = unknown>(): R;
    set_dontSaveButton<R = void, P0 = unknown>(_set_dontSaveButton: P0): R;
    _dontSaveButton<R = unknown>(): R;
    set_newFolderButton<R = void, P0 = unknown>(_set_newFolderButton: P0): R;
    _newFolderButton<R = unknown>(): R;
    overwriteAlertDidEnd_returnCode_contextInfo<R = void, P0 = unknown, P1 = number, P2 = unknown>(_overwriteAlertDidEnd: P0, _returnCode: P1, _contextInfo: P2): R;
    ok<R = void, P0 = unknown>(_ok: P0): R;
    _prepareSeamlessOpening<R = void>(): R;
    _enableSeamlessOpening<R = boolean>(): R;
    _setClientPID<R = void, P0 = number>(__setClientPID: P0): R;
    _clientPID<R = number>(): R;
    _selectionIsASingleFolder<R = boolean>(): R;
    dismissWindow<R = void, P0 = number>(_dismissWindow: P0): R;
    _cancelAndClose<R = void>(): R;
    _dismissWindowWithReturnCode_willRunSeamlessOpening<R = void, P0 = number, P1 = boolean>(__dismissWindowWithReturnCode: P0, _willRunSeamlessOpening: P1): R;
    _reactToPanelDismissalWithReturnCode<R = void, P0 = number>(__reactToPanelDismissalWithReturnCode: P0): R;
    _hidePreviewPanelIfNecessary<R = void>(): R;
    seamlessOpenerTransientWindow_level<R = unknown, P0 = unknown, P1 = number>(_seamlessOpenerTransientWindow: P0, _level: P1): R;
    seamlessOpener_transitionImageForPreviewItem_contentRect<R = unknown, P0 = unknown, P1 = unknown, P2 = CGRect>(_seamlessOpener: P0, _transitionImageForPreviewItem: P1, _contentRect: P2): R;
    seamlessOpener_sourceFrameOnScreenForPreviewItem<R = CGRect, P0 = unknown, P1 = unknown>(_seamlessOpener: P0, _sourceFrameOnScreenForPreviewItem: P1): R;
    _isModal<R = boolean>(): R;
    _resolveUbiquitousConflictsForURLs<R = boolean, P0 = unknown>(__resolveUbiquitousConflictsForURLs: P0): R;
    _okForOpenMode<R = boolean>(): R;
    _didPresentErrorWithRecovery_contextInfo<R = void, P0 = boolean, P1 = void>(__didPresentErrorWithRecovery: P0, _contextInfo: P1): R;
    _okForSaveMode<R = boolean>(): R;
    _sendToDelegateValidateURLs<R = boolean, P0 = unknown>(__sendToDelegateValidateURLs: P0): R;
    _sendToDelegateValidateFilenameOrURL_error<R = boolean, P0 = unknown, P1 = unknown>(__sendToDelegateValidateFilenameOrURL: P0, _error: P1): R;
    sendToDelegate_userEnteredFileName_confirmed<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(_sendToDelegate: P0, _userEnteredFileName: P1, _confirmed: P2): R;
    _overwriteExistingFileCheck<R = boolean, P0 = unknown>(__overwriteExistingFileCheck: P0): R;
    _shouldAlertForFileOverwrite<R = boolean, P0 = unknown>(__shouldAlertForFileOverwrite: P0): R;
    _nameWithRequiredExtensionCheck_appendExtensionIfRequired<R = unknown, P0 = unknown, P1 = boolean>(__nameWithRequiredExtensionCheck: P0, _appendExtensionIfRequired: P1): R;
    _nameWithStrictRequiredExtensionCheck<R = unknown, P0 = unknown>(__nameWithStrictRequiredExtensionCheck: P0): R;
    _nameWithLooseRequiredExtensionCheck<R = unknown, P0 = unknown>(__nameWithLooseRequiredExtensionCheck: P0): R;
    runModalForTypes<R = number, P0 = unknown>(_runModalForTypes: P0): R;
    beginSheetForDirectory_file_modalForWindow_modalDelegate_didEndSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = string, P5 = void>(_beginSheetForDirectory: P0, _file: P1, _modalForWindow: P2, _modalDelegate: P3, _didEndSelector: P4, _contextInfo: P5): R;
    runModal<R = number>(): R;
    _nsSavePanel_SendFileSystemChangeNotification<R = void>(): R;
    runModalForDirectory_file<R = number, P0 = unknown, P1 = unknown>(_runModalForDirectory: P0, _file: P1): R;
    _dismissModeless<R = void, P0 = number>(__dismissModeless: P0): R;
    _didEndSheet_returnCode_contextInfo<R = void, P0 = unknown, P1 = number, P2 = void>(__didEndSheet: P0, _returnCode: P1, _contextInfo: P2): R;
    _removeExtraRetainIfNeeded<R = void>(): R;
    beginWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_beginWithCompletionHandler: P0): R;
    beginSheetModalForWindow_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_beginSheetModalForWindow: P0, _completionHandler: P1): R;
    _doMakeKeyAndOrderFront<R = void>(): R;
    beginForDirectory_file_types_modelessDelegate_didEndSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = string, P5 = void>(_beginForDirectory: P0, _file: P1, _types: P2, _modelessDelegate: P3, _didEndSelector: P4, _contextInfo: P5): R;
    beginSheetForDirectory_file_types_modalForWindow_modalDelegate_didEndSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = string, P6 = void>(_beginSheetForDirectory: P0, _file: P1, _types: P2, _modalForWindow: P3, _modalDelegate: P4, _didEndSelector: P5, _contextInfo: P6): R;
    _finderKitMinimumViewSize<R = CGSize>(): R;
    runModalForDirectory_file_types<R = number, P0 = unknown, P1 = unknown, P2 = unknown>(_runModalForDirectory: P0, _file: P1, _types: P2): R;
    _selectFilePath<R = void, P0 = unknown>(__selectFilePath: P0): R;
    _setBeginWithFileNames<R = void, P0 = unknown>(__setBeginWithFileNames: P0): R;
    _beginWithFileNames<R = unknown>(): R;
    _loadPreviousModeAndLayout<R = void>(): R;
    _mediaBrowserShownTypes<R = number>(): R;
    _showFilesForBrowserType<R = boolean, P0 = number>(__showFilesForBrowserType: P0): R;
    _configureForDirectory_forceDefault<R = void, P0 = unknown, P1 = boolean>(__configureForDirectory: P0, _forceDefault: P1): R;
    _fileInfoForPaths_sandboxPermissions_auditToken<R = unknown, P0 = unknown, P1 = string, P2 = unknown>(__fileInfoForPaths: P0, _sandboxPermissions: P1, _auditToken: P2): R;
    _configureForFilename<R = void, P0 = unknown>(__configureForFilename: P0): R;
    _saveCurrentPanelState<R = void, P0 = number>(__saveCurrentPanelState: P0): R;
    _addCurrentDirectoryToRecentPlaces<R = void>(): R;
    _stopOpenProgressIndicator<R = void>(): R;
    _startOpenProgressIndicator<R = void>(): R;
    _reallyStartOpenProgressIndicator<R = void>(): R;
    _delegateCompareFilename_with_caseSensitive<R = number, P0 = unknown, P1 = unknown, P2 = boolean>(__delegateCompareFilename: P0, _with: P1, _caseSensitive: P2): R;
    _delegateRespondsToCompareFilename<R = boolean>(): R;
    _allowSearchingForFolders<R = boolean>(): R;
    scheduleURLEnableTestForItems_callDelegate_completionHandler<R = void, P0 = unknown, P1 = boolean, P2 = CDUnknownBlockType>(_scheduleURLEnableTestForItems: P0, _callDelegate: P1, _completionHandler: P2): R;
    _replyToFinderKitShouldEnableURL_isDirectory_isPackage_pathExtension_itemHFSType_typeIdentifier_delegateRepliedWith<R = boolean, P0 = unknown, P1 = boolean, P2 = boolean, P3 = unknown, P4 = number, P5 = unknown, P6 = boolean>(__replyToFinderKitShouldEnableURL: P0, _isDirectory: P1, _isPackage: P2, _pathExtension: P3, _itemHFSType: P4, _typeIdentifier: P5, _delegateRepliedWith: P6): R;
    _shouldEnableURL<R = boolean, P0 = unknown>(__shouldEnableURL: P0): R;
    _shouldEnableURL_isDirectoryURLHandler<R = boolean, P0 = unknown, P1 = CDUnknownBlockType>(__shouldEnableURL: P0, _isDirectoryURLHandler: P1): R;
    _canChooseURL<R = boolean, P0 = unknown>(__canChooseURL: P0): R;
    _nonDelegateShouldEnableURL_isDirectory<R = boolean, P0 = unknown, P1 = boolean>(__nonDelegateShouldEnableURL: P0, _isDirectory: P1): R;
    _isFileTypeEnabledForURL<R = boolean, P0 = unknown>(__isFileTypeEnabledForURL: P0): R;
    _isEnabledItemWithExtensionProvider_HFSTypeProvider_UTIProvider<R = boolean, P0 = CDUnknownBlockType, P1 = CDUnknownBlockType, P2 = CDUnknownBlockType>(__isEnabledItemWithExtensionProvider: P0, _HFSTypeProvider: P1, _UTIProvider: P2): R;
    _isDirectoryURL<R = boolean, P0 = unknown>(__isDirectoryURL: P0): R;
    _isFauxFilePackageURL<R = boolean, P0 = unknown>(__isFauxFilePackageURL: P0): R;
    _delegateShouldEnableURL<R = boolean, P0 = unknown>(__delegateShouldEnableURL: P0): R;
    _sendShouldShowFileName_toDelegate<R = boolean, P0 = unknown, P1 = unknown>(__sendShouldShowFileName: P0, _toDelegate: P1): R;
    _sendShouldShowFileName_fileSchemePath_toDelegate<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(__sendShouldShowFileName: P0, _fileSchemePath: P1, _toDelegate: P2): R;
    _sendShouldEnableURL_toDelegate<R = boolean, P0 = unknown, P1 = unknown>(__sendShouldEnableURL: P0, _toDelegate: P1): R;
    hidesSharedSection<R = boolean>(): R;
    setHidesSharedSection<R = void, P0 = boolean>(_setHidesSharedSection: P0): R;
    _selectURL<R = boolean, P0 = unknown>(__selectURL: P0): R;
    _registerForDragTypes<R = void>(): R;
    _handleFileListConfirmedSelection<R = boolean, P0 = unknown>(__handleFileListConfirmedSelection: P0): R;
    _handleFileListSelectionChanged<R = void, P0 = unknown>(__handleFileListSelectionChanged: P0): R;
    _handleFileListModeChanged<R = void, P0 = unknown>(__handleFileListModeChanged: P0): R;
    _handleCurrentDirectoryChanged<R = void, P0 = unknown>(__handleCurrentDirectoryChanged: P0): R;
    _sendSelectionDidChange<R = void>(): R;
    _sendSelectionDidChangeToDelegate<R = void, P0 = unknown>(__sendSelectionDidChangeToDelegate: P0): R;
    _sendDirectoryDidChange<R = void>(): R;
    _sendDirectoryDidChange_toDelegate<R = void, P0 = unknown, P1 = unknown>(__sendDirectoryDidChange: P0, _toDelegate: P1): R;
    _sendDidChangeToDirectoryURL_toDelegate<R = void, P0 = unknown, P1 = unknown>(__sendDidChangeToDirectoryURL: P0, _toDelegate: P1): R;
    control_textView_doCommandBySelector<R = boolean, P0 = unknown, P1 = unknown, P2 = string>(_control: P0, _textView: P1, _doCommandBySelector: P2): R;
    control_textView_completions_forPartialWordRange_indexOfSelectedItem<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = _NSRange, P4 = number>(_control: P0, _textView: P1, _completions: P2, _forPartialWordRange: P3, _indexOfSelectedItem: P4): R;
    controlTextDidEndEditing<R = void, P0 = unknown>(_controlTextDidEndEditing: P0): R;
    controlTextDidChange<R = void, P0 = unknown>(_controlTextDidChange: P0): R;
    control_textShouldBeginEditing<R = boolean, P0 = unknown, P1 = unknown>(_control: P0, _textShouldBeginEditing: P1): R;
    selectText<R = void, P0 = unknown>(_selectText: P0): R;
    _getOutOfTheWayAndPostNewDocumentAction<R = void, P0 = unknown>(__getOutOfTheWayAndPostNewDocumentAction: P0): R;
    newFolder<R = void, P0 = unknown>(_newFolder: P0): R;
    _handleNameFieldContentsChangedAsGoto<R = boolean>(): R;
    _shouldHandleAsGotoForTypedString<R = boolean, P0 = unknown>(__shouldHandleAsGotoForTypedString: P0): R;
    _isModalWindowOrSheetRunning<R = boolean>(): R;
    showGotoWithInitialFilename<R = boolean, P0 = unknown>(_showGotoWithInitialFilename: P0): R;
    filepathInputControllerClass<R = unknown>(): R;
    _perDialogPrefString<R = unknown, P0 = unknown>(__perDialogPrefString: P0): R;
    _storeUserSetHideExtensionButtonState<R = void>(): R;
    _fetchUserSetHideExtensionButtonState<R = boolean>(): R;
    _storeExpandedFrameSize<R = void>(): R;
    _storeExpandedFrameSizeValue<R = void, P0 = CGSize>(__storeExpandedFrameSizeValue: P0): R;
    _fetchExpandedFrameSize<R = CGSize, P0 = CGSize>(__fetchExpandedFrameSize: P0): R;
    _storeExpandedState<R = void>(): R;
    _fetchExpandedState<R = boolean>(): R;
    _writeFileListMode<R = void>(): R;
    _readFileListMode<R = void>(): R;
    _setMessageTextFieldValueNoLayout<R = boolean, P0 = unknown>(__setMessageTextFieldValueNoLayout: P0): R;
    _defaultMessageAttributes<R = unknown>(): R;
    _commitPendingEditsIn_nameField<R = void>(): R;
    _setNameFieldValueLastSet<R = void, P0 = unknown>(__setNameFieldValueLastSet: P0): R;
    setAllowsMultipleSelection<R = void, P0 = boolean>(_setAllowsMultipleSelection: P0): R;
    allowsMultipleSelection<R = boolean>(): R;
    setCanDownloadUbiquitousContents<R = void, P0 = boolean>(_setCanDownloadUbiquitousContents: P0): R;
    canDownloadUbiquitousContents<R = boolean>(): R;
    setCanResolveUbiquitousConflicts<R = void, P0 = boolean>(_setCanResolveUbiquitousConflicts: P0): R;
    canResolveUbiquitousConflicts<R = boolean>(): R;
    setCanChooseFiles<R = void, P0 = boolean>(_setCanChooseFiles: P0): R;
    canChooseFiles<R = boolean>(): R;
    setCanChooseDirectories<R = void, P0 = boolean>(_setCanChooseDirectories: P0): R;
    canChooseDirectories<R = boolean>(): R;
    setIsExtensionHidden<R = void, P0 = boolean>(_setIsExtensionHidden: P0): R;
    _handleShowAllExtensionsPrefChanged<R = void, P0 = unknown>(__handleShowAllExtensionsPrefChanged: P0): R;
    setResolvesAliases<R = void, P0 = boolean>(_setResolvesAliases: P0): R;
    resolvesAliases<R = boolean>(): R;
    _setIsExpandedAndStoreStateDictionaryMessage<R = void, P0 = unknown>(__setIsExpandedAndStoreStateDictionaryMessage: P0): R;
    _isExpandedAndStoreStateDictionaryMessage<R = unknown>(): R;
    toggleIsExpanded<R = void, P0 = unknown>(_toggleIsExpanded: P0): R;
    _namePanelDeltaFromCenter<R = number>(): R;
    _animatingExpandCollapse<R = boolean>(): R;
    set_animatingExpandCollapse<R = void, P0 = boolean>(_set_animatingExpandCollapse: P0): R;
    _markExpandAnimationEnd<R = void>(): R;
    _markExpandAnimationStart<R = void>(): R;
    shouldForceSize_andRunBlock<R = void, P0 = boolean, P1 = CDUnknownBlockType>(_shouldForceSize: P0, _andRunBlock: P1): R;
    createFakeConstraintsForStoredExpandedSize<R = unknown>(): R;
    _setIsExpanded_andStoreState<R = void, P0 = boolean, P1 = boolean>(__setIsExpanded: P0, _andStoreState: P1): R;
    _configureAll<R = void>(): R;
    _setIsExpanded<R = void, P0 = boolean>(__setIsExpanded: P0): R;
    _sendDelegateWillExpand<R = void, P0 = boolean>(__sendDelegateWillExpand: P0): R;
    _sendPanelWillExpand_toDelegate<R = void, P0 = boolean, P1 = unknown>(__sendPanelWillExpand: P0, _toDelegate: P1): R;
    _isExpanded<R = boolean>(): R;
    _reloadDisplayState<R = void>(): R;
    validateVisibleColumns<R = void>(): R;
    _refreshDelegateOptions<R = void>(): R;
    _setSupportedDelegateMethodsWithDelegate_overrides<R = void, P0 = unknown, P1 = unknown>(__setSupportedDelegateMethodsWithDelegate: P0, _overrides: P1): R;
    _clearDelegateOptions<R = void>(): R;
    _accessoryViewFrameDidChange<R = void, P0 = unknown>(__accessoryViewFrameDidChange: P0): R;
    _shouldAutosizeBasedOnAccessoryViewChanges<R = boolean>(): R;
    _isUserAccessoryViewFrameChange<R = boolean>(): R;
    setRemoteAccessoryViewDesiredSize<R = void, P0 = CGSize>(_setRemoteAccessoryViewDesiredSize: P0): R;
    _placeAccessoryViewInContainer<R = void, P0 = unknown>(__placeAccessoryViewInContainer: P0): R;
    _discloseAccessoryView_animate_accessoryViewChanged<R = void, P0 = boolean, P1 = boolean, P2 = boolean>(__discloseAccessoryView: P0, _animate: P1, _accessoryViewChanged: P2): R;
    _shouldAnimateAccessoryViewByResizingWindow<R = boolean>(): R;
    _discloseAccessoryViewShowingView_isBeginning_animate<R = void, P0 = boolean, P1 = boolean, P2 = boolean>(__discloseAccessoryViewShowingView: P0, _isBeginning: P1, _animate: P2): R;
    _shouldAnimateAccessoryView<R = boolean>(): R;
    _swapImageViewWithAccessoryViewAndShow<R = void, P0 = boolean>(__swapImageViewWithAccessoryViewAndShow: P0): R;
    _swapAccessoryViewWithImageViewAndDisplay<R = void, P0 = boolean>(__swapAccessoryViewWithImageViewAndDisplay: P0): R;
    _accessoryViewImageView<R = unknown>(): R;
    _setAccessoryViewImageView<R = void, P0 = unknown>(__setAccessoryViewImageView: P0): R;
    _getAccessoryViewScreenShot<R = unknown>(): R;
    _setShouldShowOptionsButton<R = void, P0 = boolean>(__setShouldShowOptionsButton: P0): R;
    _shouldShowOptionsButton<R = boolean>(): R;
    _changeOptionsButtonTitleIfNecessary<R = void>(): R;
    _durationMultiplier<R = number>(): R;
    _setRemoteAccessoryViewAvailable<R = void, P0 = boolean>(__setRemoteAccessoryViewAvailable: P0): R;
    _remoteAccessoryViewAvailable<R = boolean>(): R;
    _configureAccessoryView<R = void>(): R;
    _shouldShowAccessoryView<R = boolean>(): R;
    setAccessoryViewDisclosed<R = void, P0 = boolean>(_setAccessoryViewDisclosed: P0): R;
    isAccessoryViewDisclosed<R = boolean>(): R;
    _setAccessoryViewDisclosedVBKVO<R = void, P0 = boolean>(__setAccessoryViewDisclosedVBKVO: P0): R;
    _setAccessoryViewDisclosed<R = void, P0 = boolean>(__setAccessoryViewDisclosed: P0): R;
    _accessoryViewDisclosedVBKVO<R = boolean>(): R;
    _accessoryViewDisclosed<R = boolean>(): R;
    toggleOptionsView<R = void, P0 = unknown>(_toggleOptionsView: P0): R;
    _shouldAlwaysDiscloseAccessoryView<R = boolean>(): R;
    _accessoryViewDisclosureIsSupported<R = boolean>(): R;
    _setFrameForTimeMachineMode_animate<R = void, P0 = CGRect, P1 = boolean>(__setFrameForTimeMachineMode: P0, _animate: P1): R;
    _hideWindowForTimeMachineMode<R = void, P0 = boolean>(__hideWindowForTimeMachineMode: P0): R;
    _setFauxFilePackageTypes<R = void, P0 = unknown>(__setFauxFilePackageTypes: P0): R;
    _fauxFilePackageTypes<R = unknown>(): R;
    _setEnabledFileTypes<R = void, P0 = unknown>(__setEnabledFileTypes: P0): R;
    _enabledFileTypes<R = unknown>(): R;
    _preferredFileNameExtension<R = unknown>(): R;
    _isAllowedFileNameExtension<R = boolean, P0 = unknown>(__isAllowedFileNameExtension: P0): R;
    _filenameHasAcceptableFileType<R = boolean, P0 = unknown>(__filenameHasAcceptableFileType: P0): R;
    _filenameHasNonEmptyAcceptableFileType<R = boolean, P0 = unknown>(__filenameHasNonEmptyAcceptableFileType: P0): R;
    _updateForAllowedFileTypesChangedWithPreviousName_previousAllowedTypes_newAllowedFileTypes<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__updateForAllowedFileTypesChangedWithPreviousName: P0, _previousAllowedTypes: P1, _newAllowedFileTypes: P2): R;
    setRequiredFileType<R = void, P0 = unknown>(_setRequiredFileType: P0): R;
    requiredFileType<R = unknown>(): R;
    _saveMode<R = boolean>(): R;
    setDirectory<R = void, P0 = unknown>(_setDirectory: P0): R;
    directory<R = unknown>(): R;
    _directoryPreferringURL<R = unknown, P0 = boolean>(__directoryPreferringURL: P0): R;
    _isSaveFilenameLengthLegal<R = boolean>(): R;
    _filenamesAlwaysIncludingDirectories<R = unknown>(): R;
    filenames<R = unknown>(): R;
    _filenamesWithAlwaysIncludingDirectories_wantRawURLs<R = unknown, P0 = boolean, P1 = boolean>(__filenamesWithAlwaysIncludingDirectories: P0, _wantRawURLs: P1): R;
    _selectedURLsWithAlwaysIncludingDirectories_wantRawURLs<R = unknown, P0 = boolean, P1 = boolean>(__selectedURLsWithAlwaysIncludingDirectories: P0, _wantRawURLs: P1): R;
    _finderKitViewSelectedURLs<R = unknown>(): R;
    _selectNameFieldContentsExcludingExtension<R = void>(): R;
    _setInitialNameFieldContentsFromPosixName<R = void, P0 = unknown>(__setInitialNameFieldContentsFromPosixName: P0): R;
    _setNameFieldContentsFromPosixName_addToUndo<R = void, P0 = unknown, P1 = boolean>(__setNameFieldContentsFromPosixName: P0, _addToUndo: P1): R;
    _setUndoableNameFieldString<R = void, P0 = unknown>(__setUndoableNameFieldString: P0): R;
    _nameFieldContentsAsPosixName<R = unknown>(): R;
    _setHiddenExtension<R = void, P0 = unknown>(__setHiddenExtension: P0): R;
    _hiddenExtension<R = unknown>(): R;
    _setValidatedPosixName<R = void, P0 = unknown>(__setValidatedPosixName: P0): R;
    _validatedPosixName<R = unknown>(): R;
    URLs<R = unknown>(): R;
    _securityScopedURLs<R = unknown>(): R;
    _sandboxExtensions<R = unknown>(): R;
    _setSandboxExtensions<R = void, P0 = unknown>(__setSandboxExtensions: P0): R;
    _sandboxPermissions<R = string>(): R;
    _setSandboxPermissions<R = void, P0 = string>(__setSandboxPermissions: P0): R;
    _securityScopedURL<R = unknown>(): R;
    filename<R = unknown>(): R;
    _handleNameFieldContentsChanged<R = void, P0 = unknown>(__handleNameFieldContentsChanged: P0): R;
    _updateNameFieldContentsFromHideExtensionButtonState<R = boolean>(): R;
    _updateHideExtensionButtonStateFromNameFieldContents<R = void>(): R;
    _updateNewFolderButtonEnabledState<R = void>(): R;
    _updateNewDocumentButtonEnabledState<R = void>(): R;
    _getNewFolderOrDocumentButtonOrNil<R = unknown>(): R;
    _updateRevertOriginalDocumentChangesButtonState<R = void>(): R;
    _updateOptionsButtonState<R = void>(): R;
    _rootDirectoryURLDefault<R = unknown>(): R;
    _directoryURLDefault<R = unknown>(): R;
    _defaultDocumentsDirectoryURL<R = unknown>(): R;
    _storeRootDirectory<R = void>(): R;
    _storeCurrentDirectory<R = void>(): R;
    _lastSavedRootDirectoryFromDefaults<R = unknown>(): R;
    _lastSavedDirectoryFromDefaults<R = unknown>(): R;
    _customizedPrefKey<R = unknown, P0 = unknown>(__customizedPrefKey: P0): R;
    _updateOkButtonEnabledState<R = void>(): R;
    _shouldEnableShareButton<R = boolean>(): R;
    _handleGoIntoSelectedDirectory<R = void>(): R;
    _canGoIntoSelectedDirectory<R = boolean>(): R;
    _initPanelCommon<R = void>(): R;
    _restoreDefaultSettingsForOpenMode<R = void>(): R;
    _restoreDefaultSettingsForSaveMode<R = void>(): R;
    _restoreDefaultSettingsCommon<R = void>(): R;
    _orderRemoteWindow_sender<R = void, P0 = number, P1 = unknown>(__orderRemoteWindow: P0, _sender: P1): R;
    _navViewWindowOrderedOut<R = void>(): R;
    _navViewWindowOrderedIn<R = void>(): R;
    canBecomeMainWindow<R = boolean>(): R;
    newFolderControllerClass<R = unknown>(): R;
    _useRemotePanel<R = boolean>(): R;
    initWithOptions<R = unknown, P0 = unknown>(_initWithOptions: P0): R;
    _startRectForSheetHeightOffset<R = number>(): R;
    _finderKitView<R = unknown>(): R;
    _initializeiCloudOpenPanelBehavior<R = void>(): R;
    panel<R = unknown>(): R;
    _iCloudOpenPanel<R = boolean>(): R;
    _init_iCloudOpenPanel<R = void, P0 = boolean>(__init_iCloudOpenPanel: P0): R;
    _initAppCentric<R = void, P0 = boolean>(__initAppCentric: P0): R;
    _initSaveMode<R = void>(): R;
    warmUpPowerbox<R = void>(): R;
    _setRunningAsASheet<R = void, P0 = boolean>(__setRunningAsASheet: P0): R;
    _fauxToolbarShouldDragWindow<R = boolean>(): R;
    _runningAsASheet<R = boolean>(): R;
    _runningAsAService<R = boolean>(): R;
    _setRunningAsAService<R = void, P0 = boolean>(__setRunningAsAService: P0): R;
    _itemFromButton_withIdentifier_alsoBindHidden<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(__itemFromButton: P0, _withIdentifier: P1, _alsoBindHidden: P2): R;
    _itemFromButton_withIdentifier<R = unknown, P0 = unknown, P1 = unknown>(__itemFromButton: P0, _withIdentifier: P1): R;
    _makeBaseTouchBarWithIdentifier<R = unknown, P0 = unknown>(__makeBaseTouchBarWithIdentifier: P0): R;
    runModalForDirectory_file_relativeToWindow<R = number, P0 = unknown, P1 = unknown, P2 = unknown>(_runModalForDirectory: P0, _file: P1, _relativeToWindow: P2): R;
    runModalForDirectory_file_types_relativeToWindow<R = number, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(_runModalForDirectory: P0, _file: P1, _types: P2, _relativeToWindow: P3): R;
    _setIncludeNewFolderButton<R = void, P0 = boolean>(__setIncludeNewFolderButton: P0): R;
    _centerOnScreen<R = void>(): R;
    _canSendSynchronousMessagesToRemote<R = boolean>(): R;
    _setCanSendSynchronousMessagesToRemote<R = void, P0 = boolean>(__setCanSendSynchronousMessagesToRemote: P0): R;
    accessoryViewContainerContentFrameDidChange<R = void, P0 = unknown>(_accessoryViewContainerContentFrameDidChange: P0): R;
    _visibleFrameAvailableForPanelWithDocumentWindow<R = CGRect, P0 = unknown>(__visibleFrameAvailableForPanelWithDocumentWindow: P0): R;
    _visibleFrameAvailableForScreen<R = CGRect>(): R;
    _visibleFrameAvailableForScreenOfWindow<R = CGRect, P0 = unknown>(__visibleFrameAvailableForScreenOfWindow: P0): R;
    _documentWindowFrameForPanelRunningAsASheet<R = CGRect, P0 = unknown>(__documentWindowFrameForPanelRunningAsASheet: P0): R;
    _fixFetchExpandedFrameSizeForVisibleFrameWithDocumentWindow_visibleFrameAvailable<R = void, P0 = unknown, P1 = CGRect>(__fixFetchExpandedFrameSizeForVisibleFrameWithDocumentWindow: P0, _visibleFrameAvailable: P1): R;
    _fixupKeyboardLoop<R = void>(): R;
    _configureBottomControls<R = void>(): R;
    _appCentricSidebarWidth<R = number>(): R;
    _configureExtraControls<R = void>(): R;
    _configureSavePane<R = void>(): R;
    _actuallyDiscloseAccessoryView<R = void, P0 = boolean>(__actuallyDiscloseAccessoryView: P0): R;
    _configureAlertContentView<R = void>(): R;
    _configureMessageView<R = void>(): R;
    _messageContainer<R = unknown>(): R;
    _initContentView<R = void>(): R;
    _setupFileBrowserView<R = void>(): R;
    _makeFinderKitView<R = unknown>(): R;
    setContentView<R = void, P0 = unknown>(_setContentView: P0): R;
    _titlebarAuxiliaryHeight<R = number>(): R;
    setMinSize<R = void, P0 = CGSize>(_setMinSize: P0): R;
    accessibilityIsDescriptionAttributeSettable<R = boolean>(): R;
    accessibilityDescriptionAttribute<R = unknown>(): R;
    _unregisterKey_withViewBridgeService_onBridge_shouldRemoveObserversFromBridge_shouldRemoveObserversFromPanel<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = boolean, P4 = boolean>(__unregisterKey: P0, _withViewBridgeService: P1, _onBridge: P2, _shouldRemoveObserversFromBridge: P3, _shouldRemoveObserversFromPanel: P4): R;
    _registerKey_withViewBridgeService_onBridge_defaultObject_owner_assertOnNULLForKeys_shouldObserveBridge_bridgeShouldObservePanel<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = number, P5 = unknown, P6 = boolean, P7 = boolean>(__registerKey: P0, _withViewBridgeService: P1, _onBridge: P2, _defaultObject: P3, _owner: P4, _assertOnNULLForKeys: P5, _shouldObserveBridge: P6, _bridgeShouldObservePanel: P7): R;
    valueforUndefinedKey<R = unknown, P0 = unknown>(_valueforUndefinedKey: P0): R;
    setValue_forUndefinedKey<R = void, P0 = unknown, P1 = unknown>(_setValue: P0, _forUndefinedKey: P1): R;
    _trackObservedByVBKey_remove<R = void, P0 = unknown, P1 = boolean>(__trackObservedByVBKey: P0, _remove: P1): R;
    _trackObservingVBKey_remove<R = void, P0 = unknown, P1 = boolean>(__trackObservingVBKey: P0, _remove: P1): R;
    _trackRegisteredVBKey_remove<R = void, P0 = unknown, P1 = boolean>(__trackRegisteredVBKey: P0, _remove: P1): R;
    _setSupportedDelegateMethods<R = void, P0 = unknown>(__setSupportedDelegateMethods: P0): R;
    _supportedDelegateMethods<R = unknown>(): R;
    _unregisterKVOWithViewBridgeService_onBridge<R = void, P0 = unknown, P1 = unknown>(__unregisterKVOWithViewBridgeService: P0, _onBridge: P1): R;
    _registerKVOWithViewBridgeService_onBridge<R = void, P0 = unknown, P1 = unknown>(__registerKVOWithViewBridgeService: P0, _onBridge: P1): R;
    defaultNSNumberBOOLObjectForKey<R = unknown, P0 = unknown>(_defaultNSNumberBOOLObjectForKey: P0): R;
    defaultObjectForKey<R = unknown, P0 = unknown>(_defaultObjectForKey: P0): R;
    tagNames<R = NSArray>(): R;
    setTagNames<R = void, P0 = NSArray>(_v: P0): R;
    showsTagField<R = boolean>(): R;
    setShowsTagField<R = void, P0 = boolean>(_v: P0): R;
    message<R = NSString>(): R;
    setMessage<R = void, P0 = NSString>(_v: P0): R;
    nameFieldStringValue<R = NSString>(): R;
    setNameFieldStringValue<R = void, P0 = NSString>(_v: P0): R;
    nameFieldLabel<R = NSString>(): R;
    setNameFieldLabel<R = void, P0 = NSString>(_v: P0): R;
    title<R = NSString>(): R;
    setTitle<R = void, P0 = NSString>(_v: P0): R;
    prompt<R = NSString>(): R;
    setPrompt<R = void, P0 = NSString>(_v: P0): R;
    treatsFilePackagesAsDirectories<R = boolean>(): R;
    setTreatsFilePackagesAsDirectories<R = void, P0 = boolean>(_v: P0): R;
    extensionHidden<R = boolean>(): R;
    setExtensionHidden<R = void, P0 = boolean>(_v: P0): R;
    canSelectHiddenExtension<R = boolean>(): R;
    setCanSelectHiddenExtension<R = void, P0 = boolean>(_v: P0): R;
    canCreateDirectories<R = boolean>(): R;
    setCanCreateDirectories<R = void, P0 = boolean>(_v: P0): R;
    expanded<R = boolean>(): R;
    delegate<R = NSOpenSavePanelDelegate>(): R;
    setDelegate<R = void, P0 = NSOpenSavePanelDelegate>(_v: P0): R;
    accessoryView<R = NSView>(): R;
    setAccessoryView<R = void, P0 = NSView>(_v: P0): R;
    showsHiddenFiles<R = boolean>(): R;
    setShowsHiddenFiles<R = void, P0 = boolean>(_v: P0): R;
    allowsOtherFileTypes<R = boolean>(): R;
    setAllowsOtherFileTypes<R = void, P0 = boolean>(_v: P0): R;
    allowedFileTypes<R = NSArray>(): R;
    setAllowedFileTypes<R = void, P0 = NSArray>(_v: P0): R;
    directoryURL<R = NSURL>(): R;
    setDirectoryURL<R = void, P0 = NSURL>(_v: P0): R;
    URL<R = NSURL>(): R;
    _itemIdentifiers<R = NSArray>(): R;
    debugDescription<R = NSString>(): R;
    description<R = NSString>(): R;
    hash<R = number>(): R;
    superclass<R = unknown>(): R;
  }
  namespace classes {
    export interface NSSavePanel<T = any> extends NSPanel, FIFinderViewDelegateProtocol, NSTouchBarDelegateProtocol {
      alloc<R = NSSavePanel>(): R;
      new: <R = NSSavePanel>() => R;
      _waitForURL_useSecurityScopedURL_withNameFieldString_thenSetTags<R = void, P0 = unknown, P1 = boolean, P2 = unknown, P3 = unknown>(__waitForURL: P0, _useSecurityScopedURL: P1, _withNameFieldString: P2, _thenSetTags: P3): R;
      _waitForURL_thenSetTags<R = void, P0 = unknown, P1 = unknown>(__waitForURL: P0, _thenSetTags: P1): R;
      keyPathsForValuesAffectingTags<R = unknown>(): R;
      _tagNamesForTags<R = unknown, P0 = unknown>(__tagNamesForTags: P0): R;
      _tagsForTagNames<R = unknown, P0 = unknown>(__tagsForTagNames: P0): R;
      _allowTagsFieldInPanel<R = boolean>(): R;
      _qlSeamlessOpenerClass<R = unknown>(): R;
      directoryPathAdjustedForSecurity<R = unknown, P0 = unknown>(_directoryPathAdjustedForSecurity: P0): R;
      _consumeSandboxExtensions<R = void, P0 = unknown>(__consumeSandboxExtensions: P0): R;
      _generateFileInfoForPaths_sandboxPermissions_auditToken<R = unknown, P0 = unknown, P1 = string, P2 = unknown>(__generateFileInfoForPaths: P0, _sandboxPermissions: P1, _auditToken: P2): R;
      _shouldCallDelegateMethodShouldShowFileNameForURL_path<R = boolean, P0 = unknown, P1 = unknown>(__shouldCallDelegateMethodShouldShowFileNameForURL: P0, _path: P1): R;
      newDocumentAfterDelay<R = void>(): R;
      newDocument<R = void, P0 = unknown>(_newDocument: P0): R;
      _defaultSettingForUbiquitousBehaviors<R = boolean>(): R;
      _shouldDiscloseAccessoryViewByDefaultForPanelThatIsSheet<R = boolean, P0 = boolean>(__shouldDiscloseAccessoryViewByDefaultForPanelThatIsSheet: P0): R;
      _hideWindowForTimeMachineMode_onPanel<R = void, P0 = boolean, P1 = unknown>(__hideWindowForTimeMachineMode: P0, _onPanel: P1): R;
      _arrayOfFilePathsFromArrayOfURLs<R = unknown, P0 = unknown>(__arrayOfFilePathsFromArrayOfURLs: P0): R;
      _storeRootDirectoryURL_forSaveMode<R = void, P0 = unknown, P1 = boolean>(__storeRootDirectoryURL: P0, _forSaveMode: P1): R;
      _lastSavedRootDirectoryForSaveMode<R = unknown, P0 = boolean>(__lastSavedRootDirectoryForSaveMode: P0): R;
      _applyOpenStylesToWindow<R = void, P0 = unknown>(__applyOpenStylesToWindow: P0): R;
      _orderRemoteWindow_toPlace_sender<R = void, P0 = unknown, P1 = number, P2 = unknown>(__orderRemoteWindow: P0, _toPlace: P1, _sender: P2): R;
      _showExistingOpenPanel<R = void, P0 = unknown>(__showExistingOpenPanel: P0): R;
      _setLevelForiCloudOpenPanel<R = void, P0 = unknown>(__setLevelForiCloudOpenPanel: P0): R;
      _shouldCreateAppCentricOpenPanel<R = boolean>(): R;
      _shouldCreateiCloudOpenPanel<R = boolean>(): R;
      _setShouldCreateAppCentricOpenPanel<R = void, P0 = boolean>(__setShouldCreateAppCentricOpenPanel: P0): R;
      _supportsAppCentricBrowsing<R = boolean>(): R;
      savePanel<R = unknown>(): R;
      _crunchyRawUnbonedPanel<R = unknown>(): R;
      newRemotePanel<R = unknown>(): R;
      _warmUp<R = void>(): R;
      _applicationContextHasEntitlement<R = boolean, P0 = string>(__applicationContextHasEntitlement: P0): R;
      _clientWithSecurityTaskRef_hasEntitlement_sandboxPermissions<R = boolean, P0 = __SecTask, P1 = string, P2 = string>(__clientWithSecurityTaskRef: P0, _hasEntitlement: P1, _sandboxPermissions: P2): R;
      _resolvedSymLinkedURL<R = unknown, P0 = unknown>(__resolvedSymLinkedURL: P0): R;
      _filenameHasAcceptableFileType_allowedFileTypes_allowsOtherFileTypes<R = boolean, P0 = unknown, P1 = unknown, P2 = boolean>(__filenameHasAcceptableFileType: P0, _allowedFileTypes: P1, _allowsOtherFileTypes: P2): R;
      _filenameHasNonEmptyAcceptableFileType_allowedFileTypes_allowsOtherFileTypes<R = boolean, P0 = unknown, P1 = unknown, P2 = boolean>(__filenameHasNonEmptyAcceptableFileType: P0, _allowedFileTypes: P1, _allowsOtherFileTypes: P2): R;
      _isDirectoryURL_treatFilePackagesAsDirectories_fauxFilePackageTypes_enabledFileTypes<R = boolean, P0 = unknown, P1 = boolean, P2 = unknown, P3 = unknown>(__isDirectoryURL: P0, _treatFilePackagesAsDirectories: P1, _fauxFilePackageTypes: P2, _enabledFileTypes: P3): R;
      _isFauxFilePackageURL_fauxFilePackageTypes_enabledFileTypes<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(__isFauxFilePackageURL: P0, _fauxFilePackageTypes: P1, _enabledFileTypes: P2): R;
      _nameWithStrictRequiredExtensionCheck_andPreferredFileExtension<R = unknown, P0 = unknown, P1 = unknown>(__nameWithStrictRequiredExtensionCheck: P0, _andPreferredFileExtension: P1): R;
      _nameWithLooseRequiredExtensionCheck_andPreferredFileExtension<R = unknown, P0 = unknown, P1 = unknown>(__nameWithLooseRequiredExtensionCheck: P0, _andPreferredFileExtension: P1): R;
      keyPathsForValuesAffecting_itemIdentifiers<R = unknown>(): R;
      _cachedAuditTokenForMovePanel<R = unknown>(): R;
      _containerURLsForRemoteProcessWithAuditToken<R = unknown, P0 = unknown>(__containerURLsForRemoteProcessWithAuditToken: P0): R;
      _minContentRectSize<R = CGSize>(): R;
      setValue_forUndefinedKey_onObject<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_setValue: P0, _forUndefinedKey: P1, _onObject: P2): R;
      _spiPropertySelectorForKey_withClass_isSetter_outSelector<R = void, P0 = unknown, P1 = unknown, P2 = boolean, P3 = string>(__spiPropertySelectorForKey: P0, _withClass: P1, _isSetter: P2, _outSelector: P3): R;
      kvoKeysForType<R = unknown, P0 = number>(_kvoKeysForType: P0): R;
      keyPathsForValuesAffectingValueForKey<R = unknown, P0 = unknown>(_keyPathsForValuesAffectingValueForKey: P0): R;
      _fileBrowserKVOKeys<R = unknown>(): R;
      _supportedDelegateMethodsFromDelegate<R = unknown, P0 = unknown>(__supportedDelegateMethodsFromDelegate: P0): R;
      _addToDefaultsCurrentDirectoryToRecentPlaces<R = void, P0 = unknown>(__addToDefaultsCurrentDirectoryToRecentPlaces: P0): R;
      _storeUserSetHideExtensionButtonState_toDefaultsUsingKey_forPanelType<R = void, P0 = boolean, P1 = unknown, P2 = boolean>(__storeUserSetHideExtensionButtonState: P0, _toDefaultsUsingKey: P1, _forPanelType: P2): R;
      _userSetHideExtensionButtonStateFromDefaultsUsingKey_forPanelType<R = boolean, P0 = unknown, P1 = boolean>(__userSetHideExtensionButtonStateFromDefaultsUsingKey: P0, _forPanelType: P1): R;
      _storeRootDirectoryUsingKey_rootURL_directoryPath<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__storeRootDirectoryUsingKey: P0, _rootURL: P1, _directoryPath: P2): R;
      _storeCurrentDirectoryUsingKey_directoryURL_rootURL<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__storeCurrentDirectoryUsingKey: P0, _directoryURL: P1, _rootURL: P2): R;
      _directoryForKey<R = unknown, P0 = unknown>(__directoryForKey: P0): R;
      _expandedFrameSizeForKey_minSize<R = CGSize, P0 = unknown, P1 = CGSize>(__expandedFrameSizeForKey: P0, _minSize: P1): R;
      _storeToDefaultsExpandedState_forPanelType<R = void, P0 = boolean, P1 = boolean>(__storeToDefaultsExpandedState: P0, _forPanelType: P1): R;
      _expandedStateFromDefaultsForPanelType<R = boolean, P0 = boolean>(__expandedStateFromDefaultsForPanelType: P0): R;
      _storeFrameSize_withKey<R = void, P0 = CGSize, P1 = unknown>(__storeFrameSize: P0, _withKey: P1): R;
      _shouldShowHiddenFiles<R = boolean>(): R;
      _writeToDefaultsFileListMode_forPanelType<R = void, P0 = number, P1 = boolean>(__writeToDefaultsFileListMode: P0, _forPanelType: P1): R;
      _mapNSNavFileListModeFromFinderViewStyle<R = number, P0 = number>(__mapNSNavFileListModeFromFinderViewStyle: P0): R;
      _mapFinderViewStyleFromNSNavFileListMode<R = number, P0 = number>(__mapFinderViewStyleFromNSNavFileListMode: P0): R;
      fileListModeForPanelInSaveMode_inDirectory_lastListForMediaBrowserMode<R = number, P0 = boolean, P1 = unknown, P2 = boolean>(_fileListModeForPanelInSaveMode: P0, _inDirectory: P1, _lastListForMediaBrowserMode: P2): R;
      _synchronizeDefaults<R = void>(): R;
      _NSNavRecentPlacesFromDefaults<R = unknown>(): R;
      _NSNavMaxRecentPlacesFromDefaults<R = number>(): R;
    }
  }
}

declare const NSSavePanel: cocoa.classes.NSSavePanel;
