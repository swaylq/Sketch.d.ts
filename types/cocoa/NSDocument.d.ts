/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSDocument<T0 = void, T1 = void, T2 = void> extends NSObject, NSUIActivityProviderProtocol, NSEditorRegistrationProtocol, NSFilePresenterProtocol, NSMenuItemValidationProtocol, NSUserInterfaceValidationsProtocol {
    revertToAlternateContents_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_revertToAlternateContents: P0, _ofType: P1, _error: P2): R;
    readFromAlternateContents_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_readFromAlternateContents: P0, _ofType: P1, _error: P2): R;
    alternateContentsDisassociationReason<R = number>(): R;
    mergeAlternateContentsToURL_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_mergeAlternateContentsToURL: P0, _completionHandler: P1): R;
    disassociateAlternateContentsWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_disassociateAlternateContentsWithCompletionHandler: P0): R;
    prepareToDisassociateAlternateContentsWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_prepareToDisassociateAlternateContentsWithCompletionHandler: P0): R;
    isAlternateContentsMergeRequiredWhenMovingFromURL_toURL<R = boolean, P0 = unknown, P1 = unknown>(_isAlternateContentsMergeRequiredWhenMovingFromURL: P0, _toURL: P1): R;
    alternateContents<R = unknown>(): R;
    setAlternateContents<R = void, P0 = unknown>(_setAlternateContents: P0): R;
    canEditTags<R = boolean>(): R;
    isConnectedToCollaborationServer<R = boolean>(): R;
    _localizedSharingOwnerName<R = unknown>(): R;
    _isViewOnlyForSharing<R = boolean>(): R;
    _isSharingParticipant<R = boolean>(): R;
    sharingState<R = number>(): R;
    _autosaveElsewhereReason<R = number>(): R;
    recentDocumentID<R = number>(): R;
    setRecentDocumentID<R = void, P0 = number>(_setRecentDocumentID: P0): R;
    restoreStateWithCoder<R = void, P0 = unknown>(_restoreStateWithCoder: P0): R;
    encodeRestorableStateWithCoder_backgroundQueue<R = void, P0 = unknown, P1 = unknown>(_encodeRestorableStateWithCoder: P0, _backgroundQueue: P1): R;
    encodeRestorableStateWithCoder<R = void, P0 = unknown>(_encodeRestorableStateWithCoder: P0): R;
    _currentFileSize<R = number>(): R;
    _currentFileModificationDate<R = unknown>(): R;
    _discardEditing<R = void>(): R;
    _commitEditingWithDelegate_didSomethingSelector_contextInfo_thenContinue<R = void, P0 = unknown, P1 = string, P2 = void, P3 = CDUnknownBlockType>(__commitEditingWithDelegate: P0, _didSomethingSelector: P1, _contextInfo: P2, _thenContinue: P3): R;
    _commitEditingThenContinue<R = void, P0 = CDUnknownBlockType>(__commitEditingThenContinue: P0): R;
    _editor_didCommit_soContinue<R = void, P0 = unknown, P1 = boolean, P2 = CDUnknownBlockType>(__editor: P0, _didCommit: P1, _soContinue: P2): R;
    _topEditor<R = unknown>(): R;
    _isBeingEdited<R = boolean>(): R;
    _presentedItemTemporaryVersionStorageIdentifier<R = unknown>(): R;
    presentedItemDidDisconnect<R = void>(): R;
    accommodatePresentedItemDisconnectionWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_accommodatePresentedItemDisconnectionWithCompletionHandler: P0): R;
    _handleRemoteMoveToTrash<R = void>(): R;
    _handleRemoteDeletionValidationWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(__handleRemoteDeletionValidationWithCompletionHandler: P0): R;
    _presentAlertForRemoteDeletionValidationWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(__presentAlertForRemoteDeletionValidationWithCompletionHandler: P0): R;
    _showAlertForPurgedDocumentWithAlternateContents<R = void, P0 = unknown>(__showAlertForPurgedDocumentWithAlternateContents: P0): R;
    _handlePurgedDocumentWithURL_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__handlePurgedDocumentWithURL: P0, _completionHandler: P1): R;
    presentAlertForPurgedUbiquitousDocumentWithFormerAlternateContents_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_presentAlertForPurgedUbiquitousDocumentWithFormerAlternateContents: P0, _completionHandler: P1): R;
    validatePresentedItemRemoteDeletionWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_validatePresentedItemRemoteDeletionWithCompletionHandler: P0): R;
    presentedItemHasUnsavedChangesWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_presentedItemHasUnsavedChangesWithCompletionHandler: P0): R;
    setProviderPurposeIdentifier<R = void, P0 = unknown>(_setProviderPurposeIdentifier: P0): R;
    _populateRevertToMenu<R = void, P0 = unknown>(__populateRevertToMenu: P0): R;
    _updateTitleForMenuItem_originalTitle<R = void, P0 = unknown, P1 = unknown>(__updateTitleForMenuItem: P0, _originalTitle: P1): R;
    _canSave<R = boolean>(): R;
    fileNameExtensionForType_saveOperation<R = unknown, P0 = unknown, P1 = number>(_fileNameExtensionForType: P0, _saveOperation: P1): R;
    writableTypesForSaveOperation<R = unknown, P0 = number>(_writableTypesForSaveOperation: P0): R;
    updateDocumentTitlebarButtonState<R = void>(): R;
    _documentEditingState<R = number>(): R;
    _warmupTitlebarPopover<R = void>(): R;
    _requestViewControllerForDocumentTitlebarPopover_thenDisplayPopoverUsingBlock<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__requestViewControllerForDocumentTitlebarPopover: P0, _thenDisplayPopoverUsingBlock: P1): R;
    _addRevertItemsToMenu<R = void, P0 = unknown>(__addRevertItemsToMenu: P0): R;
    _endVersionsButtonUpdates<R = void>(): R;
    _beginVersionsButtonUpdates<R = void>(): R;
    _setShowAutosaveButton<R = void, P0 = boolean>(__setShowAutosaveButton: P0): R;
    _shouldShowAutosaveButtonForWindow<R = boolean, P0 = unknown>(__shouldShowAutosaveButtonForWindow: P0): R;
    _setDocumentUniquingNumber<R = void, P0 = number>(__setDocumentUniquingNumber: P0): R;
    _documentUniquingNumber<R = number>(): R;
    _transferWindowOwnership<R = unknown>(): R;
    _windowTitleDisplayName<R = unknown>(): R;
    _duplicateHasAutomaticallyChosenName<R = boolean>(): R;
    _suppressWindowTitleDisplayNameEmbellishment<R = boolean>(): R;
    _setSuppressWindowTitleDisplayNameEmbellishment<R = void, P0 = boolean>(__setSuppressWindowTitleDisplayNameEmbellishment: P0): R;
    _setDisplayName<R = void, P0 = unknown>(__setDisplayName: P0): R;
    __setDisplayName<R = void, P0 = unknown>(___setDisplayName: P0): R;
    shouldCloseWindowController_delegate_shouldCloseSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = string, P3 = void>(_shouldCloseWindowController: P0, _delegate: P1, _shouldCloseSelector: P2, _contextInfo: P3): R;
    _windowsDidShow<R = void>(): R;
    _tabbingIdentifier<R = unknown>(): R;
    showWindows<R = void>(): R;
    removeWindowController<R = void, P0 = unknown>(_removeWindowController: P0): R;
    addWindowController<R = void, P0 = unknown>(_addWindowController: P0): R;
    setWindow<R = void, P0 = unknown>(_setWindow: P0): R;
    windowControllerDidLoadNib<R = void, P0 = unknown>(_windowControllerDidLoadNib: P0): R;
    windowControllerWillLoadNib<R = void, P0 = unknown>(_windowControllerWillLoadNib: P0): R;
    makeWindowControllers<R = void>(): R;
    _attemptNonModalErrorRecovery<R = void, P0 = unknown>(__attemptNonModalErrorRecovery: P0): R;
    _clearNonModalErrorsForSaveOperation<R = void, P0 = number>(__clearNonModalErrorsForSaveOperation: P0): R;
    _addNonModalError<R = void, P0 = unknown>(__addNonModalError: P0): R;
    _clearNonModalErrorForBucket<R = void, P0 = number>(__clearNonModalErrorForBucket: P0): R;
    _setNonModalErrors<R = void, P0 = unknown>(__setNonModalErrors: P0): R;
    _nonModalErrors<R = unknown>(): R;
    _nonModalError<R = unknown>(): R;
    _updateWindowControllersWithNonModalError<R = void, P0 = unknown>(__updateWindowControllersWithNonModalError: P0): R;
    _canDisplayDocumentPopovers<R = boolean>(): R;
    _makeNonModalErrorOfType_underlyingError<R = unknown, P0 = number, P1 = unknown>(__makeNonModalErrorOfType: P0, _underlyingError: P1): R;
    _errorUserInfoForNonModalErrorCode_underlyingError<R = unknown, P0 = number, P1 = unknown>(__errorUserInfoForNonModalErrorCode: P0, _underlyingError: P1): R;
    _shouldModallyPresentAutosavingError<R = boolean, P0 = unknown>(__shouldModallyPresentAutosavingError: P0): R;
    _canNonModallyPresentAutosavingError<R = boolean, P0 = unknown>(__canNonModallyPresentAutosavingError: P0): R;
    _presentErrors_thenContinue<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__presentErrors: P0, _thenContinue: P1): R;
    _presentError_thenContinue<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__presentError: P0, _thenContinue: P1): R;
    willNotPresentError<R = void, P0 = unknown>(_willNotPresentError: P0): R;
    willPresentError<R = unknown, P0 = unknown>(_willPresentError: P0): R;
    presentError<R = boolean, P0 = unknown>(_presentError: P0): R;
    presentError_modalForWindow_delegate_didPresentSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = string, P4 = void>(_presentError: P0, _modalForWindow: P1, _delegate: P2, _didPresentSelector: P3, _contextInfo: P4): R;
    _releaseUndoManager<R = void>(): R;
    _changeWasRedone<R = void, P0 = unknown>(__changeWasRedone: P0): R;
    _changeWasUndone<R = void, P0 = unknown>(__changeWasUndone: P0): R;
    _changeWasDone<R = void, P0 = unknown>(__changeWasDone: P0): R;
    _preventEditing<R = boolean>(): R;
    _waitForEditorCommittingThenPerformBlock<R = void, P0 = CDUnknownBlockType>(__waitForEditorCommittingThenPerformBlock: P0): R;
    _changeWillBeDone<R = void, P0 = unknown>(__changeWillBeDone: P0): R;
    _ensureDocumentIsUnlockedForMoveOrRenameThenContinue<R = void, P0 = CDUnknownBlockType>(__ensureDocumentIsUnlockedForMoveOrRenameThenContinue: P0): R;
    _checkAutosavingIgnoringSafetyChecksThenContinue<R = void, P0 = CDUnknownBlockType>(__checkAutosavingIgnoringSafetyChecksThenContinue: P0): R;
    _checkAutosavingThenUpdateChangeCount<R = void, P0 = number>(__checkAutosavingThenUpdateChangeCount: P0): R;
    _checkAutosavingThenUpdateChangeCountShouldInterruptMainThreadBlocking<R = boolean>(): R;
    _checkAutosavingThenContinue<R = void, P0 = CDUnknownBlockType>(__checkAutosavingThenContinue: P0): R;
    _checkAutosavingAndUpdateLockedState<R = void>(): R;
    _updateLockedStateWithAutosavingSafetyError<R = void, P0 = unknown>(__updateLockedStateWithAutosavingSafetyError: P0): R;
    _presentError_ignoreAccidentalEvents_thenContinue<R = void, P0 = unknown, P1 = boolean, P2 = CDUnknownBlockType>(__presentError: P0, _ignoreAccidentalEvents: P1, _thenContinue: P2): R;
    updateChangeCountWithToken_forSaveOperation<R = void, P0 = unknown, P1 = number>(_updateChangeCountWithToken: P0, _forSaveOperation: P1): R;
    changeCountTokenForSaveOperation<R = unknown, P0 = number>(_changeCountTokenForSaveOperation: P0): R;
    updateChangeCount<R = void, P0 = number>(_updateChangeCount: P0): R;
    _updateStateFromEdited_showsPanel_recentChanges_unautosavedChanges_afterSaving<R = void, P0 = boolean, P1 = boolean, P2 = boolean, P3 = boolean, P4 = boolean>(__updateStateFromEdited: P0, _showsPanel: P1, _recentChanges: P2, _unautosavedChanges: P3, _afterSaving: P4): R;
    _updateStateFromEdited_recentChanges<R = void, P0 = boolean, P1 = boolean>(__updateStateFromEdited: P0, _recentChanges: P1): R;
    _updateSuddenTermination<R = void>(): R;
    _updateDocumentEditedAndAnimate<R = void, P0 = boolean>(__updateDocumentEditedAndAnimate: P0): R;
    _windowsShouldDisplayDocumentShowsPanel<R = boolean>(): R;
    _documentShowsPanelOnClose<R = boolean>(): R;
    _documentShowsPanelOnCloseAndIsVisibleInWindow<R = boolean, P0 = string>(__documentShowsPanelOnCloseAndIsVisibleInWindow: P0): R;
    _updateWindowControllersWithShowsPanelOnClose<R = void, P0 = boolean>(__updateWindowControllersWithShowsPanelOnClose: P0): R;
    isClosed<R = boolean>(): R;
    hasExplicitChanges<R = boolean>(): R;
    _allUnautosavedChangesAreDiscardable<R = boolean>(): R;
    hasRecentChanges<R = boolean>(): R;
    _cancelTitleEditing<R = boolean>(): R;
    renameDocument<R = void, P0 = unknown>(_renameDocument: P0): R;
    renameToURL_extensionHidden_completionHandler<R = void, P0 = unknown, P1 = boolean, P2 = CDUnknownBlockType>(_renameToURL: P0, _extensionHidden: P1, _completionHandler: P2): R;
    renameDocumentToURL_automaticallyChosen_extensionHidden_completionHandler<R = void, P0 = unknown, P1 = boolean, P2 = boolean, P3 = CDUnknownBlockType>(_renameDocumentToURL: P0, _automaticallyChosen: P1, _extensionHidden: P2, _completionHandler: P3): R;
    prepareRenameSession<R = void, P0 = unknown>(_prepareRenameSession: P0): R;
    renameToDisplayName_grantHandler_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType, P2 = CDUnknownBlockType>(_renameToDisplayName: P0, _grantHandler: P1, _completionHandler: P2): R;
    _renameWithProposedName_grantHandler_destinationURL_hideExtensions_nameChecked_trashChecked_overwriteChecked_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType, P2 = unknown, P3 = boolean, P4 = boolean, P5 = boolean, P6 = boolean, P7 = CDUnknownBlockType>(__renameWithProposedName: P0, _grantHandler: P1, _destinationURL: P2, _hideExtensions: P3, _nameChecked: P4, _trashChecked: P5, _overwriteChecked: P6, _completionHandler: P7): R;
    _recoverableRenameFileError_proposedName_destinationURL_retryRenamer_renameCanceler<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = CDUnknownBlockType, P4 = CDUnknownBlockType>(__recoverableRenameFileError: P0, _proposedName: P1, _destinationURL: P2, _retryRenamer: P3, _renameCanceler: P4): R;
    runModalPrintOperation_delegate_didRunSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = string, P3 = void>(_runModalPrintOperation: P0, _delegate: P1, _didRunSelector: P2, _contextInfo: P3): R;
    printOperationWithSettings_error<R = unknown, P0 = unknown, P1 = unknown>(_printOperationWithSettings: P0, _error: P1): R;
    _printJobTitle<R = unknown>(): R;
    printDocumentWithSettings_showPrintPanel_delegate_didPrintSelector_contextInfo<R = void, P0 = unknown, P1 = boolean, P2 = unknown, P3 = string, P4 = void>(_printDocumentWithSettings: P0, _showPrintPanel: P1, _delegate: P2, _didPrintSelector: P3, _contextInfo: P4): R;
    _willPresentPrintingError<R = unknown, P0 = unknown>(__willPresentPrintingError: P0): R;
    saveDocumentToPDF<R = void, P0 = unknown>(_saveDocumentToPDF: P0): R;
    printDocument<R = void, P0 = unknown>(_printDocument: P0): R;
    shouldChangePrintInfo<R = boolean, P0 = unknown>(_shouldChangePrintInfo: P0): R;
    preparePageLayout<R = boolean, P0 = unknown>(_preparePageLayout: P0): R;
    runModalPageLayoutWithPrintInfo_delegate_didRunSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = string, P3 = void>(_runModalPageLayoutWithPrintInfo: P0, _delegate: P1, _didRunSelector: P2, _contextInfo: P3): R;
    runPageLayout<R = void, P0 = unknown>(_runPageLayout: P0): R;
    _unlockAndReturnError<R = boolean, P0 = unknown>(__unlockAndReturnError: P0): R;
    _errorForUnlockFailureWithUnderlyingError<R = unknown, P0 = unknown>(__errorForUnlockFailureWithUnderlyingError: P0): R;
    unlockWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_unlockWithCompletionHandler: P0): R;
    unlockDocumentWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_unlockDocumentWithCompletionHandler: P0): R;
    unlockDocument<R = void, P0 = unknown>(_unlockDocument: P0): R;
    lockWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_lockWithCompletionHandler: P0): R;
    lockDocumentWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_lockDocumentWithCompletionHandler: P0): R;
    lockDocument<R = void, P0 = unknown>(_lockDocument: P0): R;
    setLocked<R = void, P0 = boolean>(_setLocked: P0): R;
    _shouldSaveDuplicateAtDestinationWithUserEnteredName<R = boolean, P0 = boolean>(__shouldSaveDuplicateAtDestinationWithUserEnteredName: P0): R;
    _autoDuplicateOriginalDocumentURL<R = unknown>(): R;
    _setAutoDuplicateOriginalDocumentURL<R = void, P0 = unknown>(__setAutoDuplicateOriginalDocumentURL: P0): R;
    _duplicateDocumentDestinationURL<R = unknown>(): R;
    _setDuplicateDocumentDestinationURL<R = void, P0 = unknown>(__setDuplicateDocumentDestinationURL: P0): R;
    _isDuplicateDocumentDestinationWritable<R = boolean>(): R;
    _originalDocumentURL<R = unknown>(): R;
    _setOriginalDocumentURL<R = void, P0 = unknown>(__setOriginalDocumentURL: P0): R;
    _isAutoDuplicateFromEmailAttachment<R = boolean>(): R;
    _setAutoDuplicateFromEmailAttachment<R = void, P0 = boolean>(__setAutoDuplicateFromEmailAttachment: P0): R;
    _isAutoDuplicate<R = boolean>(): R;
    _setAutoDuplicate<R = void, P0 = boolean>(__setAutoDuplicate: P0): R;
    _isDuplicate<R = boolean>(): R;
    _setDuplicate<R = void, P0 = boolean>(__setDuplicate: P0): R;
    _originalDisplayName<R = unknown>(): R;
    _setOriginalDisplayName<R = void, P0 = unknown>(__setOriginalDisplayName: P0): R;
    duplicateAndReturnError<R = unknown, P0 = unknown>(_duplicateAndReturnError: P0): R;
    _displayNameForDuplicating<R = unknown>(): R;
    duplicateDocumentWithDelegate_didDuplicateSelector_contextInfo<R = void, P0 = unknown, P1 = string, P2 = void>(_duplicateDocumentWithDelegate: P0, _didDuplicateSelector: P1, _contextInfo: P2): R;
    duplicateDocument<R = void, P0 = unknown>(_duplicateDocument: P0): R;
    close<R = void>(): R;
    _shouldDeleteOnClose<R = boolean>(): R;
    canCloseDocumentWithDelegate_shouldCloseSelector_contextInfo<R = void, P0 = unknown, P1 = string, P2 = void>(_canCloseDocumentWithDelegate: P0, _shouldCloseSelector: P1, _contextInfo: P2): R;
    _saveIfNecessaryWithDelegate_didSaveSelector_contextInfo<R = void, P0 = unknown, P1 = string, P2 = void>(__saveIfNecessaryWithDelegate: P0, _didSaveSelector: P1, _contextInfo: P2): R;
    shareItemData<R = unknown>(): R;
    shareItemImage<R = unknown>(): R;
    shareItemString<R = unknown>(): R;
    shareItemURL<R = unknown>(): R;
    shareItemType<R = unknown>(): R;
    ubiquitousItemURLForUserInterfaceItem<R = unknown, P0 = unknown>(_ubiquitousItemURLForUserInterfaceItem: P0): R;
    performCloudSharing<R = void, P0 = unknown>(_performCloudSharing: P0): R;
    shareItemAtURL_withService_completionHandler<R = void, P0 = unknown, P1 = unknown, P2 = CDUnknownBlockType>(_shareItemAtURL: P0, _withService: P1, _completionHandler: P2): R;
    shareDocumentWithSharingService_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_shareDocumentWithSharingService: P0, _completionHandler: P1): R;
    prepareSharingServicePicker<R = void, P0 = unknown>(_prepareSharingServicePicker: P0): R;
    shareUbiquitousDocumentWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_shareUbiquitousDocumentWithCompletionHandler: P0): R;
    prepareCloudSharingPanel<R = boolean, P0 = unknown>(_prepareCloudSharingPanel: P0): R;
    shareUbiquitousDocument<R = void, P0 = unknown>(_shareUbiquitousDocument: P0): R;
    _handleConflicts<R = void>(): R;
    resolveConflictRemotelyWithFileVersion_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_resolveConflictRemotelyWithFileVersion: P0, _completionHandler: P1): R;
    willResolveConflictWithFileVersion_continuer<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_willResolveConflictWithFileVersion: P0, _continuer: P1): R;
    willHandleConflictsWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_willHandleConflictsWithCompletionHandler: P0): R;
    _isHandlingConflicts<R = boolean>(): R;
    _setHandlingConflicts<R = void, P0 = boolean>(__setHandlingConflicts: P0): R;
    _ubiquityIdentityChanged<R = void>(): R;
    _updateUbiquitousStatusWithAttributes<R = void, P0 = unknown>(__updateUbiquitousStatusWithAttributes: P0): R;
    _updateUbiquitousQuery<R = void>(): R;
    moveDocumentToUbiquityContainer<R = void, P0 = unknown>(_moveDocumentToUbiquityContainer: P0): R;
    stopBrowsingVersionsWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_stopBrowsingVersionsWithCompletionHandler: P0): R;
    browseDocumentVersions<R = void, P0 = unknown>(_browseDocumentVersions: P0): R;
    _presentsVersionsUserInterface<R = boolean>(): R;
    preservesLocalVersions<R = boolean>(): R;
    _moveDocumentToURL_andHideExtension_completionHandler<R = void, P0 = unknown, P1 = boolean, P2 = CDUnknownBlockType>(__moveDocumentToURL: P0, _andHideExtension: P1, _completionHandler: P2): R;
    _replacementTypeForSaveAsInsteadOfMoveToURL_modifiedURL_hideExtension<R = unknown, P0 = unknown, P1 = unknown, P2 = string>(__replacementTypeForSaveAsInsteadOfMoveToURL: P0, _modifiedURL: P1, _hideExtension: P2): R;
    _configureTitlebarPopoverViewBridgeInfo<R = void, P0 = unknown>(__configureTitlebarPopoverViewBridgeInfo: P0): R;
    _updateTitlebarPopoverViewBridgeInfo<R = void, P0 = unknown>(__updateTitlebarPopoverViewBridgeInfo: P0): R;
    _commonSetCurrentStateForTitlebarPopoverViewBridgeInfo<R = void, P0 = unknown>(__commonSetCurrentStateForTitlebarPopoverViewBridgeInfo: P0): R;
    _willPresentMovingError<R = unknown, P0 = unknown>(__willPresentMovingError: P0): R;
    moveToURL_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_moveToURL: P0, _completionHandler: P1): R;
    _prepareToMoveToURL_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__prepareToMoveToURL: P0, _completionHandler: P1): R;
    _handleOtherFromDocumentTitlebarPopoverThenContinue<R = void, P0 = CDUnknownBlockType>(__handleOtherFromDocumentTitlebarPopoverThenContinue: P0): R;
    _preparedOpenPanelForMovingWithDirectoryURL<R = unknown, P0 = unknown>(__preparedOpenPanelForMovingWithDirectoryURL: P0): R;
    runModalMovePanelWithDelegate_didMoveSelector_contextInfo<R = void, P0 = unknown, P1 = string, P2 = void>(_runModalMovePanelWithDelegate: P0, _didMoveSelector: P1, _contextInfo: P2): R;
    _runModalOpenPanelForMoving_thenContinue<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__runModalOpenPanelForMoving: P0, _thenContinue: P1): R;
    _openPanelForOtherInMovePanel<R = unknown, P0 = unknown>(__openPanelForOtherInMovePanel: P0): R;
    _moveToURL_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__moveToURL: P0, _completionHandler: P1): R;
    _preparedMovePanel<R = unknown>(): R;
    moveDocumentWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_moveDocumentWithCompletionHandler: P0): R;
    prepareMovePanel<R = boolean, P0 = unknown>(_prepareMovePanel: P0): R;
    moveDocument<R = void, P0 = unknown>(_moveDocument: P0): R;
    _shouldSetTagsForSaveOperation<R = boolean, P0 = number>(__shouldSetTagsForSaveOperation: P0): R;
    _setFileTagNames<R = void, P0 = unknown>(__setFileTagNames: P0): R;
    _tagNames<R = unknown>(): R;
    _setTagNames<R = void, P0 = unknown>(__setTagNames: P0): R;
    _automaticallyDuplicate<R = void>(): R;
    _automaticallyDuplicateThenUpdateChangeCount<R = void, P0 = number>(__automaticallyDuplicateThenUpdateChangeCount: P0): R;
    _shouldAutomaticallyDuplicate<R = boolean>(): R;
    editingShouldAutomaticallyDuplicate<R = boolean>(): R;
    _isOtherWellKnownAttachment<R = boolean>(): R;
    _isEmailAttachment<R = boolean>(): R;
    _fileURLForNewDocumentWithFileSystemUniquing_customDirectoryURL<R = unknown, P0 = boolean, P1 = unknown>(__fileURLForNewDocumentWithFileSystemUniquing: P0, _customDirectoryURL: P1): R;
    _shouldSetDraftAttributeForSaveOperation<R = boolean, P0 = number>(__shouldSetDraftAttributeForSaveOperation: P0): R;
    needsAutosaveAsDraft<R = boolean>(): R;
    _canImplicitlySaveDocument<R = boolean>(): R;
    _readFileIsDraft<R = void>(): R;
    _setFileIsDraft<R = void, P0 = boolean>(__setFileIsDraft: P0): R;
    _setFileAtURL_isDraft<R = void, P0 = unknown, P1 = boolean>(__setFileAtURL: P0, _isDraft: P1): R;
    _draftHashForName<R = unknown, P0 = unknown>(__draftHashForName: P0): R;
    defaultDraftName<R = unknown>(): R;
    _autosavingError<R = unknown>(): R;
    _setAutosavingError_presented<R = void, P0 = unknown, P1 = boolean>(__setAutosavingError: P0, _presented: P1): R;
    autosaveWithImplicitCancellability_completionHandler<R = void, P0 = boolean, P1 = CDUnknownBlockType>(_autosaveWithImplicitCancellability: P0, _completionHandler: P1): R;
    autosaveDocumentWithDelegate_didAutosaveSelector_contextInfo<R = void, P0 = unknown, P1 = string, P2 = void>(_autosaveDocumentWithDelegate: P0, _didAutosaveSelector: P1, _contextInfo: P2): R;
    _autosaveDocumentWithDelegate_didAutosaveSelector_implicitCancellability_contextInfo<R = void, P0 = unknown, P1 = string, P2 = boolean, P3 = void>(__autosaveDocumentWithDelegate: P0, _didAutosaveSelector: P1, _implicitCancellability: P2, _contextInfo: P3): R;
    scheduleAutosaving<R = void>(): R;
    _scheduleAutosavingAfterDelay_reset<R = void, P0 = number, P1 = boolean>(__scheduleAutosavingAfterDelay: P0, _reset: P1): R;
    _rescheduleAutosaving<R = void>(): R;
    _autosaveDocumentBecauseOfTimerWithCancellability<R = void, P0 = boolean>(__autosaveDocumentBecauseOfTimerWithCancellability: P0): R;
    _autosavingDelay<R = number>(): R;
    _isPeriodicAutosavingEnabled<R = boolean>(): R;
    _enablePeriodicAutosaving<R = void>(): R;
    _disablePeriodicAutosaving<R = void>(): R;
    autosavingDelay<R = number>(): R;
    _checkAdvisoryAutosavingSafety<R = void>(): R;
    _checkAutosavingAndReturnError<R = boolean, P0 = unknown>(__checkAutosavingAndReturnError: P0): R;
    checkAutosavingSafetyAndReturnError<R = boolean, P0 = unknown>(_checkAutosavingSafetyAndReturnError: P0): R;
    checkAutosavingPossibilityAndReturnError<R = boolean, P0 = unknown>(_checkAutosavingPossibilityAndReturnError: P0): R;
    _checkAutosavingPossibilityAndReturnError<R = boolean, P0 = unknown>(__checkAutosavingPossibilityAndReturnError: P0): R;
    _autosavingPossibilityConcern<R = number>(): R;
    _errorForAutosavingSafetyConcern_allowingDuplicate_userInfo<R = unknown, P0 = number, P1 = boolean, P2 = unknown>(__errorForAutosavingSafetyConcern: P0, _allowingDuplicate: P1, _userInfo: P2): R;
    _silentlyRecoverableVariantOfSavingError_resaver<R = unknown, P0 = unknown, P1 = CDUnknownBlockType>(__silentlyRecoverableVariantOfSavingError: P0, _resaver: P1): R;
    _silentlyRecoverableVariantOfDiskFullError_resaver<R = unknown, P0 = unknown, P1 = CDUnknownBlockType>(__silentlyRecoverableVariantOfDiskFullError: P0, _resaver: P1): R;
    _attemptToFreeDiskSpace<R = void>(): R;
    _errorForExistingFileWhenChangingTypesWithURL<R = unknown, P0 = unknown>(__errorForExistingFileWhenChangingTypesWithURL: P0): R;
    _errorForOverwrittenFileWithSandboxExtension_andSaver<R = unknown, P0 = string, P1 = CDUnknownBlockType>(__errorForOverwrittenFileWithSandboxExtension: P0, _andSaver: P1): R;
    _willPresentSavingError_withURL_ofType_forOperation_recoveryContinuer<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = number, P4 = CDUnknownBlockType>(__willPresentSavingError: P0, _withURL: P1, _ofType: P2, _forOperation: P3, _recoveryContinuer: P4): R;
    canAsynchronouslyWriteToURL_ofType_forSaveOperation<R = boolean, P0 = unknown, P1 = unknown, P2 = number>(_canAsynchronouslyWriteToURL: P0, _ofType: P1, _forSaveOperation: P2): R;
    saveToURL_ofType_forSaveOperation_completionHandler<R = void, P0 = unknown, P1 = unknown, P2 = number, P3 = CDUnknownBlockType>(_saveToURL: P0, _ofType: P1, _forSaveOperation: P2, _completionHandler: P3): R;
    saveToURL_ofType_forSaveOperation_delegate_didSaveSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown, P4 = string, P5 = void>(_saveToURL: P0, _ofType: P1, _forSaveOperation: P2, _delegate: P3, _didSaveSelector: P4, _contextInfo: P5): R;
    tagsFromLastRunSavePanel<R = unknown>(): R;
    tagNamesFromLastRunSavePanel<R = unknown>(): R;
    prepareSavePanel<R = boolean, P0 = unknown>(_prepareSavePanel: P0): R;
    runModalSavePanelForSaveOperation_delegate_didSaveSelector_contextInfo<R = void, P0 = number, P1 = unknown, P2 = string, P3 = void>(_runModalSavePanelForSaveOperation: P0, _delegate: P1, _didSaveSelector: P2, _contextInfo: P3): R;
    changeSaveType<R = void, P0 = unknown>(_changeSaveType: P0): R;
    saveDocumentWithDelegate_didSaveSelector_contextInfo<R = void, P0 = unknown, P1 = string, P2 = void>(_saveDocumentWithDelegate: P0, _didSaveSelector: P1, _contextInfo: P2): R;
    _handleDocumentFileChanges<R = void, P0 = unknown>(__handleDocumentFileChanges: P0): R;
    saveDocumentTo<R = void, P0 = unknown>(_saveDocumentTo: P0): R;
    saveDocumentAs<R = void, P0 = unknown>(_saveDocumentAs: P0): R;
    saveDocument<R = void, P0 = unknown>(_saveDocument: P0): R;
    _recoverableVariantOfOverwritingError_forOperation_url_type_temporaryDirectoryURL_newContentsURL_writer<R = unknown, P0 = unknown, P1 = number, P2 = unknown, P3 = unknown, P4 = unknown, P5 = unknown, P6 = CDUnknownBlockType>(__recoverableVariantOfOverwritingError: P0, _forOperation: P1, _url: P2, _type: P3, _temporaryDirectoryURL: P4, _newContentsURL: P5, _writer: P6): R;
    _presentableFileNameForSaveOperation_url<R = unknown, P0 = number, P1 = unknown>(__presentableFileNameForSaveOperation: P0, _url: P1): R;
    fileAttributesToWriteToURL_ofType_forSaveOperation_originalContentsURL_error<R = unknown, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown, P4 = unknown>(_fileAttributesToWriteToURL: P0, _ofType: P1, _forSaveOperation: P2, _originalContentsURL: P3, _error: P4): R;
    writeToURL_ofType_forSaveOperation_originalContentsURL_error<R = boolean, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown, P4 = unknown>(_writeToURL: P0, _ofType: P1, _forSaveOperation: P2, _originalContentsURL: P3, _error: P4): R;
    writeSafelyToURL_ofType_forSaveOperation_error<R = boolean, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown>(_writeSafelyToURL: P0, _ofType: P1, _forSaveOperation: P2, _error: P3): R;
    isAutosavingCritical<R = boolean>(): R;
    unblockUserInteraction<R = void>(): R;
    dataOfType_error<R = unknown, P0 = unknown, P1 = unknown>(_dataOfType: P0, _error: P1): R;
    fileWrapperOfType_error<R = unknown, P0 = unknown, P1 = unknown>(_fileWrapperOfType: P0, _error: P1): R;
    writeToURL_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_writeToURL: P0, _ofType: P1, _error: P2): R;
    readFromData_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_readFromData: P0, _ofType: P1, _error: P2): R;
    readFromFileWrapper_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_readFromFileWrapper: P0, _ofType: P1, _error: P2): R;
    readFromURL_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_readFromURL: P0, _ofType: P1, _error: P2): R;
    revertToContentsOfURL_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_revertToContentsOfURL: P0, _ofType: P1, _error: P2): R;
    _updateAfterRevertingToContentsOfOwnFileURL_ofType<R = void, P0 = unknown, P1 = unknown>(__updateAfterRevertingToContentsOfOwnFileURL: P0, _ofType: P1): R;
    revertDocumentToSaved<R = void, P0 = unknown>(_revertDocumentToSaved: P0): R;
    _revertToVersionForTag_thenContinue<R = void, P0 = number, P1 = CDUnknownBlockType>(__revertToVersionForTag: P0, _thenContinue: P1): R;
    _revertToDiscardRecentChangesOrBrowseVersions_thenContinue<R = void, P0 = boolean, P1 = CDUnknownBlockType>(__revertToDiscardRecentChangesOrBrowseVersions: P0, _thenContinue: P1): R;
    _revertToDiscardRecentChangesPreservingFirst_error<R = boolean, P0 = boolean, P1 = unknown>(__revertToDiscardRecentChangesPreservingFirst: P0, _error: P1): R;
    _canRevertToDiscardRecentChanges<R = boolean>(): R;
    willRestoreVersion_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_willRestoreVersion: P0, _completionHandler: P1): R;
    _revertToVersion_thenContinue<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__revertToVersion: P0, _thenContinue: P1): R;
    _revertToChosenVersion_orAlternateContents_thenContinue<R = void, P0 = unknown, P1 = unknown, P2 = CDUnknownBlockType>(__revertToChosenVersion: P0, _orAlternateContents: P1, _thenContinue: P2): R;
    _checkShouldRevertToChosenVersionThenContinue<R = void, P0 = CDUnknownBlockType>(__checkShouldRevertToChosenVersionThenContinue: P0): R;
    _revertToAlternateContents_preservingFirst_error<R = boolean, P0 = unknown, P1 = boolean, P2 = unknown>(__revertToAlternateContents: P0, _preservingFirst: P1, _error: P2): R;
    _revertToVersion_preservingFirst_error<R = boolean, P0 = unknown, P1 = boolean, P2 = unknown>(__revertToVersion: P0, _preservingFirst: P1, _error: P2): R;
    _updatePersistentVersionsAfterRevertingToVersion<R = void, P0 = unknown>(__updatePersistentVersionsAfterRevertingToVersion: P0): R;
    _revertToSavedThenContinue<R = void, P0 = CDUnknownBlockType>(__revertToSavedThenContinue: P0): R;
    _revertToContentsOfURL_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(__revertToContentsOfURL: P0, _ofType: P1, _error: P2): R;
    _canRevertToSaved<R = boolean>(): R;
    _willPresentRevertingError<R = unknown, P0 = unknown>(__willPresentRevertingError: P0): R;
    _coordinateReadingContentsAndReturnError_byAccessor<R = boolean, P0 = unknown, P1 = CDUnknownBlockType>(__coordinateReadingContentsAndReturnError: P0, _byAccessor: P1): R;
    continueAsynchronousWorkOnMainThreadUsingBlock<R = void, P0 = CDUnknownBlockType>(_continueAsynchronousWorkOnMainThreadUsingBlock: P0): R;
    performAsynchronousFileAccessUsingBlock<R = void, P0 = CDUnknownBlockType>(_performAsynchronousFileAccessUsingBlock: P0): R;
    performSynchronousFileAccessUsingBlock<R = void, P0 = CDUnknownBlockType>(_performSynchronousFileAccessUsingBlock: P0): R;
    continueActivityUsingBlock<R = void, P0 = CDUnknownBlockType>(_continueActivityUsingBlock: P0): R;
    performActivityWithSynchronousWaiting_usingBlock<R = void, P0 = boolean, P1 = CDUnknownBlockType>(_performActivityWithSynchronousWaiting: P0, _usingBlock: P1): R;
    _presentAlertWithPrimaryMessage_secondaryMessage_defaultButtonLabel_alternateButtonLabel_otherButtonLabel_ignoreAccidentalEvents_thenContinue<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = boolean, P6 = CDUnknownBlockType>(__presentAlertWithPrimaryMessage: P0, _secondaryMessage: P1, _defaultButtonLabel: P2, _alternateButtonLabel: P3, _otherButtonLabel: P4, _ignoreAccidentalEvents: P5, _thenContinue: P6): R;
    _presentAlertWithPrimaryMessage_secondaryMessage_firstButtonLabel_isDefault_alternateButtonLabel_otherButtonLabel_ignoreAccidentalEvents_guardAlternateButton_thenContinue<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = boolean, P4 = unknown, P5 = unknown, P6 = boolean, P7 = boolean, P8 = CDUnknownBlockType>(__presentAlertWithPrimaryMessage: P0, _secondaryMessage: P1, _firstButtonLabel: P2, _isDefault: P3, _alternateButtonLabel: P4, _otherButtonLabel: P5, _ignoreAccidentalEvents: P6, _guardAlternateButton: P7, _thenContinue: P8): R;
    _presentAlertWithPrimaryMessage_secondaryMessage_firstButtonLabel_isDefault_alternateButtonLabel_otherButtonLabel_ignoreAccidentalEvents_thenContinue<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = boolean, P4 = unknown, P5 = unknown, P6 = boolean, P7 = CDUnknownBlockType>(__presentAlertWithPrimaryMessage: P0, _secondaryMessage: P1, _firstButtonLabel: P2, _isDefault: P3, _alternateButtonLabel: P4, _otherButtonLabel: P5, _ignoreAccidentalEvents: P6, _thenContinue: P7): R;
    _presentAlertWithPrimaryMessage_secondaryMessage_firstButtonLabel_isDefault_alternateButtonLabel_otherButtonLabel_ignoreAccidentalEvents_showSuppressionButton_guardAlternateButton_thenContinue<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = boolean, P4 = unknown, P5 = unknown, P6 = boolean, P7 = boolean, P8 = boolean, P9 = CDUnknownBlockType>(__presentAlertWithPrimaryMessage: P0, _secondaryMessage: P1, _firstButtonLabel: P2, _isDefault: P3, _alternateButtonLabel: P4, _otherButtonLabel: P5, _ignoreAccidentalEvents: P6, _showSuppressionButton: P7, _guardAlternateButton: P8, _thenContinue: P9): R;
    _something_didSomethingSoContinue<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__something: P0, _didSomethingSoContinue: P1): R;
    _somethingDidSomething_soContinue<R = void, P0 = boolean, P1 = CDUnknownBlockType>(__somethingDidSomething: P0, _soContinue: P1): R;
    _something_wasPresentedWithResult_soContinue<R = void, P0 = unknown, P1 = number, P2 = CDUnknownBlockType>(__something: P0, _wasPresentedWithResult: P1, _soContinue: P2): R;
    _something_didSomething_soContinue<R = void, P0 = unknown, P1 = boolean, P2 = CDUnknownBlockType>(__something: P0, _didSomething: P1, _soContinue: P2): R;
    _operationWithSandboxToken_didSucceed<R = void, P0 = number, P1 = boolean>(__operationWithSandboxToken: P0, _didSucceed: P1): R;
    _setFileURLSandboxExtensionToken<R = void, P0 = number>(__setFileURLSandboxExtensionToken: P0): R;
    _closeOtherDocumentWithURL<R = void, P0 = unknown>(__closeOtherDocumentWithURL: P0): R;
    _isLocatedByURL_becauseOfAutosavedContentsFile<R = boolean, P0 = unknown, P1 = string>(__isLocatedByURL: P0, _becauseOfAutosavedContentsFile: P1): R;
    _setFileURL<R = void, P0 = unknown>(__setFileURL: P0): R;
    _synchronizeWindowTitles<R = void>(): R;
    _reconcileDisplayNameAndTrackingInfoToFileURL<R = boolean>(): R;
    _displayNameForURL<R = unknown, P0 = unknown>(__displayNameForURL: P0): R;
    _isExpendableAsUnsavedDocument<R = boolean>(): R;
    initForURL_withAlternateContents_ofType_error<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(_initForURL: P0, _withAlternateContents: P1, _ofType: P2, _error: P3): R;
    initForURL_withContentsOfURL_ofType_error<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(_initForURL: P0, _withContentsOfURL: P1, _ofType: P2, _error: P3): R;
    _initForURL_withContentsOfURL_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(__initForURL: P0, _withContentsOfURL: P1, _ofType: P2, _error: P3): R;
    initWithContentsOfURL_ofType_error<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown>(_initWithContentsOfURL: P0, _ofType: P1, _error: P2): R;
    _initWithContentsOfURL_ofType_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(__initWithContentsOfURL: P0, _ofType: P1, _error: P2): R;
    initWithType_error<R = unknown, P0 = unknown, P1 = unknown>(_initWithType: P0, _error: P1): R;
    _initWithType_error<R = boolean, P0 = unknown, P1 = unknown>(__initWithType: P0, _error: P1): R;
    _autoID<R = number>(): R;
    dealloc<R = void>(): R;
    writeWithBackupToFile_ofType_saveOperation<R = boolean, P0 = unknown, P1 = unknown, P2 = number>(_writeWithBackupToFile: P0, _ofType: P1, _saveOperation: P2): R;
    writeToURL_ofType<R = boolean, P0 = unknown, P1 = unknown>(_writeToURL: P0, _ofType: P1): R;
    writeToFile_ofType_originalFile_saveOperation<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown, P3 = number>(_writeToFile: P0, _ofType: P1, _originalFile: P2, _saveOperation: P3): R;
    writeToFile_ofType<R = boolean, P0 = unknown, P1 = unknown>(_writeToFile: P0, _ofType: P1): R;
    saveToURL_ofType_forSaveOperation_error<R = boolean, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown>(_saveToURL: P0, _ofType: P1, _forSaveOperation: P2, _error: P3): R;
    setFileName<R = void, P0 = unknown>(_setFileName: P0): R;
    saveToFile_saveOperation_delegate_didSaveSelector_contextInfo<R = void, P0 = unknown, P1 = number, P2 = unknown, P3 = string, P4 = void>(_saveToFile: P0, _saveOperation: P1, _delegate: P2, _didSaveSelector: P3, _contextInfo: P4): R;
    runModalPageLayoutWithPrintInfo<R = number, P0 = unknown>(_runModalPageLayoutWithPrintInfo: P0): R;
    revertToSavedFromURL_ofType<R = boolean, P0 = unknown, P1 = unknown>(_revertToSavedFromURL: P0, _ofType: P1): R;
    revertToSavedFromFile_ofType<R = boolean, P0 = unknown, P1 = unknown>(_revertToSavedFromFile: P0, _ofType: P1): R;
    readFromURL_ofType<R = boolean, P0 = unknown, P1 = unknown>(_readFromURL: P0, _ofType: P1): R;
    readFromFile_ofType<R = boolean, P0 = unknown, P1 = unknown>(_readFromFile: P0, _ofType: P1): R;
    printShowingPrintPanel<R = void, P0 = boolean>(_printShowingPrintPanel: P0): R;
    menuNeedsUpdate<R = void, P0 = unknown>(_menuNeedsUpdate: P0): R;
    loadFileWrapperRepresentation_ofType<R = boolean, P0 = unknown, P1 = unknown>(_loadFileWrapperRepresentation: P0, _ofType: P1): R;
    loadDataRepresentation_ofType<R = boolean, P0 = unknown, P1 = unknown>(_loadDataRepresentation: P0, _ofType: P1): R;
    initWithContentsOfURL_ofType<R = unknown, P0 = unknown, P1 = unknown>(_initWithContentsOfURL: P0, _ofType: P1): R;
    initWithContentsOfFile_ofType<R = unknown, P0 = unknown, P1 = unknown>(_initWithContentsOfFile: P0, _ofType: P1): R;
    fileWrapperRepresentationOfType<R = unknown, P0 = unknown>(_fileWrapperRepresentationOfType: P0): R;
    fileName<R = unknown>(): R;
    fileAttributesToWriteToFile_ofType_saveOperation<R = unknown, P0 = unknown, P1 = unknown, P2 = number>(_fileAttributesToWriteToFile: P0, _ofType: P1, _saveOperation: P2): R;
    dataRepresentationOfType<R = unknown, P0 = unknown>(_dataRepresentationOfType: P0): R;
    shouldCloseWindowController<R = boolean, P0 = unknown>(_shouldCloseWindowController: P0): R;
    fileNameFromRunningSavePanelForSaveOperation<R = unknown, P0 = number>(_fileNameFromRunningSavePanelForSaveOperation: P0): R;
    runModalSavePanel_withAccessoryView<R = number, P0 = unknown, P1 = unknown>(_runModalSavePanel: P0, _withAccessoryView: P1): R;
    canCloseDocument<R = boolean>(): R;
    _javaLastError<R = unknown>(): R;
    _setJavaLastError<R = void, P0 = unknown>(__setJavaLastError: P0): R;
    _invokeJavaOverrideForSelector_withErrorAndOtherArguments<R = unknown, P0 = string, P1 = unknown>(__invokeJavaOverrideForSelector: P0, _withErrorAndOtherArguments: P1): R;
    handlePrintScriptCommand<R = unknown, P0 = unknown>(_handlePrintScriptCommand: P0): R;
    handleCloseScriptCommand<R = unknown, P0 = unknown>(_handleCloseScriptCommand: P0): R;
    _document_shouldClose_forScriptCommand<R = void, P0 = unknown, P1 = boolean, P2 = unknown>(__document: P0, _shouldClose: P1, _forScriptCommand: P2): R;
    handleSaveScriptCommand<R = unknown, P0 = unknown>(_handleSaveScriptCommand: P0): R;
    _saveToURL_ofType_forSaveOperation_didSaveSelector_scriptCommand<R = void, P0 = unknown, P1 = unknown, P2 = number, P3 = string, P4 = unknown>(__saveToURL: P0, _ofType: P1, _forSaveOperation: P2, _didSaveSelector: P3, _scriptCommand: P4): R;
    _writableTypeForFileNameExtension_saveOperation<R = unknown, P0 = unknown, P1 = number>(__writableTypeForFileNameExtension: P0, _saveOperation: P1): R;
    _writableTypeForType_saveOperation<R = unknown, P0 = unknown, P1 = number>(__writableTypeForType: P0, _saveOperation: P1): R;
    _document_didSucceed_forScriptCommand<R = void, P0 = unknown, P1 = boolean, P2 = unknown>(__document: P0, _didSucceed: P1, _forScriptCommand: P2): R;
    _performAsynchronousFileAccessUsingBlock<R = void, P0 = CDUnknownBlockType>(__performAsynchronousFileAccessUsingBlock: P0): R;
    _synchronouslyCheckFileURLUsingBlock<R = void, P0 = CDUnknownBlockType>(__synchronouslyCheckFileURLUsingBlock: P0): R;
    _performSynchronousFileAccessUsingBlock<R = void, P0 = CDUnknownBlockType>(__performSynchronousFileAccessUsingBlock: P0): R;
    _performFileAccess<R = void, P0 = unknown>(__performFileAccess: P0): R;
    _fileAccessStabilizedFileURL<R = void>(): R;
    _continueCurrentFileAccessDuringBlock<R = void, P0 = CDUnknownBlockType>(__continueCurrentFileAccessDuringBlock: P0): R;
    _isFileAccessContinuing<R = boolean>(): R;
    _discontinueFileAccessUsingBlock<R = void, P0 = CDUnknownBlockType>(__discontinueFileAccessUsingBlock: P0): R;
    continueFileAccessUsingBlock<R = void, P0 = CDUnknownBlockType>(_continueFileAccessUsingBlock: P0): R;
    _enqueueFileAccess<R = void, P0 = unknown>(__enqueueFileAccess: P0): R;
    _fileAccessCompletionHandlerForFileAccess<R = CDUnknownBlockType, P0 = unknown>(__fileAccessCompletionHandlerForFileAccess: P0): R;
    _beginNextFileAccess<R = void>(): R;
    _continueActivityUsingBlock<R = void, P0 = CDUnknownBlockType>(__continueActivityUsingBlock: P0): R;
    performActivityWithSynchronousWaiting_usingBlock_cancellationHandler<R = void, P0 = boolean, P1 = CDUnknownBlockType, P2 = CDUnknownBlockType>(_performActivityWithSynchronousWaiting: P0, _usingBlock: P1, _cancellationHandler: P2): R;
    _performActivity<R = void, P0 = unknown>(__performActivity: P0): R;
    _interruptingSynchronousFileAccess<R = boolean>(): R;
    _activityCompletionHandlerForActivity<R = CDUnknownBlockType, P0 = unknown>(__activityCompletionHandlerForActivity: P0): R;
    _cancelAllActivitiesAndFinishAsynchronously<R = void, P0 = string>(__cancelAllActivitiesAndFinishAsynchronously: P0): R;
    _removeActivity<R = void, P0 = unknown>(__removeActivity: P0): R;
    _beginNextActivity<R = void>(): R;
    _enqueueActivity<R = void, P0 = unknown>(__enqueueActivity: P0): R;
    _makeNewActivity<R = unknown>(): R;
    _encodeObjectIntoRestorableState_forKey<R = void, P0 = unknown, P1 = unknown>(__encodeObjectIntoRestorableState: P0, _forKey: P1): R;
    _persistentUIEncodedReference<R = unknown>(): R;
    invalidateRestorableState<R = void>(): R;
    _hasEverHadInvalidRestorableState<R = boolean>(): R;
    _markAsEverHavingInvalidRestorableState<R = void>(): R;
    _hasInvalidRestorableState<R = boolean>(): R;
    _setHasInvalidRestorableState<R = void, P0 = boolean>(__setHasInvalidRestorableState: P0): R;
    _persistentUIIdentifier<R = unknown>(): R;
    _copyPersistentUIChildren<R = unknown>(): R;
    _restorePersistentState<R = void, P0 = unknown>(__restorePersistentState: P0): R;
    restoreDocumentWindowWithIdentifier_state_completionHandler<R = void, P0 = unknown, P1 = unknown, P2 = CDUnknownBlockType>(_restoreDocumentWindowWithIdentifier: P0, _state: P1, _completionHandler: P2): R;
    _originalDocument<R = unknown>(): R;
    _oldVersion<R = unknown>(): R;
    _deleteAllVersions<R = void, P0 = unknown>(__deleteAllVersions: P0): R;
    _deleteThisVersion<R = void, P0 = unknown>(__deleteThisVersion: P0): R;
    _versionWasDeleted<R = void, P0 = unknown>(__versionWasDeleted: P0): R;
    canRestoreLocalVersions<R = boolean>(): R;
    _browseVersions<R = void>(): R;
    _preservationActionAfterSaveOperation<R = number, P0 = number>(__preservationActionAfterSaveOperation: P0): R;
    _preserveVersionAfterWritingToURL_forSaveOperation_byMovingBackupFileAtURL_version<R = void, P0 = unknown, P1 = number, P2 = unknown, P3 = unknown>(__preserveVersionAfterWritingToURL: P0, _forSaveOperation: P1, _byMovingBackupFileAtURL: P2, _version: P3): R;
    _preserveContentsIfNecessaryAfterWriting_toURL_forSaveOperation_version_error<R = boolean, P0 = boolean, P1 = unknown, P2 = number, P3 = unknown, P4 = unknown>(__preserveContentsIfNecessaryAfterWriting: P0, _toURL: P1, _forSaveOperation: P2, _version: P3, _error: P4): R;
    _preserveContentsOfURL_forURL_reason_comment_options_error<R = unknown, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown, P4 = number, P5 = unknown>(__preserveContentsOfURL: P0, _forURL: P1, _reason: P2, _comment: P3, _options: P4, _error: P5): R;
    _preserveCurrentVersionForReason_error<R = boolean, P0 = number, P1 = unknown>(__preserveCurrentVersionForReason: P0, _error: P1): R;
    _preserveFileContentsIfNecessaryAndReturnError<R = boolean, P0 = unknown>(__preserveFileContentsIfNecessaryAndReturnError: P0): R;
    _didChangePersistentVersions<R = void>(): R;
    _willChangePersistentVersions<R = void>(): R;
    _scheduleCleanupOldVersions<R = void>(): R;
    _doCleanupOldVersions<R = void>(): R;
    _cleanupOldVersions_keepingVersions<R = void, P0 = unknown, P1 = unknown>(__cleanupOldVersions: P0, _keepingVersions: P1): R;
    _recordPreviousSaveDateForVersion<R = void, P0 = unknown>(__recordPreviousSaveDateForVersion: P0): R;
    _versionModificationDateForTag<R = unknown, P0 = number>(__versionModificationDateForTag: P0): R;
    _canRevertToVersionForTag<R = boolean, P0 = number>(__canRevertToVersionForTag: P0): R;
    _versionForTag<R = unknown, P0 = number>(__versionForTag: P0): R;
    _previousSavedVersion<R = unknown>(): R;
    _lastSavedVersion<R = unknown>(): R;
    _lastOpenedVersion<R = unknown>(): R;
    _resetTemporaryVersionStorageAlert<R = void>(): R;
    _setShouldSkipTemporaryVersionStorageAlert<R = void>(): R;
    _updateTemporaryVersionStorageState<R = void>(): R;
    _errorDescriptionForTemporaryVersionStorageWarning<R = unknown>(): R;
    _needsTemporaryVersionStorageWarning<R = boolean>(): R;
    _temporaryVersionStorageIdentifier<R = unknown>(): R;
    _setTemporaryVersionStorageIdentifier<R = void, P0 = unknown>(__setTemporaryVersionStorageIdentifier: P0): R;
    _fileContentsDeservesPreserving<R = boolean>(): R;
    _setFileContentsDeservesPreservingForReason<R = void, P0 = number>(__setFileContentsDeservesPreservingForReason: P0): R;
    _saveToURL_ofType_forSaveOperation_completionHandler<R = void, P0 = unknown, P1 = unknown, P2 = number, P3 = CDUnknownBlockType>(__saveToURL: P0, _ofType: P1, _forSaveOperation: P2, _completionHandler: P3): R;
    _finishPreservingAfterSavingForSaveOperation_freshlyPreservedVersion<R = void, P0 = number, P1 = unknown>(__finishPreservingAfterSavingForSaveOperation: P0, _freshlyPreservedVersion: P1): R;
    _saveToURL_ofType_forSaveOperation_error<R = boolean, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown>(__saveToURL: P0, _ofType: P1, _forSaveOperation: P2, _error: P3): R;
    _finishSavingToURL_ofType_forSaveOperation_changeCount<R = void, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown>(__finishSavingToURL: P0, _ofType: P1, _forSaveOperation: P2, _changeCount: P3): R;
    _prepareToSaveToURL_forSaveOperation_completionHandler<R = void, P0 = unknown, P1 = number, P2 = CDUnknownBlockType>(__prepareToSaveToURL: P0, _forSaveOperation: P1, _completionHandler: P2): R;
    _checkFileModificationDateBeforeSavingToURL_saveOperation<R = boolean, P0 = unknown, P1 = number>(__checkFileModificationDateBeforeSavingToURL: P0, _saveOperation: P1): R;
    _coordinateReadingContentsAndWritingItemAtURL_error_byAccessor<R = boolean, P0 = unknown, P1 = unknown, P2 = CDUnknownBlockType>(__coordinateReadingContentsAndWritingItemAtURL: P0, _error: P1, _byAccessor: P2): R;
    _coordinateReadingContentsAndWritingItemAtURL_byAccessor<R = void, P0 = unknown, P1 = CDUnknownBlockType>(__coordinateReadingContentsAndWritingItemAtURL: P0, _byAccessor: P1): R;
    _fileCoordinator_coordinateReadingContentsAndWritingItemAtURL_byAccessor<R = void, P0 = unknown, P1 = unknown, P2 = CDUnknownBlockType>(__fileCoordinator: P0, _coordinateReadingContentsAndWritingItemAtURL: P1, _byAccessor: P2): R;
    _fileCoordinator_asynchronouslyCoordinateReadingContentsAndWritingItemAtURL_byAccessor<R = void, P0 = unknown, P1 = unknown, P2 = CDUnknownBlockType>(__fileCoordinator: P0, _asynchronouslyCoordinateReadingContentsAndWritingItemAtURL: P1, _byAccessor: P2): R;
    _asynchronousWritingDidEnd<R = void>(): R;
    _asynchronousWritingDidBeginAfterUnblockingUserInteraction<R = void>(): R;
    _didUnblockUserInteraction<R = void>(): R;
    _waitForUserInteractionUnblocking<R = void>(): R;
    _blockUserInteraction<R = void>(): R;
    _runModalSavePanelForSaveOperation_delegate_didSaveSelector_contextInfo<R = void, P0 = number, P1 = unknown, P2 = string, P3 = void>(__runModalSavePanelForSaveOperation: P0, _delegate: P1, _didSaveSelector: P2, _contextInfo: P3): R;
    _defaultDirectoryURLForSaveOperation<R = unknown, P0 = number>(__defaultDirectoryURLForSaveOperation: P0): R;
    _preparedSavePanelForOperation<R = unknown, P0 = number>(__preparedSavePanelForOperation: P0): R;
    _setTagNamesFromLastRunSavePanel<R = void, P0 = unknown>(__setTagNamesFromLastRunSavePanel: P0): R;
    _unsetFileNameExtensionWasHiddenInLastRunSavePanel<R = void>(): R;
    _setFileNameExtensionWasHiddenInLastRunSavePanel<R = void, P0 = boolean>(__setFileNameExtensionWasHiddenInLastRunSavePanel: P0): R;
    _savePanelAccessoryViewForWritableTypes_defaultType<R = unknown, P0 = unknown, P1 = unknown>(__savePanelAccessoryViewForWritableTypes: P0, _defaultType: P1): R;
    _setSaveType<R = void, P0 = unknown>(__setSaveType: P0): R;
    _allowedTypesFromSavePanelType<R = unknown>(): R;
    _fileNameExtensionsForType_forUseInSavePanel<R = unknown, P0 = unknown, P1 = boolean>(__fileNameExtensionsForType: P0, _forUseInSavePanel: P1): R;
    _defaultFromWritableTypeNames<R = unknown, P0 = unknown>(__defaultFromWritableTypeNames: P0): R;
    _setAutosavingCheckingIsDisabledForScripting<R = void, P0 = boolean>(__setAutosavingCheckingIsDisabledForScripting: P0): R;
    _checkForFileChangesThenSave_saveAs_orCancel<R = void, P0 = CDUnknownBlockType, P1 = CDUnknownBlockType, P2 = CDUnknownBlockType>(__checkForFileChangesThenSave: P0, _saveAs: P1, _orCancel: P2): R;
    _presentAlertForFileOverwritten_moved_renamed_inTrash_orUnavailable_thenSave_saveAs_orCancel<R = void, P0 = boolean, P1 = boolean, P2 = boolean, P3 = boolean, P4 = boolean, P5 = CDUnknownBlockType, P6 = CDUnknownBlockType, P7 = CDUnknownBlockType>(__presentAlertForFileOverwritten: P0, _moved: P1, _renamed: P2, _inTrash: P3, _orUnavailable: P4, _thenSave: P5, _saveAs: P6, _orCancel: P7): R;
    _resetMoveAndRenameSensing<R = void>(): R;
    _deleteAutosavedContents<R = void>(): R;
    _saveDocumentWithDelegate_didSaveSelector_contextInfo<R = void, P0 = unknown, P1 = string, P2 = void>(__saveDocumentWithDelegate: P0, _didSaveSelector: P1, _contextInfo: P2): R;
    _fileAttributesToWriteToURL_ofType_forSaveOperation_originalContentsURL_error<R = unknown, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown, P4 = unknown>(__fileAttributesToWriteToURL: P0, _ofType: P1, _forSaveOperation: P2, _originalContentsURL: P3, _error: P4): R;
    _fileNameExtensionAttributesIsOverridden<R = boolean>(): R;
    _writeSafelyToURL_ofType_forSaveOperation_error<R = boolean, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown>(__writeSafelyToURL: P0, _ofType: P1, _forSaveOperation: P2, _error: P3): R;
    _writeSafelyToURL_ofType_forSaveOperation_forceTemporaryDirectory_error<R = boolean, P0 = unknown, P1 = unknown, P2 = number, P3 = boolean, P4 = unknown>(__writeSafelyToURL: P0, _ofType: P1, _forSaveOperation: P2, _forceTemporaryDirectory: P3, _error: P4): R;
    _cleanupBackupFileAtURL<R = void, P0 = unknown>(__cleanupBackupFileAtURL: P0): R;
    _canAsynchronouslyPreserveVersionAfterWriting<R = boolean>(): R;
    _canUseVersionBackupFileOptimization<R = boolean>(): R;
    _finishWritingToURL_byTakingContentsFromItemAtURL_replacingOriginalItemAtURL_addingAttributes_usingTemporaryDirectoryAtURL_backupFileName_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = unknown, P6 = unknown>(__finishWritingToURL: P0, _byTakingContentsFromItemAtURL: P1, _replacingOriginalItemAtURL: P2, _addingAttributes: P3, _usingTemporaryDirectoryAtURL: P4, _backupFileName: P5, _error: P6): R;
    _finishWritingToURL_byTakingContentsFromItemAtURL_addingAttributes_usingTemporaryDirectoryAtURL_backupFileName_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = unknown>(__finishWritingToURL: P0, _byTakingContentsFromItemAtURL: P1, _addingAttributes: P2, _usingTemporaryDirectoryAtURL: P3, _backupFileName: P4, _error: P5): R;
    _finishWritingToURL_byMovingItemAtURL_addingAttributes_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(__finishWritingToURL: P0, _byMovingItemAtURL: P1, _addingAttributes: P2, _error: P3): R;
    presentedItemOperationQueue<R = NSOperationQueue>(): R;
    presentedItemURL<R = NSURL>(): R;
    windowForSheet<R = NSWindow>(): R;
    displayName<R = NSString>(): R;
    setDisplayName<R = void, P0 = NSString>(_v: P0): R;
    windowControllers<R = NSArray>(): R;
    windowNibName<R = NSString>(): R;
    hasUndoManager<R = boolean>(): R;
    setHasUndoManager<R = void, P0 = boolean>(_v: P0): R;
    undoManager<R = NSUndoManager>(): R;
    setUndoManager<R = void, P0 = NSUndoManager>(_v: P0): R;
    documentEdited<R = boolean>(): R;
    PDFPrintOperation<R = NSPrintOperation>(): R;
    printInfo<R = NSPrintInfo>(): R;
    setPrintInfo<R = void, P0 = NSPrintInfo>(_v: P0): R;
    locked<R = boolean>(): R;
    allowsDocumentSharing<R = boolean>(): R;
    observedPresentedItemUbiquityAttributes<R = NSSet>(): R;
    inViewingMode<R = boolean>(): R;
    browsingVersions<R = boolean>(): R;
    draft<R = boolean>(): R;
    setDraft<R = void, P0 = boolean>(_v: P0): R;
    autosavedContentsFileURL<R = NSURL>(): R;
    setAutosavedContentsFileURL<R = void, P0 = NSURL>(_v: P0): R;
    autosavingFileType<R = NSString>(): R;
    hasUnautosavedChanges<R = boolean>(): R;
    fileTypeFromLastRunSavePanel<R = NSString>(): R;
    fileNameExtensionWasHiddenInLastRunSavePanel<R = boolean>(): R;
    shouldRunSavePanelWithAccessoryView<R = boolean>(): R;
    keepBackupFile<R = boolean>(): R;
    backupFileURL<R = NSURL>(): R;
    entireFileLoaded<R = boolean>(): R;
    autosavingIsImplicitlyCancellable<R = boolean>(): R;
    fileModificationDate<R = NSDate>(): R;
    setFileModificationDate<R = void, P0 = NSDate>(_v: P0): R;
    fileType<R = NSString>(): R;
    setFileType<R = void, P0 = NSString>(_v: P0): R;
    fileURL<R = NSURL>(): R;
    setFileURL<R = void, P0 = NSURL>(_v: P0): R;
    objectSpecifier<R = NSScriptObjectSpecifier>(): R;
    lastComponentOfFileName<R = NSString>(): R;
    setLastComponentOfFileName<R = void, P0 = NSString>(_v: P0): R;
    userActivity<R = NSUserActivity>(): R;
    setUserActivity<R = void, P0 = NSUserActivity>(_v: P0): R;
    debugDescription<R = NSString>(): R;
    description<R = NSString>(): R;
    hash<R = number>(): R;
    primaryPresentedItemURL<R = NSURL>(): R;
    superclass<R = unknown>(): R;
  }
  namespace NSDocument {
    export interface CLASS<T0 = void, T1 = void, T2 = void> extends NSObject, NSUIActivityProviderProtocol, NSEditorRegistrationProtocol, NSFilePresenterProtocol, NSMenuItemValidationProtocol, NSUserInterfaceValidationsProtocol {
      alloc<R = NSDocument>(): R;
      new: <R = NSDocument>() => R;
      isNativeType<R = boolean, P0 = unknown>(_isNativeType: P0): R;
      writableTypes<R = unknown>(): R;
      readableTypes<R = unknown>(): R;
      _presentedDocumentTypeForContentType<R = number, P0 = unknown>(__presentedDocumentTypeForContentType: P0): R;
      _sortedNonModalErrors<R = unknown, P0 = unknown>(__sortedNonModalErrors: P0): R;
      _openPurchaseICloudStorageUI<R = void>(): R;
      _bucketForNonModalErrorCode<R = number, P0 = number>(__bucketForNonModalErrorCode: P0): R;
      _stillObservesWillCloseUndoGroup<R = boolean>(): R;
      _destinationURLForRenamingItemAtURL_directoryURL_displayName_fileType_proposedName_fallbackExtension_outFileName_extensionHidden_error<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = unknown, P6 = unknown, P7 = string, P8 = unknown>(__destinationURLForRenamingItemAtURL: P0, _directoryURL: P1, _displayName: P2, _fileType: P3, _proposedName: P4, _fallbackExtension: P5, _outFileName: P6, _extensionHidden: P7, _error: P8): R;
      _userHandleForSpotlight<R = unknown>(): R;
      _errorFailureReasonForUnlockingFailureWithUnderlyingError<R = unknown, P0 = unknown>(__errorFailureReasonForUnlockingFailureWithUnderlyingError: P0): R;
      _errorDescriptionForUnlockingFailureWithUnderlyingError_presentableFileName<R = unknown, P0 = unknown, P1 = unknown>(__errorDescriptionForUnlockingFailureWithUnderlyingError: P0, _presentableFileName: P1): R;
      _validateDuplicateDocumentName_withOriginalName<R = boolean, P0 = unknown, P1 = unknown>(__validateDuplicateDocumentName: P0, _withOriginalName: P1): R;
      _parseBaseName_number_fromDisplayName<R = void, P0 = unknown, P1 = number, P2 = unknown>(__parseBaseName: P0, _number: P1, _fromDisplayName: P2): R;
      _parseName_number_fromDisplayName_withTemplate<R = boolean, P0 = unknown, P1 = number, P2 = unknown, P3 = unknown>(__parseName: P0, _number: P1, _fromDisplayName: P2, _withTemplate: P3): R;
      _handleConflictsForDocumentAtURL_modalForWindow_completionHandler<R = void, P0 = unknown, P1 = unknown, P2 = CDUnknownBlockType>(__handleConflictsForDocumentAtURL: P0, _modalForWindow: P1, _completionHandler: P2): R;
      _handleConflictsForDocument_atURL_modalForWindow_completionHandler<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = CDUnknownBlockType>(__handleConflictsForDocument: P0, _atURL: P1, _modalForWindow: P2, _completionHandler: P3): R;
      _resolveConflictsForDocument_atURL_byKeepingVersions_otherVersions_currentVersion_collectingURLsToOpen_andErrors_completionHandler<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = unknown, P6 = unknown, P7 = CDUnknownBlockType>(__resolveConflictsForDocument: P0, _atURL: P1, _byKeepingVersions: P2, _otherVersions: P3, _currentVersion: P4, _collectingURLsToOpen: P5, _andErrors: P6, _completionHandler: P7): R;
      _promoteVersions_atURL_forDocument_collectingURLsToOpen_andErrors<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown>(__promoteVersions: P0, _atURL: P1, _forDocument: P2, _collectingURLsToOpen: P3, _andErrors: P4): R;
      _willPresentConflictResolutionError<R = unknown, P0 = unknown>(__willPresentConflictResolutionError: P0): R;
      _conflictsExistForFileAtURL<R = boolean, P0 = unknown>(__conflictsExistForFileAtURL: P0): R;
      _shouldShowUbiquityConflictPanel<R = boolean>(): R;
      usesUbiquitousStorage<R = boolean>(): R;
      _usesICloudDocumentLibrary<R = boolean>(): R;
      _isICloudEnabled<R = boolean>(): R;
      _preservesVersions<R = boolean>(): R;
      preservesVersions<R = boolean>(): R;
      _presentNameConflictAlertForURL_window_thenContinue<R = void, P0 = unknown, P1 = unknown, P2 = CDUnknownBlockType>(__presentNameConflictAlertForURL: P0, _window: P1, _thenContinue: P2): R;
      _tagNamesForURL<R = unknown, P0 = unknown>(__tagNamesForURL: P0): R;
      _setTagNames_forURL<R = void, P0 = unknown, P1 = unknown>(__setTagNames: P0, _forURL: P1): R;
      _directoryURLForNewDocuments<R = unknown>(): R;
      _validateDraftDocumentName<R = boolean, P0 = unknown>(__validateDraftDocumentName: P0): R;
      _parseBaseDraftName_number_fromDisplayName<R = void, P0 = unknown, P1 = number, P2 = unknown>(__parseBaseDraftName: P0, _number: P1, _fromDisplayName: P2): R;
      _fileURLForNewDocumentWithBaseName_extension_isDuplicate_number_unique_directoryURL<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean, P3 = number, P4 = boolean, P5 = unknown>(__fileURLForNewDocumentWithBaseName: P0, _extension: P1, _isDuplicate: P2, _number: P3, _unique: P4, _directoryURL: P5): R;
      _autosavesDrafts<R = boolean>(): R;
      autosavesDrafts<R = boolean>(): R;
      _autosavesInPlace<R = boolean>(): R;
      autosavesInPlace<R = boolean>(): R;
      _uniqueAutosavedContentsURLWithFileNameExtension<R = unknown, P0 = unknown>(__uniqueAutosavedContentsURLWithFileNameExtension: P0): R;
      _autosavingTimerDidFireSoContinue<R = void, P0 = unknown>(__autosavingTimerDidFireSoContinue: P0): R;
      _errorFailureReasonForAutosavingSafetyConcern<R = unknown, P0 = number>(__errorFailureReasonForAutosavingSafetyConcern: P0): R;
      _errorDescriptionForAutosavingSafetyConcern_presentableFileName<R = unknown, P0 = number, P1 = unknown>(__errorDescriptionForAutosavingSafetyConcern: P0, _presentableFileName: P1): R;
      _canTryToOverrideAutosavingSafetyConcern<R = boolean, P0 = number>(__canTryToOverrideAutosavingSafetyConcern: P0): R;
      _errorForAutosavingSafetyConcern_displayName_userInfo<R = unknown, P0 = number, P1 = unknown, P2 = unknown>(__errorForAutosavingSafetyConcern: P0, _displayName: P1, _userInfo: P2): R;
      _autosavingSafetyConcernForURL_ignoringAutolocking<R = number, P0 = unknown, P1 = boolean>(__autosavingSafetyConcernForURL: P0, _ignoringAutolocking: P1): R;
      _autosavingIsQuestionableAtURL_errorInfo<R = boolean, P0 = unknown, P1 = unknown>(__autosavingIsQuestionableAtURL: P0, _errorInfo: P1): R;
      _isURL_containedByURL<R = boolean, P0 = unknown, P1 = unknown>(__isURL: P0, _containedByURL: P1): R;
      _nonSandboxedURLForURL<R = unknown, P0 = unknown>(__nonSandboxedURLForURL: P0): R;
      _fileIsOldEnoughToQuestionAutosavingAtURL<R = boolean, P0 = unknown>(__fileIsOldEnoughToQuestionAutosavingAtURL: P0): R;
      _url_matchesURL<R = boolean, P0 = unknown, P1 = unknown>(__url: P0, _matchesURL: P1): R;
      _backupFileNameForURL<R = unknown, P0 = unknown>(__backupFileNameForURL: P0): R;
      _alertSheetDidOrderOnScreen<R = void, P0 = unknown>(__alertSheetDidOrderOnScreen: P0): R;
      _hasOverrideForSelector<R = boolean, P0 = string>(__hasOverrideForSelector: P0): R;
      _fileModificationDateForURL<R = unknown, P0 = unknown>(__fileModificationDateForURL: P0): R;
      canConcurrentlyReadDocumentsOfType<R = boolean, P0 = unknown>(_canConcurrentlyReadDocumentsOfType: P0): R;
      initialize<R = void>(): R;
      _hasJavaOverrideForInitializerSelector<R = boolean, P0 = string>(__hasJavaOverrideForInitializerSelector: P0): R;
      _isJavaSubclass<R = boolean>(): R;
      _debuggingInformationForFileCoordination<R = unknown>(): R;
      restorableStateKeyPaths<R = unknown>(): R;
      _fixupModifiedAccessory<R = void, P0 = unknown>(__fixupModifiedAccessory: P0): R;
      _finishWritingToURL_withTemporaryDirectoryURL_newContentsURL_afterSuccess<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = boolean>(__finishWritingToURL: P0, _withTemporaryDirectoryURL: P1, _newContentsURL: P2, _afterSuccess: P3): R;
      _parentDirectoryIsWritableForURL<R = boolean, P0 = unknown>(__parentDirectoryIsWritableForURL: P0): R;
      _setAttributes_ofItemAtURL<R = void, P0 = unknown, P1 = unknown>(__setAttributes: P0, _ofItemAtURL: P1): R;
      _attributesOfItemAtURL<R = unknown, P0 = unknown>(__attributesOfItemAtURL: P0): R;
    }
  }
}

declare const NSDocument: cocoa.NSDocument.CLASS;
