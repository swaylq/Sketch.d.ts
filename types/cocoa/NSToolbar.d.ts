/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSToolbar<T = any> extends cocoa.NSObject {
    cxx_destruct<R = void>(): R;
    _setDoNotShowBaselineSeparator<R = void, P0 = boolean>(__setDoNotShowBaselineSeparator: P0): R;
    _setLoadedMetrics<R = void, P0 = boolean>(__setLoadedMetrics: P0): R;
    _window<R = unknown>(): R;
    _minimumWindowSizeEnsuringVisibilityOfItem<R = cocoa.CGSize, P0 = unknown>(__minimumWindowSizeEnsuringVisibilityOfItem: P0): R;
    _minimumSizeForTextFieldToolbarItem<R = cocoa.CGSize>(): R;
    _maximumSizeForTextFieldToolbarItem<R = cocoa.CGSize>(): R;
    _minimumSizeForSearchFieldToolbarItem<R = cocoa.CGSize>(): R;
    _maximumSizeForSearchFieldToolbarItem<R = cocoa.CGSize>(): R;
    _toolbarItemsFromDelegateWithPasteboard<R = unknown, P0 = unknown>(__toolbarItemsFromDelegateWithPasteboard: P0): R;
    _delegateMightBeAbleToProduceToolbarItemsFromPasteboard<R = boolean, P0 = unknown>(__delegateMightBeAbleToProduceToolbarItemsFromPasteboard: P0): R;
    registeredDraggedTypes<R = unknown>(): R;
    setRegisteredDraggedTypes<R = void, P0 = unknown>(_setRegisteredDraggedTypes: P0): R;
    initWithCoder<R = unknown, P0 = unknown>(_initWithCoder: P0): R;
    encodeWithCoder<R = void, P0 = unknown>(_encodeWithCoder: P0): R;
    _selectableItems<R = unknown>(): R;
    _removeIgnoredItems<R = void>(): R;
    _setSelectableItems<R = void, P0 = unknown>(__setSelectableItems: P0): R;
    _allowedItems<R = unknown>(): R;
    _setAllowedItems<R = void, P0 = unknown>(__setAllowedItems: P0): R;
    _defaultItems<R = unknown>(): R;
    _setDefaultItems<R = void, P0 = unknown>(__setDefaultItems: P0): R;
    _identifiedItems<R = unknown>(): R;
    _setIdentifiedItems<R = void, P0 = unknown>(__setIdentifiedItems: P0): R;
    _finishedMakingConnections<R = void>(): R;
    _endWiringNibConnections<R = void>(): R;
    _wiringNibConnections<R = boolean>(): R;
    _noteInstantiationFromWindowTemplate<R = void>(): R;
    _containingWindow<R = unknown>(): R;
    _logicalWindow<R = unknown>(): R;
    _removeSelfAsFullScreenToolbar<R = void>(): R;
    _usingFullScreenMetrics<R = boolean>(): R;
    _dropFullScreenMetrics<R = void>(): R;
    _acquireFullScreenMetrics<R = void>(): R;
    _adjustSizeForFullScreenAuxiliaryView<R = void>(): R;
    _autohideHeight<R = number>(): R;
    _setAutohideHeight<R = void, P0 = number>(__setAutohideHeight: P0): R;
    fullScreenAccessoryViewMaxHeight<R = number>(): R;
    fullScreenAccessoryViewMinHeight<R = number>(): R;
    setFullScreenAccessoryViewMaxHeight<R = void, P0 = number>(_setFullScreenAccessoryViewMaxHeight: P0): R;
    setFullScreenAccessoryViewMinHeight<R = void, P0 = number>(_setFullScreenAccessoryViewMinHeight: P0): R;
    fullScreenAccessoryView<R = unknown>(): R;
    setFullScreenAccessoryView<R = void, P0 = unknown>(_setFullScreenAccessoryView: P0): R;
    _setAuxiliaryViewMaxSize<R = void, P0 = cocoa.CGSize>(__setAuxiliaryViewMaxSize: P0): R;
    _auxiliaryViewMaxSize<R = cocoa.CGSize>(): R;
    _fullScreenAuxiliaryViewController<R = unknown>(): R;
    _ensureFullScreenAuxiliaryViewController<R = void>(): R;
    _getFullScreenAuxiliaryViewController<R = unknown>(): R;
    _setFullScreenAuxiliaryViewController<R = void, P0 = unknown>(__setFullScreenAuxiliaryViewController: P0): R;
    _setAuxiliaryViewMinSize<R = void, P0 = cocoa.CGSize>(__setAuxiliaryViewMinSize: P0): R;
    _ensureViewsFrameIsSet<R = void>(): R;
    _auxiliaryViewMinSize<R = cocoa.CGSize>(): R;
    _fullScreenAuxiliaryView<R = unknown>(): R;
    _fullScreenOriginalAutoresizingMask<R = number>(): R;
    _removeFullScreenAuxWindowController<R = void>(): R;
    _setFullScreenAuxiliaryView<R = void, P0 = unknown>(__setFullScreenAuxiliaryView: P0): R;
    _positionAtopContentView<R = void>(): R;
    _attachesToMenuBar<R = boolean>(): R;
    _setAttachesToMenuBar<R = void, P0 = boolean>(__setAttachesToMenuBar: P0): R;
    _disableFullScreenAuxiliaryViewForceVisible<R = void>(): R;
    _enableFullScreenAuxiliaryViewForceVisible<R = void>(): R;
    _disableFullScreenForceVisible<R = void>(): R;
    _enableFullScreenForceVisible<R = void>(): R;
    _enableFullScreenAutohiding<R = void>(): R;
    _disableFullScreenAutohiding<R = void>(): R;
    _revealWindowContent<R = void>(): R;
    _usesSharedToolbarWindow<R = boolean>(): R;
    _inGlobalWindow<R = boolean>(): R;
    _setInGlobalWindow<R = void, P0 = boolean>(__setInGlobalWindow: P0): R;
    toolbarDragToken<R = unknown>(): R;
    isPaletteToolbar<R = boolean>(): R;
    setIsPaletteToolbar<R = void, P0 = boolean>(_setIsPaletteToolbar: P0): R;
    _currentToolbarItemIdentifiers<R = unknown>(): R;
    _restoreToolbarItemsAfterSheet<R = void>(): R;
    _prepareToolbarItemsForSheet<R = void>(): R;
    _autovalidateToolbarItem<R = void, P0 = unknown>(__autovalidateToolbarItem: P0): R;
    _autovalidateVisibleToolbarItems<R = void>(): R;
    _autovalidatesItems<R = boolean>(): R;
    _setAutovalidatesItems<R = void, P0 = boolean>(__setAutovalidatesItems: P0): R;
    validateVisibleItems<R = void>(): R;
    _validateVisibleItemsInPresenceOfSheet<R = void>(): R;
    _toolbarWindowHasAttachedSheetOtherThanCustomizationPalette<R = boolean>(): R;
    setConfigurationUsingName<R = boolean, P0 = unknown>(_setConfigurationUsingName: P0): R;
    setConfigurationFromDictionary<R = void, P0 = unknown>(_setConfigurationFromDictionary: P0): R;
    saveConfigurationUsingName<R = void, P0 = unknown>(_saveConfigurationUsingName: P0): R;
    saveCofigurationUsingName<R = void, P0 = unknown>(_saveCofigurationUsingName: P0): R;
    _defaultConfigurationDidChange<R = void>(): R;
    _autoSaveConfiguration<R = void>(): R;
    _configurationAutosaveName<R = unknown>(): R;
    _setConfigurationUsingName_domain<R = boolean, P0 = unknown, P1 = unknown>(__setConfigurationUsingName: P0, _domain: P1): R;
    _saveConfigurationUsingName_domain<R = void, P0 = unknown, P1 = unknown>(__saveConfigurationUsingName: P0, _domain: P1): R;
    _setConfigurationFromDictionary_notifyFamilyAndUpdateDefaults_upgradedConfiguration<R = boolean, P0 = unknown, P1 = boolean, P2 = unknown>(__setConfigurationFromDictionary: P0, _notifyFamilyAndUpdateDefaults: P1, _upgradedConfiguration: P2): R;
    _automaticallyUpgradesToolbars<R = boolean>(): R;
    _dictionaryForSavedConfiguration<R = unknown>(): R;
    _itemIndexToPropertyListRepresentationDictionary<R = unknown>(): R;
    _determineItemIdentifiersFromPreviousIdentifiers_oldDefault_newDefault<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown>(__determineItemIdentifiersFromPreviousIdentifiers: P0, _oldDefault: P1, _newDefault: P2): R;
    setPreferredPrincipalItemWidthRatio<R = void, P0 = number>(_setPreferredPrincipalItemWidthRatio: P0): R;
    preferredPrincipalItemWidthRatio<R = number>(): R;
    setPrincipalItemIdentifier<R = void, P0 = unknown>(_setPrincipalItemIdentifier: P0): R;
    principalItemIdentifier<R = unknown>(): R;
    toolbarAllowedItemIdentifiers<R = unknown, P0 = unknown>(_toolbarAllowedItemIdentifiers: P0): R;
    toolbarDefaultItemIdentifiers<R = unknown, P0 = unknown>(_toolbarDefaultItemIdentifiers: P0): R;
    selectableItemIdentifiers<R = unknown>(): R;
    _allowedItemIdentifiers<R = unknown>(): R;
    _defaultItemIdentifiers<R = unknown>(): R;
    toolbar_itemForItemIdentifier_willBeInsertedIntoToolbar<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(_toolbar: P0, _itemForItemIdentifier: P1, _willBeInsertedIntoToolbar: P2): R;
    _createItemFromItemIdentifier<R = unknown, P0 = unknown>(__createItemFromItemIdentifier: P0): R;
    _newItemFromItemIdentifier_propertyListRepresentation_requireImmediateLoad_willBeInsertedIntoToolbar<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean, P3 = boolean>(__newItemFromItemIdentifier: P0, _propertyListRepresentation: P1, _requireImmediateLoad: P2, _willBeInsertedIntoToolbar: P3): R;
    _newItemFromDelegateWithItemIdentifier_propertyListRepresentation_willBeInsertedIntoToolbar<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(__newItemFromDelegateWithItemIdentifier: P0, _propertyListRepresentation: P1, _willBeInsertedIntoToolbar: P2): R;
    _newToolbarItemFromProposedItem_isForPalette<R = unknown, P0 = unknown, P1 = boolean>(__newToolbarItemFromProposedItem: P0, _isForPalette: P1): R;
    _syncToChangedToolbar_toolbarModeChanged<R = void, P0 = unknown, P1 = unknown>(__syncToChangedToolbar: P0, _toolbarModeChanged: P1): R;
    _syncToChangedToolbar_toolbarReplacedAllItems<R = void, P0 = unknown, P1 = unknown>(__syncToChangedToolbar: P0, _toolbarReplacedAllItems: P1): R;
    _syncToChangedToolbar_itemInserted<R = void, P0 = unknown, P1 = unknown>(__syncToChangedToolbar: P0, _itemInserted: P1): R;
    _syncToChangedToolbar_itemMoved<R = void, P0 = unknown, P1 = unknown>(__syncToChangedToolbar: P0, _itemMoved: P1): R;
    _syncToChangedToolbar_itemRemoved<R = void, P0 = unknown, P1 = unknown>(__syncToChangedToolbar: P0, _itemRemoved: P1): R;
    _noteToolbarShowsBaselinePropertyChanged<R = void>(): R;
    _noteToolbarDisplayModeChangedAndPostSyncSEL<R = void>(): R;
    _noteToolbarSizeModeChangedAndPostSyncSEL<R = void>(): R;
    _notifyView_DidSetAllCurrentItems<R = void, P0 = unknown>(__notifyView_DidSetAllCurrentItems: P0): R;
    _notifyFamily_DidSetAllCurrentItems<R = void, P0 = unknown>(__notifyFamily_DidSetAllCurrentItems: P0): R;
    _notifyView_InsertedNewItem_atIndex<R = void, P0 = unknown, P1 = number>(__notifyView_InsertedNewItem: P0, _atIndex: P1): R;
    _notifyFamily_InsertedNewItem_atIndex<R = void, P0 = unknown, P1 = number>(__notifyFamily_InsertedNewItem: P0, _atIndex: P1): R;
    _notifyView_MovedFromIndex_toIndex<R = void, P0 = number, P1 = number>(__notifyView_MovedFromIndex: P0, _toIndex: P1): R;
    _notifyFamily_MovedFromIndex_toIndex<R = void, P0 = number, P1 = number>(__notifyFamily_MovedFromIndex: P0, _toIndex: P1): R;
    _notifyView_DidRemoveItemAtIndex<R = void, P0 = number>(__notifyView_DidRemoveItemAtIndex: P0): R;
    _notifyFamily_DidRemoveItemAtIndex<R = void, P0 = number>(__notifyFamily_DidRemoveItemAtIndex: P0): R;
    _notifyDelegate_WillAddItem_atIndex<R = void, P0 = unknown, P1 = number>(__notifyDelegate_WillAddItem: P0, _atIndex: P1): R;
    _notifyDelegate_DidRemoveItems<R = void, P0 = unknown>(__notifyDelegate_DidRemoveItems: P0): R;
    _notifyDelegate_DidRemoveItem<R = void, P0 = unknown>(__notifyDelegate_DidRemoveItem: P0): R;
    _notifyDelegate_movedItem_fromIndex_toIndex<R = void, P0 = unknown, P1 = number, P2 = number>(__notifyDelegate_movedItem: P0, _fromIndex: P1, _toIndex: P2): R;
    _initialConfigurationDone<R = boolean>(): R;
    _changeSyncPostingEnabled<R = boolean>(): R;
    _enableChangeSync<R = void>(): R;
    _disableChangeSync<R = void>(): R;
    _noteItemVisibilityPriorityChanged<R = void, P0 = unknown>(__noteItemVisibilityPriorityChanged: P0): R;
    _canUserSetVisibilityPriority<R = boolean>(): R;
    _replaceAllItemsAndSetNewWithItemIdentifiers<R = void, P0 = unknown>(__replaceAllItemsAndSetNewWithItemIdentifiers: P0): R;
    _userSetCurrentItemsToItemIdentifiers<R = void, P0 = unknown>(__userSetCurrentItemsToItemIdentifiers: P0): R;
    _userResetToDefaultConfiguration<R = void>(): R;
    _userRemoveItemAtIndex<R = void, P0 = number>(__userRemoveItemAtIndex: P0): R;
    _userMoveItemFromIndex_toIndex<R = void, P0 = number, P1 = number>(__userMoveItemFromIndex: P0, _toIndex: P1): R;
    _userInsertItemWithItemIdentifier_atIndex<R = void, P0 = unknown, P1 = number>(__userInsertItemWithItemIdentifier: P0, _atIndex: P1): R;
    _userInsertItemsFromExternalDrag_startingAtIndex<R = void, P0 = unknown, P1 = number>(__userInsertItemsFromExternalDrag: P0, _startingAtIndex: P1): R;
    removeItemAtIndex<R = void, P0 = number>(_removeItemAtIndex: P0): R;
    insertItemWithItemIdentifier_atIndex<R = void, P0 = unknown, P1 = number>(_insertItemWithItemIdentifier: P0, _atIndex: P1): R;
    _loadAllPlaceholderItems<R = void>(): R;
    _setCurrentItemsToItemIdentifiers_itemIndexToPlistDictionary_notifyDelegate_notifyView_notifyFamilyAndUpdateDefaults<R = void, P0 = unknown, P1 = unknown, P2 = boolean, P3 = boolean, P4 = boolean>(__setCurrentItemsToItemIdentifiers: P0, _itemIndexToPlistDictionary: P1, _notifyDelegate: P2, _notifyView: P3, _notifyFamilyAndUpdateDefaults: P4): R;
    _removeItemAtIndex_notifyDelegate_notifyView_notifyFamilyAndUpdateDefaults<R = void, P0 = number, P1 = boolean, P2 = boolean, P3 = boolean>(__removeItemAtIndex: P0, _notifyDelegate: P1, _notifyView: P2, _notifyFamilyAndUpdateDefaults: P3): R;
    _moveItemFromIndex_toIndex_notifyDelegate_notifyView_notifyFamilyAndUpdateDefaults<R = void, P0 = number, P1 = number, P2 = boolean, P3 = boolean, P4 = boolean>(__moveItemFromIndex: P0, _toIndex: P1, _notifyDelegate: P2, _notifyView: P3, _notifyFamilyAndUpdateDefaults: P4): R;
    _insertNewItemWithItemIdentifier_atIndex_propertyListRepresentation_notifyFlags<R = void, P0 = unknown, P1 = number, P2 = unknown, P3 = number>(__insertNewItemWithItemIdentifier: P0, _atIndex: P1, _propertyListRepresentation: P2, _notifyFlags: P3): R;
    _insertItem_atIndex_notifyDelegate_notifyView_notifyFamilyAndUpdateDefaults<R = void, P0 = unknown, P1 = number, P2 = boolean, P3 = boolean, P4 = boolean>(__insertItem: P0, _atIndex: P1, _notifyDelegate: P2, _notifyView: P3, _notifyFamilyAndUpdateDefaults: P4): R;
    _forceRemoveItemFromIndex<R = void, P0 = number>(__forceRemoveItemFromIndex: P0): R;
    _forceMoveItemFromIndex_toIndex<R = void, P0 = number, P1 = number>(__forceMoveItemFromIndex: P0, _toIndex: P1): R;
    _forceReplaceItemAtIndex_withItem<R = void, P0 = number, P1 = unknown>(__forceReplaceItemAtIndex: P0, _withItem: P1): R;
    _forceInsertItem_atIndex<R = void, P0 = unknown, P1 = number>(__forceInsertItem: P0, _atIndex: P1): R;
    _forceAppendItem<R = void, P0 = unknown>(__forceAppendItem: P0): R;
    _makeFirstResponderForKeyboardHotKeyEvent<R = void>(): R;
    _computeToolbarItemKeyboardLoopIfNecessary<R = void>(): R;
    _setKeyboardLoopNeedsUpdating<R = void, P0 = boolean>(__setKeyboardLoopNeedsUpdating: P0): R;
    _keyboardLoopNeedsUpdating<R = boolean>(): R;
    _findFirstItemInArray_withItemIdentifier_withPropertyListRepresentation<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown>(__findFirstItemInArray: P0, _withItemIdentifier: P1, _withPropertyListRepresentation: P2): R;
    _itemAtIndex<R = unknown, P0 = number>(__itemAtIndex: P0): R;
    _sanityCheckPListDatabase<R = boolean, P0 = unknown>(__sanityCheckPListDatabase: P0): R;
    _nonPlaceholderItems<R = unknown>(): R;
    _numberOfItems<R = number>(): R;
    _items<R = unknown>(): R;
    _allowsDuplicateItems<R = boolean>(): R;
    isBezeled<R = boolean>(): R;
    setBezeled<R = void, P0 = boolean>(_setBezeled: P0): R;
    _drawsBackground<R = boolean>(): R;
    _backgroundColor<R = unknown>(): R;
    _setBackgroundColor<R = void, P0 = unknown>(__setBackgroundColor: P0): R;
    _setPreviousSizeAndDisplayMode<R = void>(): R;
    _setNextSizeAndDisplayMode<R = void>(): R;
    _previousDisplayMode<R = number>(): R;
    _nextDisplayMode<R = number>(): R;
    _setNeedsDisplayForItemIdentifierSelection<R = void, P0 = unknown>(__setNeedsDisplayForItemIdentifierSelection: P0): R;
    _isSelectableItemIdentifier<R = boolean, P0 = unknown>(__isSelectableItemIdentifier: P0): R;
    _allowsShowHideToolbarContextMenuItem<R = boolean>(): R;
    _allowsSizeMode<R = boolean, P0 = number>(__allowsSizeMode: P0): R;
    _allowsDisplayMode<R = boolean, P0 = number>(__allowsDisplayMode: P0): R;
    _reallyAllowsDisplayMode<R = boolean, P0 = number>(__reallyAllowsDisplayMode: P0): R;
    _hideBaselineOverride<R = boolean>(): R;
    _setHideBaselineOverride<R = void, P0 = boolean>(__setHideBaselineOverride: P0): R;
    _validateDisplayMode<R = number, P0 = number>(__validateDisplayMode: P0): R;
    _sizeModeIsValidForCurrentDisplayMode<R = boolean, P0 = number>(__sizeModeIsValidForCurrentDisplayMode: P0): R;
    _configSheetDidEnd_returnCode_contextInfo<R = void, P0 = unknown, P1 = number, P2 = void>(__configSheetDidEnd: P0, _returnCode: P1, _contextInfo: P2): R;
    _runCustomizationPanel<R = void>(): R;
    _canRunCustomizationPanel<R = boolean>(): R;
    _endCustomizationPanel<R = void>(): R;
    _isEditing<R = boolean>(): R;
    _setCustomizationPanelIsRunningFlag<R = void, P0 = boolean>(__setCustomizationPanelIsRunningFlag: P0): R;
    _customizationPanelIsRunningFlag<R = boolean>(): R;
    _endCustomizationPalette<R = void, P0 = unknown>(__endCustomizationPalette: P0): R;
    _customizationPaletteSheetWindow<R = unknown>(): R;
    runCustomizationPalette<R = void, P0 = unknown>(_runCustomizationPalette: P0): R;
    _setVisible_animate<R = void, P0 = boolean, P1 = boolean>(__setVisible: P0, _animate: P1): R;
    _toggleShown<R = void, P0 = unknown>(__toggleShown: P0): R;
    _toggleShown_animate<R = void, P0 = unknown, P1 = boolean>(__toggleShown: P0, _animate: P1): R;
    _hide_animate<R = void, P0 = unknown, P1 = boolean>(__hide: P0, _animate: P1): R;
    _show_animate<R = void, P0 = unknown, P1 = boolean>(__show: P0, _animate: P1): R;
    _windowDidHideToolbar<R = void>(): R;
    _windowWillShowToolbar<R = void>(): R;
    _windowOriginOffsetWhenHidingHint<R = number>(): R;
    _setWindowOriginOffsetWhenHidingHint<R = void, P0 = number>(__setWindowOriginOffsetWhenHidingHint: P0): R;
    _hideWithoutResizingWindowHint<R = boolean>(): R;
    _setHideWithoutResizingWindowHint<R = void, P0 = boolean>(__setHideWithoutResizingWindowHint: P0): R;
    _setPrefersToBeShown<R = void, P0 = boolean>(__setPrefersToBeShown: P0): R;
    _prefersToBeShown<R = boolean>(): R;
    _toolbarContextMenuForEvent<R = unknown, P0 = unknown>(__toolbarContextMenuForEvent: P0): R;
    _loadFromUDIfNecessary<R = void>(): R;
    _adjustViewToWindow<R = void>(): R;
    _loadViewIfNecessary<R = void>(): R;
    _toolbarViewClass<R = unknown>(): R;
    _loadInitialItemIdentifiers_requireImmediateLoad<R = void, P0 = unknown, P1 = boolean>(__loadInitialItemIdentifiers: P0, _requireImmediateLoad: P1): R;
    _noteDefaultMetricsChanged<R = void>(): R;
    _metrics<R = cocoa.__NSToolbarMetrics>(): R;
    _setMetrics<R = void, P0 = cocoa.__NSToolbarMetrics>(__setMetrics: P0): R;
    _customMetrics<R = unknown>(): R;
    _toolbarView<R = unknown>(): R;
    _setToolbarView<R = void, P0 = unknown>(__setToolbarView: P0): R;
    _setToolbarViewWindow<R = void, P0 = unknown>(__setToolbarViewWindow: P0): R;
    _setEnableDelegateNotifications<R = void, P0 = boolean>(__setEnableDelegateNotifications: P0): R;
    _synchronizeUserDefaultsIfNecessary<R = void>(): R;
    toolbarUserInterfaceLayoutDirection<R = number>(): R;
    setToolbarUserInterfaceLayoutDirection<R = void, P0 = number>(_setToolbarUserInterfaceLayoutDirection: P0): R;
    setCustomizationSheetWidth<R = void, P0 = number>(_setCustomizationSheetWidth: P0): R;
    _customizesAlwaysOnClickAndDrag<R = boolean>(): R;
    _setCustomizesAlwaysOnClickAndDrag<R = void, P0 = boolean>(__setCustomizesAlwaysOnClickAndDrag: P0): R;
    _wantsToolbarContextMenu<R = boolean>(): R;
    _setWantsToolbarContextMenu<R = void, P0 = boolean>(__setWantsToolbarContextMenu: P0): R;
    _firstMoveableItemIndex<R = number>(): R;
    _setFirstMoveableItemIndex<R = void, P0 = number>(__setFirstMoveableItemIndex: P0): R;
    dealloc<R = void>(): R;
    _deallocAuxiliary<R = void>(): R;
    _toolbarAuxiliary<R = unknown, P0 = boolean>(__toolbarAuxiliary: P0): R;
    _setIdentifier<R = void, P0 = unknown>(__setIdentifier: P0): R;
    initFromPList_target_andIdentifier<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown>(_initFromPList: P0, _target: P1, _andIdentifier: P2): R;
    initWithIdentifier<R = unknown, P0 = unknown>(_initWithIdentifier: P0): R;
    _userInterfaceLayoutDirection<R = number>(): R;
    _shouldOptOutOfRTL<R = boolean>(): R;
    _toolbarCommonFinishInit<R = void>(): R;
    _toolbarCommonBeginInit<R = void>(): R;
    _toolbarUnregisterForNotifications<R = void>(): R;
    _toolbarRegisterForNotifications<R = void>(): R;
    allowsExtensionItems<R = boolean>(): R;
    setAllowsExtensionItems<R = void, P0 = boolean>(_v: P0): R;
    autosavesConfiguration<R = boolean>(): R;
    setAutosavesConfiguration<R = void, P0 = boolean>(_v: P0): R;
    configurationDictionary<R = cocoa.NSDictionary>(): R;
    centeredItemIdentifier<R = cocoa.NSString>(): R;
    setCenteredItemIdentifier<R = void, P0 = cocoa.NSString>(_v: P0): R;
    visibleItems<R = cocoa.NSArray>(): R;
    items<R = cocoa.NSArray>(): R;
    identifier<R = cocoa.NSString>(): R;
    allowsUserCustomization<R = boolean>(): R;
    setAllowsUserCustomization<R = void, P0 = boolean>(_v: P0): R;
    displayMode<R = number>(): R;
    setDisplayMode<R = void, P0 = number>(_v: P0): R;
    selectedItemIdentifier<R = cocoa.NSString>(): R;
    setSelectedItemIdentifier<R = void, P0 = cocoa.NSString>(_v: P0): R;
    showsBaselineSeparator<R = boolean>(): R;
    setShowsBaselineSeparator<R = void, P0 = boolean>(_v: P0): R;
    sizeMode<R = number>(): R;
    setSizeMode<R = void, P0 = number>(_v: P0): R;
    customizationPaletteIsRunning<R = boolean>(): R;
    visible<R = boolean>(): R;
    setVisible<R = void, P0 = boolean>(_v: P0): R;
    delegate<R = cocoa.NSToolbarDelegate>(): R;
    setDelegate<R = void, P0 = cocoa.NSToolbarDelegate>(_v: P0): R;
    // + NSToolbar(CHToolbarExtensions):
    itemWithIdentifier<R = unknown, P0 = unknown>(_itemWithIdentifier: P0): R;
  }
  namespace classes {
    export interface NSToolbar<T = any> extends cocoa.classes.NSObject {
      alloc<R = NSToolbar>(): R;
      new: <R = NSToolbar>() => R;
      _servicesIdentifiers<R = unknown>(): R;
      _shouldIgnoreItemIdentifier<R = boolean, P0 = unknown>(__shouldIgnoreItemIdentifier: P0): R;
      _newStandardItemWithItemIdentifier<R = unknown, P0 = unknown>(__newStandardItemWithItemIdentifier: P0): R;
      _newPlaceholderItemWithItemIdentifier<R = unknown, P0 = unknown>(__newPlaceholderItemWithItemIdentifier: P0): R;
      _newUnknownItemWithItemIdentifier<R = unknown, P0 = unknown>(__newUnknownItemWithItemIdentifier: P0): R;
      toolbarInstancesWithIdentifier<R = unknown, P0 = unknown>(_toolbarInstancesWithIdentifier: P0): R;
      _unregisterToolbarInstance<R = void, P0 = unknown>(__unregisterToolbarInstance: P0): R;
      _registerToolbarInstance<R = void, P0 = unknown>(__registerToolbarInstance: P0): R;
      _allowSmallIcons<R = boolean>(): R;
      // + NSToolbar(CHToolbarExtensions):
      
    }
  }
}

declare const NSToolbar: cocoa.classes.NSToolbar;
