/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSVBSavePanel<T = any> extends NSPanel, NSOpenAndSavePanelRemoteViewExportedToServiceProtocolProtocol {
    _startServiceFailedAlert<R = boolean>(): R;
    setCanDownloadUbiquitousContents<R = void, P0 = boolean>(_setCanDownloadUbiquitousContents: P0): R;
    canDownloadUbiquitousContents<R = boolean>(): R;
    setCanResolveUbiquitousConflicts<R = void, P0 = boolean>(_setCanResolveUbiquitousConflicts: P0): R;
    canResolveUbiquitousConflicts<R = boolean>(): R;
    setCanChooseFiles<R = void, P0 = boolean>(_setCanChooseFiles: P0): R;
    canChooseFiles<R = boolean>(): R;
    setAllowsMultipleSelection<R = void, P0 = boolean>(_setAllowsMultipleSelection: P0): R;
    allowsMultipleSelection<R = boolean>(): R;
    setCanChooseDirectories<R = void, P0 = boolean>(_setCanChooseDirectories: P0): R;
    canChooseDirectories<R = boolean>(): R;
    setResolvesAliases<R = void, P0 = boolean>(_setResolvesAliases: P0): R;
    resolvesAliases<R = boolean>(): R;
    filenames<R = unknown>(): R;
    _securityScopedURLs<R = unknown>(): R;
    URLs<R = unknown>(): R;
    _URLsWithSecurityScoped<R = unknown, P0 = boolean>(__URLsWithSecurityScoped: P0): R;
    beginSheetForDirectory_file_modalForWindow_modalDelegate_didEndSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = string, P5 = void>(_beginSheetForDirectory: P0, _file: P1, _modalForWindow: P2, _modalDelegate: P3, _didEndSelector: P4, _contextInfo: P5): R;
    beginSheetForDirectory_file_types_modalForWindow_modalDelegate_didEndSelector_contextInfo<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = string, P6 = void>(_beginSheetForDirectory: P0, _file: P1, _types: P2, _modalForWindow: P3, _modalDelegate: P4, _didEndSelector: P5, _contextInfo: P6): R;
    runModalForDirectory_file<R = number, P0 = unknown, P1 = unknown>(_runModalForDirectory: P0, _file: P1): R;
    runModalForTypes<R = number, P0 = unknown>(_runModalForTypes: P0): R;
    runModalForDirectory_file_types<R = number, P0 = unknown, P1 = unknown, P2 = unknown>(_runModalForDirectory: P0, _file: P1, _types: P2): R;
    setRequiredFileType<R = void, P0 = unknown>(_setRequiredFileType: P0): R;
    requiredFileType<R = unknown>(): R;
    setDirectory<R = void, P0 = unknown>(_setDirectory: P0): R;
    directory<R = unknown>(): R;
    filename<R = unknown>(): R;
    runModal<R = number>(): R;
    beginWithCompletionHandler<R = void, P0 = CDUnknownBlockType>(_beginWithCompletionHandler: P0): R;
    beginSheetModalForWindow_completionHandler<R = void, P0 = unknown, P1 = CDUnknownBlockType>(_beginSheetModalForWindow: P0, _completionHandler: P1): R;
    commonPrep_runningAsASheet_hostWindow_runningAsASheet<R = void, P0 = CDUnknownBlockType, P1 = boolean, P2 = boolean>(_commonPrep: P0, _runningAsASheet: P1, _hostWindow_runningAsASheet: P2): R;
    _setAccessoryViewDisclosedVBKVO<R = void, P0 = boolean>(__setAccessoryViewDisclosedVBKVO: P0): R;
    _setAccessoryViewDisclosed<R = void, P0 = boolean>(__setAccessoryViewDisclosed: P0): R;
    _resetPrivateState<R = void>(): R;
    advanceToRunPhaseIfNeededLayerCentric<R = void>(): R;
    viewDidAdvanceToRunPhase<R = void, P0 = unknown>(_viewDidAdvanceToRunPhase: P0): R;
    didEndSheet_returnCode_contextInfo<R = void, P0 = unknown, P1 = number, P2 = void>(_didEndSheet: P0, _returnCode: P1, _contextInfo: P2): R;
    observeAsynchronousIBActionKeyPath_paramDict<R = void, P0 = unknown, P1 = unknown>(_observeAsynchronousIBActionKeyPath: P0, _paramDict: P1): R;
    observeAsynchronousDelegateMethodCallKeyPath_paramDict<R = void, P0 = unknown, P1 = unknown>(_observeAsynchronousDelegateMethodCallKeyPath: P0, _paramDict: P1): R;
    observeAsynchronousRemoteMethodCallKeyPath_paramDict<R = void, P0 = unknown, P1 = unknown>(_observeAsynchronousRemoteMethodCallKeyPath: P0, _paramDict: P1): R;
    observeMostRecentCompletion<R = void, P0 = unknown>(_observeMostRecentCompletion: P0): R;
    completeWithReturnCode_url_urls<R = void, P0 = number, P1 = unknown, P2 = unknown>(_completeWithReturnCode: P0, _url: P1, _urls: P2): R;
    completeSheet<R = void, P0 = number>(_completeSheet: P0): R;
    completeModal<R = void, P0 = number>(_completeModal: P0): R;
    completeModeless<R = void, P0 = number>(_completeModeless: P0): R;
    _removeExtraRetainIfNeeded<R = void>(): R;
    didEndPanelWithReturnCode<R = void, P0 = number>(_didEndPanelWithReturnCode: P0): R;
    induceEventLoopIterationSoon<R = void>(): R;
    ok<R = void, P0 = unknown>(_ok: P0): R;
    setTagNames<R = void, P0 = unknown>(_setTagNames: P0): R;
    tagNames<R = unknown>(): R;
    setShowsTagField<R = void, P0 = boolean>(_setShowsTagField: P0): R;
    showsTagField<R = boolean>(): R;
    setShowsHiddenFiles<R = void, P0 = boolean>(_setShowsHiddenFiles: P0): R;
    showsHiddenFiles<R = boolean>(): R;
    _sendAccessoryViewLayoutInfoForView<R = void, P0 = unknown>(__sendAccessoryViewLayoutInfoForView: P0): R;
    validateVisibleColumns<R = void>(): R;
    setMessage<R = void, P0 = unknown>(_setMessage: P0): R;
    message<R = unknown>(): R;
    setNameFieldStringValue<R = void, P0 = unknown>(_setNameFieldStringValue: P0): R;
    nameFieldStringValue<R = unknown>(): R;
    setNameFieldLabel<R = void, P0 = unknown>(_setNameFieldLabel: P0): R;
    nameFieldLabel<R = unknown>(): R;
    setTitle<R = void, P0 = unknown>(_setTitle: P0): R;
    title<R = unknown>(): R;
    setPrompt<R = void, P0 = unknown>(_setPrompt: P0): R;
    prompt<R = unknown>(): R;
    setTreatsFilePackagesAsDirectories<R = void, P0 = boolean>(_setTreatsFilePackagesAsDirectories: P0): R;
    treatsFilePackagesAsDirectories<R = boolean>(): R;
    setExtensionHidden<R = void, P0 = boolean>(_setExtensionHidden: P0): R;
    isExtensionHidden<R = boolean>(): R;
    setCanSelectHiddenExtension<R = void, P0 = boolean>(_setCanSelectHiddenExtension: P0): R;
    canSelectHiddenExtension<R = boolean>(): R;
    setCanCreateDirectories<R = void, P0 = boolean>(_setCanCreateDirectories: P0): R;
    canCreateDirectories<R = boolean>(): R;
    isExpanded<R = boolean>(): R;
    refreshDelegateOptions<R = void>(): R;
    _setSupportedDelegateMethods<R = void, P0 = unknown>(__setSupportedDelegateMethods: P0): R;
    _supportedDelegateMethods<R = unknown>(): R;
    setDelegate<R = void, P0 = unknown>(_setDelegate: P0): R;
    delegate<R = unknown>(): R;
    accessoryDidChangeConstraints<R = void, P0 = CGSize>(_accessoryDidChangeConstraints: P0): R;
    accessoryWindowOfViewWillUpdateConstraintsIfNeeded<R = void, P0 = unknown>(_accessoryWindowOfViewWillUpdateConstraintsIfNeeded: P0): R;
    setAccessoryView<R = void, P0 = unknown>(_setAccessoryView: P0): R;
    accessoryView<R = unknown>(): R;
    setAllowsOtherFileTypes<R = void, P0 = boolean>(_setAllowsOtherFileTypes: P0): R;
    allowsOtherFileTypes<R = boolean>(): R;
    setAllowedFileTypes<R = void, P0 = unknown>(_setAllowedFileTypes: P0): R;
    allowedFileTypes<R = unknown>(): R;
    setDirectoryURL<R = void, P0 = unknown>(_setDirectoryURL: P0): R;
    directoryURL<R = unknown>(): R;
    _securityScopedURL<R = unknown>(): R;
    URL<R = unknown>(): R;
    _URLWithSecurityScoped<R = unknown, P0 = boolean>(__URLWithSecurityScoped: P0): R;
    setURL<R = void, P0 = unknown>(_setURL: P0): R;
    _attachSandboxExtensionsAndStartAccessing<R = void>(): R;
    _attachSandboxExtensions_toURL_orURLs<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(__attachSandboxExtensions: P0, _toURL: P1, _orURLs: P2): R;
    _attachSandboxExtension_toURL<R = void, P0 = unknown, P1 = unknown>(__attachSandboxExtension: P0, _toURL: P1): R;
    bridge<R = unknown>(): R;
    viewDidInvalidate<R = void, P0 = unknown>(_viewDidInvalidate: P0): R;
    viewWillInvalidate<R = void, P0 = unknown>(_viewWillInvalidate: P0): R;
    _setDefaultBridgeValues<R = void>(): R;
    _addObservers_onBridge<R = void, P0 = boolean, P1 = unknown>(__addObservers: P0, _onBridge: P1): R;
    _invalidateRemoteView<R = void>(): R;
    remoteView<R = unknown>(): R;
    styleMaskForHostWindow<R = number>(): R;
    valueforUndefinedKey<R = unknown, P0 = unknown>(_valueforUndefinedKey: P0): R;
    setValue_forUndefinedKey<R = void, P0 = unknown, P1 = unknown>(_setValue: P0, _forUndefinedKey: P1): R;
    kvoKeys<R = unknown>(): R;
    configureContentView<R = void, P0 = unknown>(_configureContentView: P0): R;
    isLayerCentric<R = boolean>(): R;
    panel<R = unknown>(): R;
    serviceViewControllerInterface<R = unknown>(): R;
    exportedInterface<R = unknown>(): R;
    shouldRetainExportedObject<R = boolean>(): R;
    iCloudOpenPanel<R = boolean>(): R;
    MondoSetFilenameWithProperSelection<R = void, P0 = unknown>(_MondoSetFilenameWithProperSelection: P0): R;
    _startRectForSheetHeightOffset<R = number>(): R;
    _hideWindowForTimeMachineMode<R = void, P0 = boolean>(__hideWindowForTimeMachineMode: P0): R;
    _orderRemoteWindow_sender<R = void, P0 = number, P1 = unknown>(__orderRemoteWindow: P0, _sender: P1): R;
    _setOverwritingAlertSuppressionURL<R = void, P0 = unknown>(__setOverwritingAlertSuppressionURL: P0): R;
    _overwritingAlertSuppressionURL<R = unknown>(): R;
    _setIsExpanded_andStoreState<R = void, P0 = boolean, P1 = boolean>(__setIsExpanded: P0, _andStoreState: P1): R;
    _setIsExpanded<R = void, P0 = boolean>(__setIsExpanded: P0): R;
    _sendAccessoryView<R = void, P0 = unknown>(__sendAccessoryView: P0): R;
    _setRemoteAccessoryViewAvailable<R = void, P0 = boolean>(__setRemoteAccessoryViewAvailable: P0): R;
    _remoteAccessoryViewAvailable<R = boolean>(): R;
    _setRemoteAccessoryView<R = void, P0 = unknown>(__setRemoteAccessoryView: P0): R;
    _remoteAccessoryView<R = unknown>(): R;
    _accessoryViewDisclosedVBKVO<R = boolean>(): R;
    _accessoryViewDisclosed<R = boolean>(): R;
    _accessoryViewDisclosureIsSupported<R = boolean>(): R;
    _shouldShowOptionsButton<R = boolean>(): R;
    _setShouldShowOptionsButton<R = void, P0 = boolean>(__setShouldShowOptionsButton: P0): R;
    _configureForFilename<R = void, P0 = unknown>(__configureForFilename: P0): R;
    _shouldSetTagsForClient<R = boolean>(): R;
    _showsTagField<R = boolean>(): R;
    _setShowsTagField<R = void, P0 = boolean>(__setShowsTagField: P0): R;
    _tags<R = unknown>(): R;
    _setTags<R = void, P0 = unknown>(__setTags: P0): R;
    _shouldRevertOriginalDocument<R = boolean>(): R;
    _setShouldRevertOriginalDocument<R = void, P0 = boolean>(__setShouldRevertOriginalDocument: P0): R;
    _showsRevertOriginalDocumentButton<R = boolean>(): R;
    _setShowsRevertOriginalDocumentButton<R = void, P0 = boolean>(__setShowsRevertOriginalDocumentButton: P0): R;
    _setAlertInformativeMessage<R = void, P0 = unknown>(__setAlertInformativeMessage: P0): R;
    _alertInformativeMessage<R = unknown>(): R;
    _setAlertMessage<R = void, P0 = unknown>(__setAlertMessage: P0): R;
    _alertMessage<R = unknown>(): R;
    _setUseAlertStyle<R = void, P0 = boolean>(__setUseAlertStyle: P0): R;
    _useAlertStyle<R = boolean>(): R;
    _setDontSaveButtonTitle<R = void, P0 = unknown>(__setDontSaveButtonTitle: P0): R;
    _dontSaveButtonTitle<R = unknown>(): R;
    _setEnabledFileTypes<R = void, P0 = unknown>(__setEnabledFileTypes: P0): R;
    _okButtonDisabled<R = boolean>(): R;
    _setOkButtonDisabled<R = void, P0 = boolean>(__setOkButtonDisabled: P0): R;
    _showNewDocumentButton<R = boolean>(): R;
    _setShowNewDocumentButton<R = void, P0 = boolean>(__setShowNewDocumentButton: P0): R;
    setURL_forKey<R = void, P0 = unknown, P1 = unknown>(_setURL: P0, _forKey: P1): R;
    urlForKey<R = unknown, P0 = unknown>(_urlForKey: P0): R;
    _stringForKey<R = unknown, P0 = unknown>(__stringForKey: P0): R;
    _setString_forKey<R = void, P0 = unknown, P1 = unknown>(__setString: P0, _forKey: P1): R;
    _setForKey<R = unknown, P0 = unknown>(__setForKey: P0): R;
    _setSet_forKey<R = void, P0 = unknown, P1 = unknown>(__setSet: P0, _forKey: P1): R;
    _dictForKey<R = unknown, P0 = unknown>(__dictForKey: P0): R;
    _setDict_forKey<R = void, P0 = unknown, P1 = unknown>(__setDict: P0, _forKey: P1): R;
    _arrayForKey<R = unknown, P0 = unknown>(__arrayForKey: P0): R;
    _setArray_forKey<R = void, P0 = unknown, P1 = unknown>(__setArray: P0, _forKey: P1): R;
    _floatForKey<R = number, P0 = unknown>(__floatForKey: P0): R;
    _boolForKey<R = boolean, P0 = unknown>(__boolForKey: P0): R;
    _setBool_forKey<R = void, P0 = boolean, P1 = unknown>(__setBool: P0, _forKey: P1): R;
    lastReportedAccessorySize<R = CGSize>(): R;
    setLastReportedAccessorySize<R = void, P0 = CGSize>(_v: P0): R;
    appCentric<R = boolean>(): R;
    accessoryViewDisclosed<R = boolean>(): R;
    setAccessoryViewDisclosed<R = void, P0 = boolean>(_v: P0): R;
  }
  namespace classes {
    export interface NSVBSavePanel<T = any> extends NSPanel, NSOpenAndSavePanelRemoteViewExportedToServiceProtocolProtocol {
      alloc<R = NSVBSavePanel>(): R;
      new: <R = NSVBSavePanel>() => R;
      savePanel<R = unknown>(): R;
      _warmUp<R = void>(): R;
      keyPathsForValuesAffectingValueForKey<R = unknown, P0 = unknown>(_keyPathsForValuesAffectingValueForKey: P0): R;
    }
  }
}

declare const NSVBSavePanel: cocoa.classes.NSVBSavePanel;
