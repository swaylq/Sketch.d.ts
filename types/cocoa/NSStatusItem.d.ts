/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSStatusItem<T = any> extends cocoa.NSObject {
    setAllowsVibrancy<R = void, P0 = boolean>(_setAllowsVibrancy: P0): R;
    allowsVibrancy<R = boolean>(): R;
    setDelegate<R = void, P0 = unknown>(_setDelegate: P0): R;
    delegate<R = unknown>(): R;
    _allowReplication<R = boolean>(): R;
    _windowNeedsReplicantUpdate<R = void, P0 = unknown>(__windowNeedsReplicantUpdate: P0): R;
    _enableStatusItemImageReplication<R = void>(): R;
    _disableStatusItemImageReplication<R = void>(): R;
    _updateReplicantsUnlessMenuIsTracking<R = void, P0 = unknown>(__updateReplicantsUnlessMenuIsTracking: P0): R;
    _setSubitemOffsets_count<R = void, P0 = number, P1 = number>(__setSubitemOffsets: P0, _count: P1): R;
    _confiningDisplayID<R = unknown>(): R;
    _confiningSpaceID<R = number>(): R;
    _statusItemFlags<R = number>(): R;
    _shouldReplicate<R = boolean>(): R;
    _isExitFullScreen<R = boolean>(): R;
    _removeAllReplicants<R = void>(): R;
    _replicateWithKeys<R = void, P0 = unknown>(__replicateWithKeys: P0): R;
    _priority<R = number>(): R;
    _displayIdentifier<R = unknown>(): R;
    _setDisplayIdentifier<R = void, P0 = unknown>(__setDisplayIdentifier: P0): R;
    screen<R = unknown>(): R;
    _moveToScreen<R = boolean, P0 = unknown>(__moveToScreen: P0): R;
    _moveToScreenContainingActiveMenuBar<R = unknown>(): R;
    _swapScreensWithReplicant<R = void, P0 = unknown>(__swapScreensWithReplicant: P0): R;
    _rawSetDisplayIdentifier<R = void, P0 = unknown>(__rawSetDisplayIdentifier: P0): R;
    _updateReplicants<R = void>(): R;
    _drawingReplicantView<R = boolean>(): R;
    _recursiveSetNeedsDisplayWithoutDirtyingReplicantForView<R = void, P0 = unknown>(__recursiveSetNeedsDisplayWithoutDirtyingReplicantForView: P0): R;
    _updateReplicant<R = void, P0 = unknown>(__updateReplicant: P0): R;
    _removeReplicantForKey<R = void, P0 = unknown>(__removeReplicantForKey: P0): R;
    _setBackgroundStyle<R = void, P0 = number>(__setBackgroundStyle: P0): R;
    _backgroundStyle<R = number>(): R;
    _adjustLengthDueToViewFrameChange<R = void, P0 = unknown>(__adjustLengthDueToViewFrameChange: P0): R;
    _adjustLength<R = void>(): R;
    _button<R = unknown>(): R;
    _window<R = unknown>(): R;
    _isDragging<R = boolean>(): R;
    _completeStatusItemDrag<R = void>(): R;
    _startStatusItemDrag<R = void>(): R;
    _noteDraggedLongEnoughToAllowRemoval<R = void>(): R;
    _navigationController<R = unknown>(): R;
    _terminateOnRemoval<R = boolean>(): R;
    _allowsUserRemoval<R = boolean>(): R;
    _effectiveBehavior<R = number>(): R;
    _validateBehavior<R = void, P0 = number>(__validateBehavior: P0): R;
    _hasNavigationHighlight<R = boolean>(): R;
    _setNavigationHighlight<R = void, P0 = boolean>(__setNavigationHighlight: P0): R;
    _participatesInNavigationLoop<R = boolean>(): R;
    _defaultAutosaveName<R = unknown>(): R;
    _restorePreferencesFromAutosaveName<R = void>(): R;
    _allowItemDragging<R = boolean>(): R;
    _autosavePosition<R = void>(): R;
    _itemMovedDuringDrag<R = void>(): R;
    _cleanUpDragCursorIfNeeded<R = void>(): R;
    _isInstalled<R = boolean>(): R;
    _uninstall<R = void>(): R;
    _install<R = void>(): R;
    _visibleDefaultsKey<R = unknown>(): R;
    _preferredPositionDefaultsKey<R = unknown>(): R;
    _defaultsKeyForAutosaveProperty<R = unknown, P0 = unknown>(__defaultsKeyForAutosaveProperty: P0): R;
    _initInStatusBar_withLength_withPriority_hidden_systemInsertOrder<R = unknown, P0 = unknown, P1 = number, P2 = number, P3 = boolean, P4 = number>(__initInStatusBar: P0, _withLength: P1, _withPriority: P2, _hidden: P3, _systemInsertOrder: P4): R;
    _initInStatusBar_withLength_withPriority_hidden<R = unknown, P0 = unknown, P1 = number, P2 = number, P3 = boolean>(__initInStatusBar: P0, _withLength: P1, _withPriority: P2, _hidden: P3): R;
    _initInStatusBar_withLength_withPriority<R = unknown, P0 = unknown, P1 = number, P2 = number>(__initInStatusBar: P0, _withLength: P1, _withPriority: P2): R;
    _initInStatusBar_withLength_withPriority_systemInsertOrder<R = unknown, P0 = unknown, P1 = number, P2 = number, P3 = number>(__initInStatusBar: P0, _withLength: P1, _withPriority: P2, _systemInsertOrder: P3): R;
    setView<R = void, P0 = unknown>(_setView: P0): R;
    _activeMenuBarDrawingStyleDidChange<R = void>(): R;
    _propagateBackgroundStyle<R = void>(): R;
    view<R = unknown>(): R;
    drawStatusBarBackgroundInRect_withHighlight<R = void, P0 = cocoa.CGRect, P1 = boolean>(_drawStatusBarBackgroundInRect: P0, _withHighlight: P1): R;
    backgroundStyleForHighlight<R = number, P0 = boolean>(_backgroundStyleForHighlight: P0): R;
    _setPopupMenuAssociation<R = void, P0 = unknown>(__setPopupMenuAssociation: P0): R;
    _removePopupMenuAssociation<R = void, P0 = unknown>(__removePopupMenuAssociation: P0): R;
    _popupMenuBeingOpened<R = unknown>(): R;
    popUpStatusItemMenu<R = void, P0 = unknown>(_popUpStatusItemMenu: P0): R;
    sendActionOn<R = number, P0 = number>(_sendActionOn: P0): R;
    setHighlightMode<R = void, P0 = boolean>(_setHighlightMode: P0): R;
    highlightMode<R = boolean>(): R;
    setToolTip<R = void, P0 = unknown>(_setToolTip: P0): R;
    toolTip<R = unknown>(): R;
    setEnabled<R = void, P0 = boolean>(_setEnabled: P0): R;
    isEnabled<R = boolean>(): R;
    _statusItemMenu<R = unknown>(): R;
    setAlternateImage<R = void, P0 = unknown>(_setAlternateImage: P0): R;
    alternateImage<R = unknown>(): R;
    _statusBarButtonDidSetImagePosition<R = void>(): R;
    _statusBarButtonDidSetAlternateImage<R = void>(): R;
    _statusBarButtonDidSetImage<R = void>(): R;
    _statusBarButtonDidSetTitle<R = void>(): R;
    setImage<R = void, P0 = unknown>(_setImage: P0): R;
    image<R = unknown>(): R;
    setAttributedTitle<R = void, P0 = unknown>(_setAttributedTitle: P0): R;
    attributedTitle<R = unknown>(): R;
    setTitle<R = void, P0 = unknown>(_setTitle: P0): R;
    title<R = unknown>(): R;
    _updateButtonImagePosition<R = void>(): R;
    setTarget<R = void, P0 = unknown>(_setTarget: P0): R;
    target<R = unknown>(): R;
    setDoubleAction<R = void, P0 = string>(_setDoubleAction: P0): R;
    doubleAction<R = string>(): R;
    setAction<R = void, P0 = string>(_setAction: P0): R;
    action<R = string>(): R;
    _setHidden<R = void, P0 = boolean>(__setHidden: P0): R;
    _isHidden<R = boolean>(): R;
    _clearAutosavedState<R = void>(): R;
    _clearAutosavedPreferredPosition<R = void>(): R;
    _setSystemInsertOrder<R = void, P0 = number>(__setSystemInsertOrder: P0): R;
    _systemInsertOrder<R = number>(): R;
    dealloc<R = void>(): R;
    _accessibilityContainer<R = unknown>(): R;
    button<R = cocoa.NSStatusBarButton>(): R;
    visible<R = boolean>(): R;
    setVisible<R = void, P0 = boolean>(_v: P0): R;
    behavior<R = number>(): R;
    setBehavior<R = void, P0 = number>(_v: P0): R;
    autosaveName<R = cocoa.NSString>(): R;
    setAutosaveName<R = void, P0 = cocoa.NSString>(_v: P0): R;
    menu<R = cocoa.NSMenu>(): R;
    setMenu<R = void, P0 = cocoa.NSMenu>(_v: P0): R;
    length<R = number>(): R;
    setLength<R = void, P0 = number>(_v: P0): R;
    statusBar<R = cocoa.NSStatusBar>(): R;
  }
  namespace classes {
    export interface NSStatusItem<T = any> extends cocoa.classes.NSObject {
      alloc<R = NSStatusItem>(): R;
      new: <R = NSStatusItem>() => R;
      _itemInStatusBar_withLength_withPriority_systemInsertOrder<R = unknown, P0 = unknown, P1 = number, P2 = number, P3 = number>(__itemInStatusBar: P0, _withLength: P1, _withPriority: P2, _systemInsertOrder: P3): R;
      _statusItems_setHidden<R = void, P0 = unknown, P1 = boolean>(__statusItems: P0, _setHidden: P1): R;
    }
  }
}

declare const NSStatusItem: cocoa.classes.NSStatusItem;
