/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSScrollerImp<T = any> extends cocoa.NSObject {
    mouseExitedScroller<R = void>(): R;
    mouseEnteredScroller<R = void>(): R;
    _installDelayedRolloverAnimation<R = void>(): R;
    _animateOutOfRolloverState<R = void>(): R;
    _animateToRolloverState<R = void>(): R;
    _animateCollapse<R = void>(): R;
    _animateExpansion<R = void>(): R;
    _rolloverTrackingRect<R = cocoa.CGRect>(): R;
    removeTrackingAreas<R = void>(): R;
    updateTrackingAreas<R = void>(): R;
    drawKnobWithAlpha<R = void, P0 = number>(_drawKnobWithAlpha: P0): R;
    drawKnob<R = void>(): R;
    drawKnobSlotInRect_highlight_alpha<R = void, P0 = cocoa.CGRect, P1 = boolean, P2 = number>(_drawKnobSlotInRect: P0, _highlight: P1, _alpha: P2): R;
    drawKnobSlotInRect_highlight<R = void, P0 = cocoa.CGRect, P1 = boolean>(_drawKnobSlotInRect: P0, _highlight: P1): R;
    _compositeScrollerPart_inRect_withAlpha_drawHandler<R = void, P0 = number, P1 = cocoa.CGRect, P2 = number, P3 = cocoa.CDUnknownBlockType>(__compositeScrollerPart: P0, _inRect: P1, _withAlpha: P2, _drawHandler: P3): R;
    displayLayer<R = void, P0 = unknown>(_displayLayer: P0): R;
    _vibrancyBlendModeForAppearance<R = number, P0 = unknown>(__vibrancyBlendModeForAppearance: P0): R;
    copyCoreUITrackOptions<R = cocoa.__CFDictionary>(): R;
    copyCoreUIKnobOptions<R = cocoa.__CFDictionary>(): R;
    copyCoreUIOptions<R = cocoa.__CFDictionary>(): R;
    hitTestForLocalPoint<R = boolean, P0 = cocoa.CGPoint>(_hitTestForLocalPoint: P0): R;
    expandedRectForPart<R = cocoa.CGRect, P0 = number>(_expandedRectForPart: P0): R;
    _unsafeRectForPart<R = cocoa.CGRect, P0 = number>(__unsafeRectForPart: P0): R;
    _threadsafeRectForPart_preBlock_postBlock<R = cocoa.CGRect, P0 = number, P1 = cocoa.CDUnknownBlockType, P2 = cocoa.CDUnknownBlockType>(__threadsafeRectForPart: P0, _preBlock: P1, _postBlock: P2): R;
    rectForPart<R = cocoa.CGRect, P0 = number>(_rectForPart: P0): R;
    usableParts<R = number>(): R;
    checkSpaceForParts<R = void>(): R;
    knobInset<R = number>(): R;
    _expandedKnobMinLength<R = number>(): R;
    _expandedTrackWidth<R = number>(): R;
    _expandedTrackBoxWidth<R = number>(): R;
    setOverlayScrollerState_forceImmediately<R = void, P0 = number, P1 = boolean>(_setOverlayScrollerState: P0, _forceImmediately: P1): R;
    _doWork<R = void, P0 = cocoa.CDUnknownBlockType>(__doWork: P0): R;
    overlayScrollerState<R = number>(): R;
    _hasCustomScroller<R = boolean>(): R;
    _wantsRedisplayOnExpansionProgress<R = boolean>(): R;
    _useCoreUILayerContents<R = boolean>(): R;
    _setUseCoreUILayerContents<R = void, P0 = boolean>(__setUseCoreUILayerContents: P0): R;
    _usesSeparateLayersPerPart<R = boolean>(): R;
    setNeedsDisplayInRect<R = void, P0 = cocoa.CGRect>(_setNeedsDisplayInRect: P0): R;
    setNeedsDisplay<R = void, P0 = boolean>(_setNeedsDisplay: P0): R;
    _makeScrollerPartLayer<R = unknown>(): R;
    _setupCommonLayerProperties<R = void, P0 = unknown>(__setupCommonLayerProperties: P0): R;
    actionForLayer_forKey<R = unknown, P0 = unknown, P1 = unknown>(_actionForLayer: P0, _forKey: P1): R;
    observeValueForKeyPath_ofObject_change_context<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = void>(_observeValueForKeyPath: P0, _ofObject: P1, _change: P2, _context: P3): R;
    layer_shouldInheritContentsScale_fromWindow<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(_layer: P0, _shouldInheritContentsScale: P1, _fromWindow: P2): R;
    _drawScrollerPartForLayer<R = void, P0 = unknown>(__drawScrollerPartForLayer: P0): R;
    _updateKnobPresentation<R = void>(): R;
    _updateLayerGeometry<R = void>(): R;
    dealloc<R = void>(): R;
    invalidate<R = void>(): R;
    action<R = string>(): R;
    setAction<R = void, P0 = string>(_v: P0): R;
    target<R = unknown>(): R;
    setTarget<R = void, P0 = unknown>(_v: P0): R;
    delegate<R = cocoa.NSScrollerImpDelegate>(): R;
    setDelegate<R = void, P0 = cocoa.NSScrollerImpDelegate>(_v: P0): R;
    rangeIndicatorAlpha<R = number>(): R;
    setRangeIndicatorAlpha<R = void, P0 = number>(_v: P0): R;
    uiStateTransitionProgress<R = number>(): R;
    setUiStateTransitionProgress<R = void, P0 = number>(_v: P0): R;
    knobLength<R = number>(): R;
    trackOverlapEndInset<R = number>(): R;
    knobOverlapEndInset<R = number>(): R;
    knobMinLength<R = number>(): R;
    knobEndInset<R = number>(): R;
    trackEndInset<R = number>(): R;
    trackSideInset<R = number>(): R;
    trackWidth<R = number>(): R;
    trackBoxWidth<R = number>(): R;
    expanded<R = boolean>(): R;
    setExpanded<R = void, P0 = boolean>(_v: P0): R;
    shouldDrawRolloverState<R = boolean>(): R;
    setShouldDrawRolloverState<R = void, P0 = boolean>(_v: P0): R;
    tracking<R = boolean>(): R;
    setTracking<R = void, P0 = boolean>(_v: P0): R;
    knobStyle<R = number>(): R;
    setKnobStyle<R = void, P0 = number>(_v: P0): R;
    scrollerStyle<R = number>(): R;
    controlSize<R = number>(): R;
    avoidingOtherScrollerThumb<R = boolean>(): R;
    setAvoidingOtherScrollerThumb<R = void, P0 = boolean>(_v: P0): R;
    userInterfaceLayoutDirection<R = number>(): R;
    setUserInterfaceLayoutDirection<R = void, P0 = number>(_v: P0): R;
    horizontal<R = boolean>(): R;
    setHorizontal<R = void, P0 = boolean>(_v: P0): R;
    enabled<R = boolean>(): R;
    setEnabled<R = void, P0 = boolean>(_v: P0): R;
    scroller<R = cocoa.NSScroller>(): R;
    setScroller<R = void, P0 = cocoa.NSScroller>(_v: P0): R;
    knobAlpha<R = number>(): R;
    setKnobAlpha<R = void, P0 = number>(_v: P0): R;
    trackAlpha<R = number>(): R;
    setTrackAlpha<R = void, P0 = number>(_v: P0): R;
    expansionTransitionProgress<R = number>(): R;
    setExpansionTransitionProgress<R = void, P0 = number>(_v: P0): R;
    knobProportion<R = number>(): R;
    setKnobProportion<R = void, P0 = number>(_v: P0): R;
    usePresentationValue<R = boolean>(): R;
    setUsePresentationValue<R = void, P0 = boolean>(_v: P0): R;
    presentationValue<R = number>(): R;
    setPresentationValue<R = void, P0 = number>(_v: P0): R;
    doubleValue<R = number>(): R;
    setDoubleValue<R = void, P0 = number>(_v: P0): R;
    boundsSize<R = cocoa.CGSize>(): R;
    setBoundsSize<R = void, P0 = cocoa.CGSize>(_v: P0): R;
    knobLayer<R = cocoa.CALayer>(): R;
    setKnobLayer<R = void, P0 = cocoa.CALayer>(_v: P0): R;
    trackLayer<R = cocoa.CALayer>(): R;
    setTrackLayer<R = void, P0 = cocoa.CALayer>(_v: P0): R;
    layer<R = cocoa.CALayer>(): R;
    setLayer<R = void, P0 = cocoa.CALayer>(_v: P0): R;
  }
  namespace classes {
    export interface NSScrollerImp<T = any> extends cocoa.classes.NSObject {
      alloc<R = NSScrollerImp>(): R;
      new: <R = NSScrollerImp>() => R;
      scrollerWidth<R = number>(): R;
      scrollerWidthForControlSize_scrollerStyle<R = number, P0 = number, P1 = number>(_scrollerWidthForControlSize: P0, _scrollerStyle: P1): R;
      scrollerImpWithStyle_controlSize_horizontal_replacingScrollerImp<R = unknown, P0 = number, P1 = number, P2 = boolean, P3 = unknown>(_scrollerImpWithStyle: P0, _controlSize: P1, _horizontal: P2, _replacingScrollerImp: P3): R;
      scrollerImpClassForStyle_controlSize<R = unknown, P0 = number, P1 = number>(_scrollerImpClassForStyle: P0, _controlSize: P1): R;
    }
  }
}

declare const NSScrollerImp: cocoa.classes.NSScrollerImp;
