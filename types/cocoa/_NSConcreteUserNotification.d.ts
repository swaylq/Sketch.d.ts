/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface _NSConcreteUserNotification<T = any> extends NSUserNotification, NSSecureCodingProtocol {
    peopleIdentifiers<R = unknown>(): R;
    additionalActions<R = unknown>(): R;
    additionalActivationAction<R = unknown>(): R;
    set_alwaysShowAlternateActionMenu<R = void, P0 = boolean>(_set_alwaysShowAlternateActionMenu: P0): R;
    _alwaysShowAlternateActionMenu<R = boolean>(): R;
    set_hasAttachment<R = void, P0 = boolean>(_set_hasAttachment: P0): R;
    _hasAttachment<R = boolean>(): R;
    set_substitutesEmojiInResponse<R = void, P0 = boolean>(_set_substitutesEmojiInResponse: P0): R;
    _substitutesEmojiInResponse<R = boolean>(): R;
    set_lockscreenOnly<R = void, P0 = boolean>(_set_lockscreenOnly: P0): R;
    _lockscreenOnly<R = boolean>(): R;
    set_showsButtons<R = void, P0 = boolean>(_set_showsButtons: P0): R;
    _showsButtons<R = boolean>(): R;
    _alternateActionIndex<R = number>(): R;
    set_alternateActionButtonTitles<R = void, P0 = unknown>(_set_alternateActionButtonTitles: P0): R;
    _alternateActionButtonTitles<R = unknown>(): R;
    setResponsePlaceholder<R = void, P0 = unknown>(_setResponsePlaceholder: P0): R;
    responsePlaceholder<R = unknown>(): R;
    set_identityImageStyle<R = void, P0 = number>(_set_identityImageStyle: P0): R;
    _identityImageStyle<R = number>(): R;
    set_ignoresDoNotDisturb<R = void, P0 = boolean>(_set_ignoresDoNotDisturb: P0): R;
    _ignoresDoNotDisturb<R = boolean>(): R;
    set_poofsOnCancel<R = void, P0 = boolean>(_set_poofsOnCancel: P0): R;
    _poofsOnCancel<R = boolean>(): R;
    set_persistent<R = void, P0 = boolean>(_set_persistent: P0): R;
    _persistent<R = boolean>(): R;
    set_dismissAfterDuration<R = void, P0 = boolean>(_set_dismissAfterDuration: P0): R;
    _dismissAfterDuration<R = boolean>(): R;
    set_actionButtonIsSnooze<R = void, P0 = boolean>(_set_actionButtonIsSnooze: P0): R;
    _actionButtonIsSnooze<R = boolean>(): R;
    set_allDayEvent<R = void, P0 = boolean>(_set_allDayEvent: P0): R;
    _isAllDayEvent<R = boolean>(): R;
    set_deliveryExpiration<R = void, P0 = unknown>(_set_deliveryExpiration: P0): R;
    _deliveryExpiration<R = unknown>(): R;
    set_dateString<R = void, P0 = unknown>(_set_dateString: P0): R;
    _dateString<R = unknown>(): R;
    set_eventDate<R = void, P0 = unknown>(_set_eventDate: P0): R;
    _eventDate<R = unknown>(): R;
    set_badgeCount<R = void, P0 = number>(_set_badgeCount: P0): R;
    _badgeCount<R = number>(): R;
    _snoozedDate<R = number>(): R;
    _snoozeInterval<R = number>(): R;
    _snoozed<R = boolean>(): R;
    set_displayStyle<R = void, P0 = number>(_set_displayStyle: P0): R;
    _displayStyle<R = number>(): R;
    set_style<R = void, P0 = number>(_set_style: P0): R;
    _style<R = number>(): R;
    isRemote<R = boolean>(): R;
    set_clearable<R = void, P0 = boolean>(_set_clearable: P0): R;
    _clearable<R = boolean>(): R;
    set_storageID<R = void, P0 = unknown>(_set_storageID: P0): R;
    _storageID<R = unknown>(): R;
    setDuration<R = void, P0 = unknown>(_setDuration: P0): R;
    duration<R = unknown>(): R;
    activationType<R = number>(): R;
    isPresented<R = boolean>(): R;
    actualDeliveryDate<R = unknown>(): R;
    deliveryRepeatInterval<R = unknown>(): R;
    setDeliveryTimeZone<R = void, P0 = unknown>(_setDeliveryTimeZone: P0): R;
    deliveryTimeZone<R = unknown>(): R;
    setDeliveryDate<R = void, P0 = unknown>(_setDeliveryDate: P0): R;
    deliveryDate<R = unknown>(): R;
    _imageURL<R = unknown>(): R;
    set_proxyIdentifier<R = void, P0 = unknown>(_set_proxyIdentifier: P0): R;
    _proxyIdentifier<R = unknown>(): R;
    setIdentifier<R = void, P0 = unknown>(_setIdentifier: P0): R;
    identifier<R = unknown>(): R;
    setSoundName<R = void, P0 = unknown>(_setSoundName: P0): R;
    soundName<R = unknown>(): R;
    setHasReplyButton<R = void, P0 = boolean>(_setHasReplyButton: P0): R;
    hasReplyButton<R = boolean>(): R;
    setHasActionButton<R = void, P0 = boolean>(_setHasActionButton: P0): R;
    hasActionButton<R = boolean>(): R;
    informativeText<R = unknown>(): R;
    subtitle<R = unknown>(): R;
    title<R = unknown>(): R;
    description<R = unknown>(): R;
    _nextFireDate<R = unknown>(): R;
    hash<R = number>(): R;
    setPeopleIdentifiers<R = void, P0 = unknown>(_setPeopleIdentifiers: P0): R;
    setAdditionalActions<R = void, P0 = unknown>(_setAdditionalActions: P0): R;
    _setAdditionalActivationAction<R = void, P0 = unknown>(__setAdditionalActivationAction: P0): R;
    _setAlternateActionIndex<R = void, P0 = number>(__setAlternateActionIndex: P0): R;
    set_contentImageData<R = void, P0 = unknown>(_set_contentImageData: P0): R;
    _contentImageData<R = unknown>(): R;
    _hasContentImage<R = boolean>(): R;
    contentImage<R = unknown>(): R;
    setContentImage<R = void, P0 = unknown>(_setContentImage: P0): R;
    _identityImageHasBorder<R = boolean>(): R;
    set_identityImageHasBorder<R = void, P0 = boolean>(_set_identityImageHasBorder: P0): R;
    setRemote<R = void, P0 = boolean>(_setRemote: P0): R;
    setDeliveryRepeatInterval<R = void, P0 = unknown>(_setDeliveryRepeatInterval: P0): R;
    _setResponse<R = void, P0 = unknown>(__setResponse: P0): R;
    response<R = unknown>(): R;
    set_identityImageData<R = void, P0 = unknown>(_set_identityImageData: P0): R;
    _identityImageData<R = unknown>(): R;
    _identityImage<R = unknown>(): R;
    set_identityImage<R = void, P0 = unknown>(_set_identityImage: P0): R;
    _setEncodedUserInfo<R = void, P0 = unknown>(__setEncodedUserInfo: P0): R;
    setUserInfo<R = void, P0 = unknown>(_setUserInfo: P0): R;
    userInfo<R = unknown>(): R;
    set_imageURL<R = void, P0 = unknown>(_set_imageURL: P0): R;
    setOtherButtonTitle<R = void, P0 = unknown>(_setOtherButtonTitle: P0): R;
    otherButtonTitle<R = unknown>(): R;
    setActionButtonTitle<R = void, P0 = unknown>(_setActionButtonTitle: P0): R;
    actionButtonTitle<R = unknown>(): R;
    setInformativeText<R = void, P0 = unknown>(_setInformativeText: P0): R;
    setSubtitle<R = void, P0 = unknown>(_setSubtitle: P0): R;
    setTitle<R = void, P0 = unknown>(_setTitle: P0): R;
    set_subtitle<R = void, P0 = unknown>(_set_subtitle: P0): R;
    _isRemote<R = boolean>(): R;
    _subtitle<R = unknown>(): R;
    dealloc<R = void>(): R;
  }
  namespace classes {
    export interface _NSConcreteUserNotification<T = any> extends NSUserNotification, NSSecureCodingProtocol {
      alloc<R = _NSConcreteUserNotification>(): R;
      new: <R = _NSConcreteUserNotification>() => R;
    }
  }
}
