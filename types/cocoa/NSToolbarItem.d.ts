/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSToolbarItem<T = any> extends NSObject, NSCopyingProtocol, NSMenuItemValidationProtocol, NSValidatedUserInterfaceItemProtocol {
    cxx_destruct<R = void>(): R;
    extensionService<R = unknown>(): R;
    isSpace<R = boolean>(): R;
    isMeasuring<R = boolean>(): R;
    _itemViewMinSize_maxSize_stretchesContent<R = void, P0 = CGSize, P1 = CGSize, P2 = boolean>(__itemViewMinSize: P0, _maxSize: P1, _stretchesContent: P2): R;
    _textOrSearchFieldAdjustedMinOrMaxSize_withSize<R = CGSize, P0 = boolean, P1 = CGSize>(__textOrSearchFieldAdjustedMinOrMaxSize: P0, _withSize: P1): R;
    _scalableMaxSize<R = CGSize>(): R;
    _scalableMinSize<R = CGSize>(): R;
    _shouldApplyTextFieldAdjustment<R = boolean>(): R;
    _shouldApplySearchFieldAdjustment<R = boolean>(): R;
    setPreferredWidthRatio<R = void, P0 = number>(_setPreferredWidthRatio: P0): R;
    preferredWidthRatio<R = number>(): R;
    _setIgnoresMinMaxSizes<R = void, P0 = boolean>(__setIgnoresMinMaxSizes: P0): R;
    _ignoresMinMaxSizes<R = boolean>(): R;
    _canUserSetVisibilityPriority<R = boolean>(): R;
    _resizeWeight<R = number>(): R;
    _resizeWeightSharedWithDuplicateItems<R = boolean>(): R;
    _forceSetView<R = void, P0 = unknown>(__forceSetView: P0): R;
    _autocalculatesSize<R = boolean>(): R;
    _setSizesToFittingSizeIfBaseLocalized<R = void>(): R;
    _isCustomItemType<R = boolean>(): R;
    _interlabelPadding<R = number>(): R;
    _interviewPadding<R = number>(): R;
    _itemAtViewIndex<R = unknown, P0 = number>(__itemAtViewIndex: P0): R;
    _itemAtLabelIndex<R = unknown, P0 = number>(__itemAtLabelIndex: P0): R;
    _viewIsEnabledAtIndex<R = boolean, P0 = number>(__viewIsEnabledAtIndex: P0): R;
    _applicableLabelIsEnabledAtIndex_forDisplayMode_isInPalette<R = boolean, P0 = number, P1 = number, P2 = boolean>(__applicableLabelIsEnabledAtIndex: P0, _forDisplayMode: P1, _isInPalette: P2): R;
    _isEnabledAndHasEnabledSubitem<R = boolean>(): R;
    _reallySetEnabled<R = void, P0 = boolean>(__reallySetEnabled: P0): R;
    _standardCustomMenuFormRepresentationClicked<R = void, P0 = unknown>(__standardCustomMenuFormRepresentationClicked: P0): R;
    _startingWindowForSendAction<R = unknown, P0 = string>(__startingWindowForSendAction: P0): R;
    _toolbarItemPartitionAdapterDidChangeExcludedRect<R = void, P0 = unknown>(__toolbarItemPartitionAdapterDidChangeExcludedRect: P0): R;
    _getPartitionRect_inWindowCoordinatesForWindow<R = boolean, P0 = CGRect, P1 = unknown>(__getPartitionRect: P0, _inWindowCoordinatesForWindow: P1): R;
    _isPartitionItem<R = boolean>(): R;
    _setPartitionAdapter<R = void, P0 = unknown>(__setPartitionAdapter: P0): R;
    _partitionAdapter<R = unknown>(): R;
    setWantsToBeCentered<R = void, P0 = boolean>(_setWantsToBeCentered: P0): R;
    wantsToBeCentered<R = boolean>(): R;
    _mouseDownInSurroundingRegionShouldMoveWindow<R = boolean>(): R;
    _performMenuFormRepresentationClick<R = void>(): R;
    _standardCommonMenuFormRepresentationClicked<R = void, P0 = unknown>(__standardCommonMenuFormRepresentationClicked: P0): R;
    _performSwitchToIconMode<R = void>(): R;
    _menuFormRepresentationForOverflowMenu<R = unknown>(): R;
    _computeDefaultMenuFormRepresentation<R = unknown>(): R;
    _menuRepresentationIsDefault<R = boolean>(): R;
    _menuRepresentationHasBeenSet<R = boolean>(): R;
    _imageForMenu<R = unknown>(): R;
    _itemLayoutChanged<R = void>(): R;
    _noteDefaultMenuAttributeChanged<R = void>(): R;
    _clearDefaultMenuFormRepresentation<R = void>(): R;
    setPropertyListRepresentation<R = void, P0 = unknown>(_setPropertyListRepresentation: P0): R;
    propertyListRepresentation<R = unknown>(): R;
    _collectItemRectsForViews_count_inBounds_controlBounds<R = void, P0 = CGRect, P1 = number, P2 = CGRect, P3 = CGRect>(__collectItemRectsForViews: P0, _count: P1, _inBounds: P2, _controlBounds: P3): R;
    _collectItemRectsForViews_count_inBounds<R = void, P0 = CGRect, P1 = number, P2 = CGRect>(__collectItemRectsForViews: P0, _count: P1, _inBounds: P2): R;
    _collectItemRectsForLabels_count_inBounds_controlBounds<R = void, P0 = CGRect, P1 = number, P2 = CGRect, P3 = CGRect>(__collectItemRectsForLabels: P0, _count: P1, _inBounds: P2, _controlBounds: P3): R;
    _collectItemRectsForLabels_count_inBounds<R = void, P0 = CGRect, P1 = number, P2 = CGRect>(__collectItemRectsForLabels: P0, _count: P1, _inBounds: P2): R;
    _viewsArray<R = unknown>(): R;
    _applicableLabelsArrayForDisplayMode_isInPalette<R = unknown, P0 = number, P1 = boolean>(__applicableLabelsArrayForDisplayMode: P0, _isInPalette: P1): R;
    _paletteLabel<R = unknown>(): R;
    _label<R = unknown>(): R;
    _needsRedisplayWhenBeginningToolbarEditing<R = boolean>(): R;
    _emptyContents<R = boolean>(): R;
    _allPossibleLabelsToFit<R = unknown>(): R;
    _setAllPossibleLabelsToFit<R = void, P0 = unknown>(__setAllPossibleLabelsToFit: P0): R;
    itemType<R = number>(): R;
    _restoreToolbarItemAfterConfigPanel<R = void>(): R;
    _prepareToolbarItemForConfigPanel<R = void>(): R;
    _restoreToolbarItemAfterSheet<R = void>(): R;
    _prepareToolbarItemForSheet<R = void>(): R;
    _validateInPresenceOfSheet<R = void>(): R;
    validate<R = void>(): R;
    _validateAsCustomItem<R = void, P0 = unknown>(__validateAsCustomItem: P0): R;
    _validateMenuFormRepresentation<R = void, P0 = unknown>(__validateMenuFormRepresentation: P0): R;
    _itemMenuInPaletteForEvent<R = unknown, P0 = unknown>(__itemMenuInPaletteForEvent: P0): R;
    _wantsCopyForInsertionIntoToolbar_isPalette<R = boolean, P0 = unknown, P1 = boolean>(__wantsCopyForInsertionIntoToolbar: P0, _isPalette: P1): R;
    _shouldValidateMenuFormRepresentation<R = boolean>(): R;
    _validateAsCommonItem<R = void, P0 = unknown>(__validateAsCommonItem: P0): R;
    encodeWithCoder<R = void, P0 = unknown>(_encodeWithCoder: P0): R;
    initWithCoder<R = unknown, P0 = unknown>(_initWithCoder: P0): R;
    dealloc<R = void>(): R;
    _copyOfCustomView<R = unknown>(): R;
    _setItemIdentifier<R = void, P0 = unknown>(__setItemIdentifier: P0): R;
    initWithItemIdentifier<R = unknown, P0 = unknown>(_initWithItemIdentifier: P0): R;
    initWithType_itemIdentifier<R = unknown, P0 = number, P1 = unknown>(_initWithType: P0, _itemIdentifier: P1): R;
    _toolbarItemCommonInit<R = void>(): R;
    _loadViewIfNecessary<R = void>(): R;
    _allocDefaultView<R = unknown>(): R;
    _buttonFrameSizeForSizeMode<R = CGSize, P0 = number>(__buttonFrameSizeForSizeMode: P0): R;
    _participatesInDefiningMinimumGridWidthForCustomizationPalette<R = boolean>(): R;
    _initialViewToSelectFromDirection<R = unknown, P0 = number>(__initialViewToSelectFromDirection: P0): R;
    _buttonAtIndex<R = unknown, P0 = number>(__buttonAtIndex: P0): R;
    _button<R = unknown>(): R;
    _setItemViewer<R = void, P0 = unknown>(__setItemViewer: P0): R;
    _itemViewer<R = unknown>(): R;
    _labelAlignment<R = number>(): R;
    _allowToolbarToStealEvent<R = boolean, P0 = unknown>(__allowToolbarToStealEvent: P0): R;
    wantsToDrawLabelInPalette<R = boolean>(): R;
    wantsToDrawIconIntoLabelAreaInDisplayMode<R = boolean, P0 = number>(_wantsToDrawIconIntoLabelAreaInDisplayMode: P0): R;
    wantsToDrawLabelInDisplayMode<R = boolean, P0 = number>(_wantsToDrawLabelInDisplayMode: P0): R;
    wantsToDrawIconInDisplayMode<R = boolean, P0 = number>(_wantsToDrawIconInDisplayMode: P0): R;
    usesMenuFormRepresentationInDisplayMode<R = boolean, P0 = number>(_usesMenuFormRepresentationInDisplayMode: P0): R;
    configureForDisplayMode_andSizeMode<R = void, P0 = number, P1 = number>(_configureForDisplayMode: P0, _andSizeMode: P1): R;
    _handleSendControlSize_toCellOfView<R = boolean, P0 = number, P1 = unknown>(__handleSendControlSize: P0, _toCellOfView: P1): R;
    _handleSendControlSize_toView<R = boolean, P0 = number, P1 = unknown>(__handleSendControlSize: P0, _toView: P1): R;
    _toolbar<R = unknown>(): R;
    _setToolbar<R = void, P0 = unknown>(__setToolbar: P0): R;
    _isUserRemovable<R = boolean>(): R;
    _setIsUserRemovable<R = void, P0 = boolean>(__setIsUserRemovable: P0): R;
    _viewForPopoverAnchor<R = unknown>(): R;
    _menuFormRepresentation<R = unknown>(): R;
    _view<R = unknown>(): R;
    _itemType<R = number>(): R;
    isSeparatorItem<R = boolean>(): R;
    _isDrawingForDragImage<R = boolean>(): R;
    _endDrawForDragging<R = void>(): R;
    _beginDrawForDragging<R = void>(): R;
    _setSizeHasBeenSet<R = void, P0 = boolean>(__setSizeHasBeenSet: P0): R;
    _sizeHasBeenSet<R = boolean>(): R;
    allowsDuplicatesInToolbar<R = boolean>(): R;
    image<R = NSImage>(): R;
    setImage<R = void, P0 = NSImage>(_v: P0): R;
    maxSize<R = CGSize>(): R;
    setMaxSize<R = void, P0 = CGSize>(_v: P0): R;
    minSize<R = CGSize>(): R;
    setMinSize<R = void, P0 = CGSize>(_v: P0): R;
    visibilityPriority<R = number>(): R;
    setVisibilityPriority<R = void, P0 = number>(_v: P0): R;
    view<R = NSView>(): R;
    setView<R = void, P0 = NSView>(_v: P0): R;
    tag<R = number>(): R;
    setTag<R = void, P0 = number>(_v: P0): R;
    enabled<R = boolean>(): R;
    setEnabled<R = void, P0 = boolean>(_v: P0): R;
    action<R = string>(): R;
    setAction<R = void, P0 = string>(_v: P0): R;
    target<R = unknown>(): R;
    setTarget<R = void, P0 = unknown>(_v: P0): R;
    menuFormRepresentation<R = NSMenuItem>(): R;
    setMenuFormRepresentation<R = void, P0 = NSMenuItem>(_v: P0): R;
    toolTip<R = NSString>(): R;
    setToolTip<R = void, P0 = NSString>(_v: P0): R;
    paletteLabel<R = NSString>(): R;
    setPaletteLabel<R = void, P0 = NSString>(_v: P0): R;
    label<R = NSString>(): R;
    setLabel<R = void, P0 = NSString>(_v: P0): R;
    toolbar<R = NSToolbar>(): R;
    itemIdentifier<R = NSString>(): R;
    autovalidates<R = boolean>(): R;
    setAutovalidates<R = void, P0 = boolean>(_v: P0): R;
    description<R = NSString>(): R;
    debugDescription<R = NSString>(): R;
    hash<R = number>(): R;
    superclass<R = unknown>(): R;
  }
  namespace classes {
    export interface NSToolbarItem<T = any> extends NSObject, NSCopyingProtocol, NSMenuItemValidationProtocol, NSValidatedUserInterfaceItemProtocol {
      alloc<R = NSToolbarItem>(): R;
      new: <R = NSToolbarItem>() => R;
      allowsDuplicatesInToolbar<R = boolean>(): R;
      _imageForDrawingInRectOfSize_fromImage<R = unknown, P0 = CGSize, P1 = unknown>(__imageForDrawingInRectOfSize: P0, _fromImage: P1): R;
      standardItemWithItemIdentifier<R = unknown, P0 = unknown>(_standardItemWithItemIdentifier: P0): R;
      newStandardItemWithItemIdentifier<R = unknown, P0 = unknown>(_newStandardItemWithItemIdentifier: P0): R;
      _newCloudSharingItem<R = unknown>(): R;
      _newToggleSidebarItem<R = unknown>(): R;
      _newPrintItem<R = unknown>(): R;
      _newCustomizeToolbarItem<R = unknown>(): R;
      _newShowFontsItem<R = unknown>(): R;
      _newShowColorsItem<R = unknown>(): R;
      spaceItemIdentifier<R = unknown>(): R;
      separatorItemIdentifier<R = unknown>(): R;
      newSeparatorItem<R = unknown>(): R;
    }
  }
}

declare const NSToolbarItem: cocoa.classes.NSToolbarItem;
