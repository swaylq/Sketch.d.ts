/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSTableView<T = any> extends cocoa.NSControl, cocoa.NSUserInterfaceValidationsProtocol, cocoa.NSTextViewDelegateProtocol, cocoa.NSDraggingSourceProtocol, cocoa.NSAccessibilityTableProtocol {
    cxx_destruct<R = void>(): R;
    _automaticVerticalScrollElasticityForScrollView<R = number, P0 = unknown>(__automaticVerticalScrollElasticityForScrollView: P0): R;
    _defaultRowSizeStyleChanged<R = void, P0 = unknown>(__defaultRowSizeStyleChanged: P0): R;
    _updateForSizeModeChange<R = void>(): R;
    _sizeModeChangeForRowView_row<R = void, P0 = unknown, P1 = number>(__sizeModeChangeForRowView: P0, _row: P1): R;
    _effectiveRowHeight<R = number>(): R;
    setGroupRowStyle<R = void, P0 = number>(_setGroupRowStyle: P0): R;
    groupRowStyle<R = number>(): R;
    setFloatsHeaderView<R = void, P0 = boolean>(_setFloatsHeaderView: P0): R;
    floatsHeaderView<R = boolean>(): R;
    enumerateAvailableRowViewsUsingBlock<R = void, P0 = cocoa.CDUnknownBlockType>(_enumerateAvailableRowViewsUsingBlock: P0): R;
    columnForView<R = number, P0 = unknown>(_columnForView: P0): R;
    rowForView<R = number, P0 = unknown>(_rowForView: P0): R;
    makeViewWithIdentifier_owner<R = unknown, P0 = unknown, P1 = unknown>(_makeViewWithIdentifier: P0, _owner: P1): R;
    rowViewAtRow_makeIfNecessary<R = unknown, P0 = number, P1 = boolean>(_rowViewAtRow: P0, _makeIfNecessary: P1): R;
    viewAtColumn_row_makeIfNecessary<R = unknown, P0 = number, P1 = number, P2 = boolean>(_viewAtColumn: P0, _row: P1, _makeIfNecessary: P2): R;
    didRemoveRowView_forRow<R = void, P0 = unknown, P1 = number>(_didRemoveRowView: P0, _forRow: P1): R;
    didAddRowView_forRow<R = void, P0 = unknown, P1 = number>(_didAddRowView: P0, _forRow: P1): R;
    _delegateDidRemoveRowView_forRow<R = void, P0 = unknown, P1 = number>(__delegateDidRemoveRowView: P0, _forRow: P1): R;
    _delegateRespondsTo_didRemoveRowView<R = boolean>(): R;
    _delegateDidAddRowView_forRow<R = void, P0 = unknown, P1 = number>(__delegateDidAddRowView: P0, _forRow: P1): R;
    _delegateRespondsTo_didAddRowView<R = boolean>(): R;
    endUpdates<R = void>(): R;
    beginUpdates<R = void>(): R;
    registerNib_forIdentifier<R = void, P0 = unknown, P1 = unknown>(_registerNib: P0, _forIdentifier: P1): R;
    moveRowAtIndex_toIndex<R = void, P0 = number, P1 = number>(_moveRowAtIndex: P0, _toIndex: P1): R;
    removeRowsAtIndexes_withAnimation<R = void, P0 = unknown, P1 = number>(_removeRowsAtIndexes: P0, _withAnimation: P1): R;
    unhideRowsAtIndexes_withAnimation<R = void, P0 = unknown, P1 = number>(_unhideRowsAtIndexes: P0, _withAnimation: P1): R;
    hideRowsAtIndexes_withAnimation<R = void, P0 = unknown, P1 = number>(_hideRowsAtIndexes: P0, _withAnimation: P1): R;
    insertRowsAtIndexes_withAnimation<R = void, P0 = unknown, P1 = number>(_insertRowsAtIndexes: P0, _withAnimation: P1): R;
    _cleanupDropFeedbackIfNeeded<R = void>(): R;
    _doUpdatedWorkWithHandler<R = void, P0 = cocoa.CDUnknownBlockType>(__doUpdatedWorkWithHandler: P0): R;
    _addTrackingAreasForRow_column<R = void, P0 = number, P1 = number>(__addTrackingAreasForRow: P0, _column: P1): R;
    _delegateWantsTrackingAreasForRow_column<R = boolean, P0 = number, P1 = number>(__delegateWantsTrackingAreasForRow: P0, _column: P1): R;
    _delegateRespondsTo_wantsTrackingAreasForRowColumn<R = boolean>(): R;
    _dropTrackingAreaData<R = boolean>(): R;
    _supportsTrackingAreasForCells<R = boolean>(): R;
    _updateHeaderViewTrackingArea<R = void>(): R;
    _floatingGroupRowView<R = unknown>(): R;
    _floatingHeaderViewFrame<R = cocoa.CGRect>(): R;
    _hideFloatingHeaderView<R = void>(): R;
    _removeFloatingHeaderView<R = void>(): R;
    _showFloatingHeaderView<R = void>(): R;
    _eventIsForFloatingHeaderView<R = boolean, P0 = unknown>(__eventIsForFloatingHeaderView: P0): R;
    _shouldFloatTableHeaderView<R = boolean>(): R;
    _updateFloatingHeaderViewOption<R = void>(): R;
    _wantsHeaderView<R = boolean>(): R;
    setWantsFirstResponderOnMouseEvents<R = void, P0 = boolean>(_setWantsFirstResponderOnMouseEvents: P0): R;
    wantsFirstResponderOnMouseEvents<R = boolean>(): R;
    _menuDidEndTracking<R = void, P0 = unknown>(__menuDidEndTracking: P0): R;
    _commonCleanupAfterMenuClosed<R = void>(): R;
    _resetClickedRowAndColumn<R = void>(): R;
    _setupContextMenuHighlightingForRow_column<R = void, P0 = number, P1 = number>(__setupContextMenuHighlightingForRow: P0, _column: P1): R;
    setEnabled<R = void, P0 = boolean>(_setEnabled: P0): R;
    setToolTip<R = void, P0 = unknown>(_setToolTip: P0): R;
    _visibleRectPastLastRow<R = cocoa.CGRect>(): R;
    _animatingCompleted<R = void>(): R;
    _adjustFrameSizeToFitSuperview<R = cocoa.CGSize, P0 = cocoa.CGSize>(__adjustFrameSizeToFitSuperview: P0): R;
    namesOfPromisedFilesDroppedAtDestination<R = unknown, P0 = unknown>(_namesOfPromisedFilesDroppedAtDestination: P0): R;
    _dataSourceNamesOfPromisedFilesAtDestination<R = unknown, P0 = unknown>(__dataSourceNamesOfPromisedFilesAtDestination: P0): R;
    _dataSourceRespondsToNamesOfPromisedFilesDroppedAtDestination<R = boolean>(): R;
    _cleanupDropFeedback<R = void>(): R;
    setDropRow_dropOperation<R = void, P0 = number, P1 = number>(_setDropRow: P0, _dropOperation: P1): R;
    ignoreModifierKeysWhileDragging<R = boolean>(): R;
    _delegateUpdateDraggingItemsForDrag<R = void, P0 = unknown>(__delegateUpdateDraggingItemsForDrag: P0): R;
    draggedImage_movedTo<R = void, P0 = unknown, P1 = cocoa.CGPoint>(_draggedImage: P0, _movedTo: P1): R;
    draggedImage_endedAt_operation<R = void, P0 = unknown, P1 = cocoa.CGPoint, P2 = number>(_draggedImage: P0, _endedAt: P1, _operation: P2): R;
    draggedImage_beganAt<R = void, P0 = unknown, P1 = cocoa.CGPoint>(_draggedImage: P0, _beganAt: P1): R;
    draggingSourceOperationMaskForLocal<R = number, P0 = boolean>(_draggingSourceOperationMaskForLocal: P0): R;
    setDraggingSourceOperationMask_forLocal<R = void, P0 = number, P1 = boolean>(_setDraggingSourceOperationMask: P0, _forLocal: P1): R;
    draggingSession_namesOfPromisedFilesDroppedAtDestination<R = unknown, P0 = unknown, P1 = unknown>(_draggingSession: P0, _namesOfPromisedFilesDroppedAtDestination: P1): R;
    _performDragFromMouseDown<R = boolean, P0 = unknown>(__performDragFromMouseDown: P0): R;
    _performClassicDragOfIndexes_hitRow_event<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(__performClassicDragOfIndexes: P0, _hitRow: P1, _event: P2): R;
    _performFlockedDragOfIndexes_hitRow_event<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(__performFlockedDragOfIndexes: P0, _hitRow: P1, _event: P2): R;
    _sendDraggingSession_endedAtPoint_operation<R = void, P0 = unknown, P1 = cocoa.CGPoint, P2 = number>(__sendDraggingSession: P0, _endedAtPoint: P1, _operation: P2): R;
    _sendWillBeginDraggingSession_willBeginAtPoint_forDraggedRowIndexes<R = void, P0 = unknown, P1 = cocoa.CGPoint, P2 = unknown>(__sendWillBeginDraggingSession: P0, _willBeginAtPoint: P1, _forDraggedRowIndexes: P2): R;
    _initializeDragItem_atRow_event<R = void, P0 = unknown, P1 = number, P2 = unknown>(__initializeDragItem: P0, _atRow: P1, _event: P2): R;
    draggingImageComponentsWithFrame_forDisplayObject<R = unknown, P0 = cocoa.CGRect, P1 = unknown>(_draggingImageComponentsWithFrame: P0, _forDisplayObject: P1): R;
    _viewBasedImageComponentsWithFrame_forDisplayObject<R = unknown, P0 = cocoa.CGRect, P1 = unknown>(__viewBasedImageComponentsWithFrame: P0, _forDisplayObject: P1): R;
    _cellBasedImageComponentsWithFrame_forDisplayObject<R = unknown, P0 = cocoa.CGRect, P1 = unknown>(__cellBasedImageComponentsWithFrame: P0, _forDisplayObject: P1): R;
    _preferredDragColumnForEvent<R = number, P0 = unknown>(__preferredDragColumnForEvent: P0): R;
    _pasteboardWriterForRow<R = unknown, P0 = number>(__pasteboardWriterForRow: P0): R;
    _dataSourceRespondsToDragWriteMethods<R = boolean>(): R;
    _dataSourceRespondsToPasteboardWriterForRow<R = boolean>(): R;
    _releaseDragInfoIfNotLocal<R = void>(): R;
    _releaseDragInfo<R = void>(): R;
    _ensureDragInfo<R = void>(): R;
    _draggingSource<R = unknown>(): R;
    _shouldSlideBackAfterDragFailed<R = boolean>(): R;
    _dataSourceRespondsToWriteDragData<R = boolean>(): R;
    __doImageDragUsingRowsWithIndexes_event_pasteboard_source_slideBack_startRow<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = boolean, P5 = number>(___doImageDragUsingRowsWithIndexes: P0, _event: P1, _pasteboard: P2, _source: P3, _slideBack: P4, _startRow: P5): R;
    _sendDataSourceWriteDragDataWithIndexes_toPasteboard<R = boolean, P0 = unknown, P1 = unknown>(__sendDataSourceWriteDragDataWithIndexes: P0, _toPasteboard: P1): R;
    _doImageDragUsingRows_event_pasteboard_source_slideBack<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = boolean>(__doImageDragUsingRows: P0, _event: P1, _pasteboard: P2, _source: P3, _slideBack: P4): R;
    _doImageDragUsingRowsWithIndexes_event_pasteboard_source_slideBack_startRow<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = boolean, P5 = number>(__doImageDragUsingRowsWithIndexes: P0, _event: P1, _pasteboard: P2, _source: P3, _slideBack: P4, _startRow: P5): R;
    _beginGapFeedbackDragIfNeededForRows_startRow<R = void, P0 = unknown, P1 = number>(__beginGapFeedbackDragIfNeededForRows: P0, _startRow: P1): R;
    _reallySwitchToNonViewBasedIfNeeded<R = boolean>(): R;
    _switchToNonViewBasedIfNeeded<R = void>(): R;
    _shouldSwitchToNonViewBased<R = boolean>(): R;
    _switchToViewBasedIfNeeded<R = void>(): R;
    _alwaysSwitchToViewBasedIfNeeded<R = void>(): R;
    _canSwitchToViewBasedForAnimations<R = boolean>(): R;
    _hasCurrentlyActiveViews<R = boolean>(): R;
    dragImageForRows_event_dragImageOffset<R = unknown, P0 = unknown, P1 = unknown, P2 = cocoa.CGPoint>(_dragImageForRows: P0, _event: P1, _dragImageOffset: P2): R;
    dragImageForRowsWithIndexes_tableColumns_event_offset<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = cocoa.CGPoint>(_dragImageForRowsWithIndexes: P0, _tableColumns: P1, _event: P2, _offset: P3): R;
    _dragImageForRowsWithIndexes_tableColumns_event_offset<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = cocoa.CGPoint>(__dragImageForRowsWithIndexes: P0, _tableColumns: P1, _event: P2, _offset: P3): R;
    _drawView_withCellFrameUnion_inContext<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(__drawView: P0, _withCellFrameUnion: P1, _inContext: P2): R;
    _drawDragImageCellAtColumn_row_withCellFrameUnion<R = void, P0 = number, P1 = number, P2 = cocoa.CGRect>(__drawDragImageCellAtColumn: P0, _row: P1, _withCellFrameUnion: P2): R;
    _drawDragCell_inFrame<R = void, P0 = unknown, P1 = cocoa.CGRect>(__drawDragCell: P0, _inFrame: P1): R;
    _columnsForDragImage<R = unknown>(): R;
    _isPoint_inDragZoneOfRow<R = boolean, P0 = cocoa.CGPoint, P1 = number>(__isPoint: P0, _inDragZoneOfRow: P1): R;
    _candidateDragRowIndexForClickInRow<R = unknown, P0 = number>(__candidateDragRowIndexForClickInRow: P0): R;
    _dragShouldBeginFromMouseDown<R = boolean, P0 = unknown>(__dragShouldBeginFromMouseDown: P0): R;
    _editOnDeepClick<R = boolean>(): R;
    drawContextMenuHighlightForRow<R = void, P0 = number>(_drawContextMenuHighlightForRow: P0): R;
    _drawRegularContextMenuHighlightForRow<R = void, P0 = number>(__drawRegularContextMenuHighlightForRow: P0): R;
    _drawSourceListContextMenuHighlightForRow<R = void, P0 = number>(__drawSourceListContextMenuHighlightForRow: P0): R;
    _highlightTypeForRow<R = number, P0 = number>(__highlightTypeForRow: P0): R;
    _drawDropHighlightOffScreenIndicatorPointingUp_atOffset<R = void, P0 = boolean, P1 = number>(__drawDropHighlightOffScreenIndicatorPointingUp: P0, _atOffset: P1): R;
    _drawDropHighlightOffScreenIndicatorPointingLeftAtOffset<R = void, P0 = number>(__drawDropHighlightOffScreenIndicatorPointingLeftAtOffset: P0): R;
    _drawDropHighlightBetweenUpperRow_andLowerRow_onRow_atOffset<R = void, P0 = number, P1 = number, P2 = number, P3 = number>(__drawDropHighlightBetweenUpperRow: P0, _andLowerRow: P1, _onRow: P2, _atOffset: P3): R;
    _dropDestinationIndicatorFrameForDraggingDestinationStyle_rowIndexes<R = cocoa.CGRect, P0 = number, P1 = unknown>(__dropDestinationIndicatorFrameForDraggingDestinationStyle: P0, _rowIndexes: P1): R;
    _drawDropHighlightBetweenUpperRow_andLowerRow_atOffset<R = void, P0 = number, P1 = number, P2 = number>(__drawDropHighlightBetweenUpperRow: P0, _andLowerRow: P1, _atOffset: P2): R;
    _drawDropHighlightOnRow<R = void, P0 = number>(__drawDropHighlightOnRow: P0): R;
    _drawDropHighlightOnEntireTableView<R = void>(): R;
    _drawDropHighlightBackgroundForRow<R = void, P0 = number>(__drawDropHighlightBackgroundForRow: P0): R;
    _shouldDrawSourceListDraggingDestinationStyle<R = boolean>(): R;
    _dropHighlightBackgroundRectForRow<R = cocoa.CGRect, P0 = number>(__dropHighlightBackgroundRectForRow: P0): R;
    _drawDropHighlightOutlineForRow<R = void, P0 = number>(__drawDropHighlightOutlineForRow: P0): R;
    interiorBackgroundStyle<R = number>(): R;
    _dropHighlightOutlineRectForRow<R = cocoa.CGRect, P0 = number>(__dropHighlightOutlineRectForRow: P0): R;
    _setContextMenuHighlightColorForRow<R = void, P0 = number>(__setContextMenuHighlightColorForRow: P0): R;
    _dropHighlightBackgroundColor<R = unknown>(): R;
    _dropHighlightColor<R = unknown>(): R;
    _dropHighlightColorForRow<R = unknown, P0 = number>(__dropHighlightColorForRow: P0): R;
    _backgroundStyleForDropHighlightOnRow<R = number, P0 = number>(__backgroundStyleForDropHighlightOnRow: P0): R;
    _dropHighlightColorForEntireTableView<R = unknown>(): R;
    _drawDropHighlight<R = void>(): R;
    _setNeedsDisplayForDropCandidateRow_operation_mask<R = void, P0 = number, P1 = number, P2 = number>(__setNeedsDisplayForDropCandidateRow: P0, _operation: P1, _mask: P2): R;
    _determineDropCandidateForDragInfo<R = void, P0 = unknown>(__determineDropCandidateForDragInfo: P0): R;
    _tryDrop_dropRow_dropOperation<R = void, P0 = unknown, P1 = number, P2 = number>(__tryDrop: P0, _dropRow: P1, _dropOperation: P2): R;
    _updateDropFeedbackFromPriorRow_operation_mask<R = void, P0 = number, P1 = number, P2 = number>(__updateDropFeedbackFromPriorRow: P0, _operation: P1, _mask: P2): R;
    _dragOperation<R = number>(): R;
    _tableViewDropOperation<R = number>(): R;
    __setDropCandidateRow<R = void, P0 = number>(___setDropCandidateRow: P0): R;
    __dropCandidateRow<R = number>(): R;
    _shouldShowDropGapForDragInfo<R = boolean, P0 = unknown>(__shouldShowDropGapForDragInfo: P0): R;
    _canShowDropGap<R = boolean>(): R;
    _dataSourceRespondsToValidateDrop<R = boolean>(): R;
    _hoverAreaIsSameAsLast<R = boolean, P0 = unknown>(__hoverAreaIsSameAsLast: P0): R;
    _deselectsWhenMouseLeavesDuringDrag<R = boolean>(): R;
    _setDeselectsWhenMouseLeavesDuringDrag<R = void, P0 = boolean>(__setDeselectsWhenMouseLeavesDuringDrag: P0): R;
    _invalidateHeaderForTableColumn<R = void, P0 = unknown>(__invalidateHeaderForTableColumn: P0): R;
    _sendDelegateDidDragColumn<R = void, P0 = number>(__sendDelegateDidDragColumn: P0): R;
    _sendDelegateDidClickColumn<R = void, P0 = number>(__sendDelegateDidClickColumn: P0): R;
    _sendDelegateDidMouseDownInHeader<R = void, P0 = number>(__sendDelegateDidMouseDownInHeader: P0): R;
    indicatorImageInTableColumn<R = unknown, P0 = unknown>(_indicatorImageInTableColumn: P0): R;
    setIndicatorImage_inTableColumn<R = void, P0 = unknown, P1 = unknown>(_setIndicatorImage: P0, _inTableColumn: P1): R;
    _changeSortDescriptorsForClickOnColumn<R = void, P0 = number>(__changeSortDescriptorsForClickOnColumn: P0): R;
    _fixupSortDescriptorPlaceholdersIfNecessary<R = void>(): R;
    _removeSortDescriptorForTableColumn<R = void, P0 = unknown>(__removeSortDescriptorForTableColumn: P0): R;
    _sendDataSourceSortDescriptorsDidChange<R = void, P0 = unknown>(__sendDataSourceSortDescriptorsDidChange: P0): R;
    _dataSourceRespondsToSortDescriptorsDidChange<R = boolean>(): R;
    _setNeedsDisplayInPrimarySortColumnsIfNecessary<R = void>(): R;
    _setNeedsDisplayInPrimarySortColumns<R = void>(): R;
    _writePersistentTableColumns<R = void>(): R;
    _legacyWritePersistentData<R = void>(): R;
    _secureWritePersistentData<R = void>(): R;
    _secureWritePersistentSortDescriptors<R = void>(): R;
    _secureWritePersistentTableColumns<R = void>(): R;
    _removeLegacyPersistentTableColumnData<R = void>(): R;
    _readPersistentTableColumns<R = void>(): R;
    _secureReadPersistentData<R = void>(): R;
    _secureReadSortDescriptorData<R = void>(): R;
    _secureReadTableColumnPersistentData<R = void>(): R;
    _legacyReadPersistentData<R = void>(): R;
    _makeSortDescriptorWhileReadingForColumn_ascending<R = unknown, P0 = unknown, P1 = boolean>(__makeSortDescriptorWhileReadingForColumn: P0, _ascending: P1): R;
    _setSortDescriptorsWhileReading<R = void, P0 = unknown>(__setSortDescriptorsWhileReading: P0): R;
    _shouldUseSecureCoding<R = boolean>(): R;
    _removeOldAutosaveDefaults<R = void>(): R;
    _sortOrderAutoSaveNameWithPrefixV2<R = unknown>(): R;
    _sortOrderAutoSaveNameWithPrefix<R = unknown>(): R;
    _hiddenTableColumnsAutoSaveName<R = unknown>(): R;
    _columnWidthAutoSaveNameWithPrefix<R = unknown>(): R;
    _columnAutoSaveNameV2<R = unknown>(): R;
    _columnAutoSaveNameSupportsV2<R = unknown>(): R;
    scrollColumnToVisible<R = void, P0 = number>(_scrollColumnToVisible: P0): R;
    scrollRowToVisible<R = void, P0 = number>(_scrollRowToVisible: P0): R;
    selectedRowEnumerator<R = unknown>(): R;
    selectedColumnEnumerator<R = unknown>(): R;
    isRowSelected<R = boolean, P0 = number>(_isRowSelected: P0): R;
    isColumnSelected<R = boolean, P0 = number>(_isColumnSelected: P0): R;
    deselectRow<R = void, P0 = number>(_deselectRow: P0): R;
    setLastSelectedRow<R = void, P0 = number>(_setLastSelectedRow: P0): R;
    lastSelectedRow<R = number>(): R;
    deselectColumn<R = void, P0 = number>(_deselectColumn: P0): R;
    _deselectColumn<R = void, P0 = number>(__deselectColumn: P0): R;
    selectRowIndexes_byExtendingSelection<R = void, P0 = unknown, P1 = boolean>(_selectRowIndexes: P0, _byExtendingSelection: P1): R;
    selectColumnIndexes_byExtendingSelection<R = void, P0 = unknown, P1 = boolean>(_selectColumnIndexes: P0, _byExtendingSelection: P1): R;
    selectRow_byExtendingSelection<R = void, P0 = number, P1 = boolean>(_selectRow: P0, _byExtendingSelection: P1): R;
    selectColumn_byExtendingSelection<R = void, P0 = number, P1 = boolean>(_selectColumn: P0, _byExtendingSelection: P1): R;
    _doSelectIndexes_byExtendingSelection_indexType_funnelThroughSingleIndexVersion<R = void, P0 = unknown, P1 = boolean, P2 = number, P3 = boolean>(__doSelectIndexes: P0, _byExtendingSelection: P1, _indexType: P2, _funnelThroughSingleIndexVersion: P3): R;
    _validIndexes_indexType<R = boolean, P0 = unknown, P1 = number>(__validIndexes: P0, _indexType: P1): R;
    _endEditingIfNecessaryWhenDeselectingRowRange<R = void, P0 = cocoa._NSRange>(__endEditingIfNecessaryWhenDeselectingRowRange: P0): R;
    _endEditingIfNecessaryWhenDeselectingColumnRange<R = void, P0 = cocoa._NSRange>(__endEditingIfNecessaryWhenDeselectingColumnRange: P0): R;
    _endEditingIfNecessaryWhenSelectingRowRange<R = void, P0 = cocoa._NSRange>(__endEditingIfNecessaryWhenSelectingRowRange: P0): R;
    _endEditingIfNecessaryWhenSelectingColumnRange<R = void, P0 = cocoa._NSRange>(__endEditingIfNecessaryWhenSelectingColumnRange: P0): R;
    _endMyEditingAndRemainFirstResponder<R = void>(): R;
    deselectAll<R = void, P0 = unknown>(_deselectAll: P0): R;
    _deselectAllAndEndEditingIfNecessary<R = void, P0 = boolean>(__deselectAllAndEndEditingIfNecessary: P0): R;
    _deselectAll<R = void>(): R;
    selectAll<R = void, P0 = unknown>(_selectAll: P0): R;
    _postSelectionIsChangingAndMark<R = void, P0 = boolean>(__postSelectionIsChangingAndMark: P0): R;
    _selectionIsChangingNotificationName<R = unknown>(): R;
    _markSelectionIsChanging<R = void>(): R;
    _postSelectionDidChangeNotification<R = void>(): R;
    _enableSelectionPostingAndPost<R = boolean>(): R;
    _sendSelectionChangedNotificationForRows_columns<R = boolean, P0 = boolean, P1 = boolean>(__sendSelectionChangedNotificationForRows: P0, _columns: P1): R;
    _selectionDidChangeNotificationName<R = unknown>(): R;
    _disableSelectionPosting<R = void>(): R;
    moveColumn_toColumn<R = void, P0 = number, P1 = number>(_moveColumn: P0, _toColumn: P1): R;
    _userCanMoveColumn_toColumn<R = boolean, P0 = number, P1 = number>(__userCanMoveColumn: P0, _toColumn: P1): R;
    _delegateShouldReorderColumn_toColumn<R = boolean, P0 = number, P1 = number>(__delegateShouldReorderColumn: P0, _toColumn: P1): R;
    _postColumnDidMoveNotificationFromColumn_toColumn<R = void, P0 = number, P1 = number>(__postColumnDidMoveNotificationFromColumn: P0, _toColumn: P1): R;
    _didMoveNotificationName<R = unknown>(): R;
    _enableMovedPosting<R = void>(): R;
    _disableMovedPosting<R = void>(): R;
    columnWithIdentifier<R = number, P0 = unknown>(_columnWithIdentifier: P0): R;
    tableColumnWithIdentifier<R = unknown, P0 = unknown>(_tableColumnWithIdentifier: P0): R;
    _drawsVerticalGrid<R = boolean>(): R;
    _drawsHorizontalGrid<R = boolean>(): R;
    drawsGrid<R = boolean>(): R;
    setDrawsGrid<R = void, P0 = boolean>(_setDrawsGrid: P0): R;
    _updateHeaderViewTranslucency<R = void>(): R;
    _myScrollView<R = unknown>(): R;
    _tableHeaderViewWantsTranslucency<R = boolean>(): R;
    removeTableColumn<R = void, P0 = unknown>(_removeTableColumn: P0): R;
    addTableColumn<R = void, P0 = unknown>(_addTableColumn: P0): R;
    _uncachedNumberOfRows<R = number>(): R;
    _bindingsObjectValueForRow<R = unknown, P0 = number>(__bindingsObjectValueForRow: P0): R;
    _intercellSpacingHeightForSidebar<R = number>(): R;
    autoresizesAllColumnsToFit<R = boolean>(): R;
    setAutoresizesAllColumnsToFit<R = void, P0 = boolean>(_setAutoresizesAllColumnsToFit: P0): R;
    _checkDataSource<R = void>(): R;
    setRefusesFirstResponder<R = void, P0 = boolean>(_setRefusesFirstResponder: P0): R;
    _setDying<R = void, P0 = boolean>(__setDying: P0): R;
    _isDying<R = boolean>(): R;
    textDidChange<R = void, P0 = unknown>(_textDidChange: P0): R;
    textDidBeginEditing<R = void, P0 = unknown>(_textDidBeginEditing: P0): R;
    textDidEndEditing<R = void, P0 = unknown>(_textDidEndEditing: P0): R;
    _okToStartTextEndEditing<R = boolean>(): R;
    textShouldBeginEditing<R = boolean, P0 = unknown>(_textShouldBeginEditing: P0): R;
    textShouldEndEditing<R = boolean, P0 = unknown>(_textShouldEndEditing: P0): R;
    _clearLiveResizeColumnLayoutInfo<R = void>(): R;
    _markLiveResizeColumnLayoutInfo<R = void>(): R;
    __computePreLiveColumnResizeWidthsByColumn<R = void>(): R;
    __clearPreLiveColumnWidths<R = void>(): R;
    _sizeTableColumnsToFitWithStyle_forceExactFitIfPossible_originalWidths<R = void, P0 = number, P1 = boolean, P2 = unknown>(__sizeTableColumnsToFitWithStyle: P0, _forceExactFitIfPossible: P1, _originalWidths: P2): R;
    __preLiveResizeWidthOfColumn<R = number, P0 = unknown>(___preLiveResizeWidthOfColumn: P0): R;
    _setMinColumnLayoutMinRequiredVisibleWidth<R = void, P0 = number>(__setMinColumnLayoutMinRequiredVisibleWidth: P0): R;
    sizeLastColumnToFit<R = void>(): R;
    _trailingXForColumn<R = number, P0 = number>(__trailingXForColumn: P0): R;
    _sizeTableColumnsToFitWithStyle<R = void, P0 = number>(__sizeTableColumnsToFitWithStyle: P0): R;
    _sizeTableColumnsToFitForColumnResizeWithStyle<R = void, P0 = number>(__sizeTableColumnsToFitForColumnResizeWithStyle: P0): R;
    _sizeTableColumnsToFitForAutoresizingWithStyle<R = void, P0 = number>(__sizeTableColumnsToFitForAutoresizingWithStyle: P0): R;
    superviewFrameChanged<R = void, P0 = unknown>(_superviewFrameChanged: P0): R;
    _stopObservingContentInsetsOfViewIfClipView<R = void, P0 = unknown>(__stopObservingContentInsetsOfViewIfClipView: P0): R;
    _startObservingContentInsetsOfViewIfClipView<R = void, P0 = unknown>(__startObservingContentInsetsOfViewIfClipView: P0): R;
    _widthBasedOnClipView<R = number>(): R;
    _resizeTableViewBasedOnSuperview<R = void>(): R;
    _sizeToFitWidthOfColumn<R = number, P0 = number>(__sizeToFitWidthOfColumn: P0): R;
    _sizeToFitWidthOfColumn_row<R = number, P0 = number, P1 = number>(__sizeToFitWidthOfColumn: P0, _row: P1): R;
    _delegate_sizeToFitWidthOfColumn<R = number, P0 = number>(__delegate_sizeToFitWidthOfColumn: P0): R;
    _autoresizeToFitForHidingATableColumn<R = void, P0 = boolean>(__autoresizeToFitForHidingATableColumn: P0): R;
    _autoresizeToFit<R = void>(): R;
    _tileAnimatedIfAnimating<R = void>(): R;
    _sizeToFitForUserColumnResizeWithOriginalWidths<R = void, P0 = unknown>(__sizeToFitForUserColumnResizeWithOriginalWidths: P0): R;
    _gdbCompareWidthWithSuperview<R = number>(): R;
    _autoresizingStyleForColumnResize<R = number>(): R;
    _restrictColumnResizingToWidth<R = void>(): R;
    _doSynchronizationOfEditedFieldForColumnWidthChange<R = void>(): R;
    _prepareSynchronizationOfEditedFieldForColumnWidthChange<R = void>(): R;
    _selectRowsFromArrowKey_withEvent<R = void, P0 = number, P1 = unknown>(__selectRowsFromArrowKey: P0, _withEvent: P1): R;
    _selectNextFocusedCellGoingForward_andEdit<R = boolean, P0 = boolean, P1 = boolean>(__selectNextFocusedCellGoingForward: P0, _andEdit: P1): R;
    _viewBasedSelectNextFocusedCellGoingForward_andEdit<R = boolean, P0 = boolean, P1 = boolean>(__viewBasedSelectNextFocusedCellGoingForward: P0, _andEdit: P1): R;
    _attemptToEditFocusedColumn<R = boolean>(): R;
    _cellBasedAttemptToEditFocusedColumn<R = boolean>(): R;
    _focusedColumnToBeginEditingInRow<R = number, P0 = number>(__focusedColumnToBeginEditingInRow: P0): R;
    _attemptToPerformClickOnFocusedColumn<R = boolean>(): R;
    _viewBasedAttemptToEditFocusedColumn<R = boolean>(): R;
    _viewBasedAttemptToPerformClickOnFocusedColumn<R = boolean>(): R;
    _viewBasedAttemptToPerformClickOnViewOfClass<R = boolean, P0 = unknown>(__viewBasedAttemptToPerformClickOnViewOfClass: P0): R;
    performClickOnCellAtColumn_row<R = void, P0 = number, P1 = number>(_performClickOnCellAtColumn: P0, _row: P1): R;
    _focusedColumnToPerformClickOnRow<R = number, P0 = number>(__focusedColumnToPerformClickOnRow: P0): R;
    _canPerformClickAtColumn_row_isCheckBox<R = boolean, P0 = number, P1 = number, P2 = string>(__canPerformClickAtColumn: P0, _row: P1, _isCheckBox: P2): R;
    _canFocusCellAtRow_column<R = boolean, P0 = number, P1 = number>(__canFocusCellAtRow: P0, _column: P1): R;
    setFocusedColumn<R = void, P0 = number>(_setFocusedColumn: P0): R;
    focusedColumn<R = number>(): R;
    shouldFocusCell_atColumn_row<R = boolean, P0 = unknown, P1 = number, P2 = number>(_shouldFocusCell: P0, _atColumn: P1, _row: P2): R;
    canFocusCell_atTableColumn_row<R = boolean, P0 = unknown, P1 = unknown, P2 = number>(_canFocusCell: P0, _atTableColumn: P1, _row: P2): R;
    _allowTabbingIntoCells<R = boolean>(): R;
    scrollToEndOfDocument<R = void, P0 = unknown>(_scrollToEndOfDocument: P0): R;
    scrollToBeginningOfDocument<R = void, P0 = unknown>(_scrollToBeginningOfDocument: P0): R;
    _getRow_column_forPoint<R = void, P0 = number, P1 = number, P2 = cocoa.CGPoint>(__getRow: P0, _column: P1, _forPoint: P2): R;
    _getRow_column_forEvent<R = void, P0 = number, P1 = number, P2 = unknown>(__getRow: P0, _column: P1, _forEvent: P2): R;
    _attemptToEditWithEvent<R = void, P0 = unknown>(__attemptToEditWithEvent: P0): R;
    _removeSelectedIndexesFromIndexSet_goingDown_fromRow<R = void, P0 = unknown, P1 = boolean, P2 = number>(__removeSelectedIndexesFromIndexSet: P0, _goingDown: P1, _fromRow: P2): R;
    _tryCellBasedMouseDown_atRow_column_withView<R = boolean, P0 = unknown, P1 = number, P2 = number, P3 = unknown>(__tryCellBasedMouseDown: P0, _atRow: P1, _column: P2, _withView: P3): R;
    _delegateRespondsToShouldTrackCell<R = boolean>(): R;
    _tryViewBasedMouseDown_atRow_column<R = boolean, P0 = unknown, P1 = number, P2 = number>(__tryViewBasedMouseDown: P0, _atRow: P1, _column: P2): R;
    _shouldAllowClickThroughForEvent<R = boolean, P0 = unknown>(__shouldAllowClickThroughForEvent: P0): R;
    _cancelDelayedStartEditing<R = void>(): R;
    delayStartEditingCalled<R = boolean>(): R;
    _delayStartEditing<R = void, P0 = unknown>(__delayStartEditing: P0): R;
    _startEditingColumn_row_event<R = void, P0 = number, P1 = number, P2 = unknown>(__startEditingColumn: P0, _row: P1, _event: P2): R;
    _delayedSelectRow<R = void>(): R;
    _shouldAbortMouseDownAfterDragAttempt<R = boolean, P0 = unknown>(__shouldAbortMouseDownAfterDragAttempt: P0): R;
    _sendShouldTrackCell_forTableColumn_row<R = boolean, P0 = unknown, P1 = unknown, P2 = number>(__sendShouldTrackCell: P0, _forTableColumn: P1, _row: P2): R;
    _setEditOnSingleClick<R = void, P0 = boolean>(__setEditOnSingleClick: P0): R;
    _editOnSingleClick<R = boolean>(): R;
    _shouldEditColumn_row_withEvent_ignoringSelection<R = boolean, P0 = number, P1 = number, P2 = unknown, P3 = boolean>(__shouldEditColumn: P0, _row: P1, _withEvent: P2, _ignoringSelection: P3): R;
    _shouldEditColumn_row_withEvent<R = boolean, P0 = number, P1 = number, P2 = unknown>(__shouldEditColumn: P0, _row: P1, _withEvent: P2): R;
    _internalShouldEditColumn_row_withEvent<R = boolean, P0 = number, P1 = number, P2 = unknown>(__internalShouldEditColumn: P0, _row: P1, _withEvent: P2): R;
    _editingIsPossibleForColumn_row_ignoringSelection<R = boolean, P0 = number, P1 = number, P2 = boolean>(__editingIsPossibleForColumn: P0, _row: P1, _ignoringSelection: P2): R;
    _isFullWidthCellAtRow<R = boolean, P0 = number>(__isFullWidthCellAtRow: P0): R;
    _hitTestForEvent_atColumn_row<R = number, P0 = unknown, P1 = number, P2 = number>(__hitTestForEvent: P0, _atColumn: P1, _row: P2): R;
    canDragRowsWithIndexes_atPoint<R = boolean, P0 = unknown, P1 = cocoa.CGPoint>(_canDragRowsWithIndexes: P0, _atPoint: P1): R;
    _viewCanDragRowsWithIndexes_atPoint<R = boolean, P0 = unknown, P1 = cocoa.CGPoint>(__viewCanDragRowsWithIndexes: P0, _atPoint: P1): R;
    _cellCanDragRowsWithIndexes_atPoint<R = boolean, P0 = unknown, P1 = cocoa.CGPoint>(__cellCanDragRowsWithIndexes: P0, _atPoint: P1): R;
    _hitRowForDropTargetRow_point<R = number, P0 = number, P1 = cocoa.CGPoint>(__hitRowForDropTargetRow: P0, _point: P1): R;
    _onlyAcceptRowDropOnContent<R = boolean>(): R;
    _onlyDragOnContent<R = boolean>(): R;
    _canDragRowForClickOnCell_column_row_atPoint<R = boolean, P0 = unknown, P1 = number, P2 = number, P3 = cocoa.CGPoint>(__canDragRowForClickOnCell: P0, _column: P1, _row: P2, _atPoint: P3): R;
    preparedCellAtColumn_row<R = unknown, P0 = number, P1 = number>(_preparedCellAtColumn: P0, _row: P1): R;
    _updateSourceListImageForCell_isSourceListDropFeedbackRow<R = void, P0 = unknown, P1 = boolean>(__updateSourceListImageForCell: P0, _isSourceListDropFeedbackRow: P1): R;
    _isTrackingDataCellAtColumn_row<R = boolean, P0 = number, P1 = number>(__isTrackingDataCellAtColumn: P0, _row: P1): R;
    _addGroupRowAttributesToCell_withData_highlighted<R = boolean, P0 = unknown, P1 = unknown, P2 = boolean>(__addGroupRowAttributesToCell: P0, _withData: P1, _highlighted: P2): R;
    _addSourceListCellAttributesToCell_withData_selected_emphasized<R = boolean, P0 = unknown, P1 = unknown, P2 = boolean, P3 = boolean>(__addSourceListCellAttributesToCell: P0, _withData: P1, _selected: P2, _emphasized: P3): R;
    _shouldUseSyrahSourceListAttributes<R = boolean>(): R;
    _groupCellAttributedStringForString_withDefaultAttributes_highlighted<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(__groupCellAttributedStringForString: P0, _withDefaultAttributes: P1, _highlighted: P2): R;
    _sourceListWithBlurGroupCellAttributedStringForString_withDefaultAttributes_highlighted<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(__sourceListWithBlurGroupCellAttributedStringForString: P0, _withDefaultAttributes: P1, _highlighted: P2): R;
    _sourceListGroupCellAttributedStringForString_withDefaultAttributes_highlighted<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(__sourceListGroupCellAttributedStringForString: P0, _withDefaultAttributes: P1, _highlighted: P2): R;
    _nonSelectedSourceListCellAttributesWithDefaults2<R = unknown, P0 = unknown>(__nonSelectedSourceListCellAttributesWithDefaults2: P0): R;
    _selectedSourceListCellAttributesWithDefaults2<R = unknown, P0 = unknown>(__selectedSourceListCellAttributesWithDefaults2: P0): R;
    _sourceListCellAttributesWithDefaultsForBlur_selected_emphasized<R = unknown, P0 = unknown, P1 = boolean, P2 = boolean>(__sourceListCellAttributesWithDefaultsForBlur: P0, _selected: P1, _emphasized: P2): R;
    _groupCellAttributesWithDefaults_highlighted<R = unknown, P0 = unknown, P1 = boolean>(__groupCellAttributesWithDefaults: P0, _highlighted: P1): R;
    _mouseDownShouldMakeFirstResponder<R = boolean>(): R;
    _isEnabledTableView<R = boolean>(): R;
    refusesFirstResponder<R = boolean>(): R;
    _setEditingRow<R = void, P0 = number>(__setEditingRow: P0): R;
    _tableViewWindowWillOrderOnScreen<R = void, P0 = unknown>(__tableViewWindowWillOrderOnScreen: P0): R;
    _stopWatchingWindowWillOrderOnScreen<R = void>(): R;
    _startWatchingWindowWillOrderOnScreen<R = void>(): R;
    _dirtyVisibleCellsForKeyStateChange<R = void>(): R;
    _updateSourceListBackgroundForKeyChange<R = void>(): R;
    _numberOfRowsIsValid<R = boolean>(): R;
    _setNeedsDisplayForFirstResponderChange<R = void>(): R;
    _cellBasedInvalidateSelection<R = void>(): R;
    _setFocusRingNeedsDisplayIfNecessary<R = void>(): R;
    _cellBasedFieldEditorFocusRingFrame<R = cocoa.CGRect>(): R;
    _shouldDrawFocusAroundEditedCell<R = boolean>(): R;
    _drawTableExteriorFocusRingIfNecessaryInClipRect<R = void, P0 = cocoa.CGRect>(__drawTableExteriorFocusRingIfNecessaryInClipRect: P0): R;
    _drawFocusRingAroundRect<R = void, P0 = cocoa.CGRect>(__drawFocusRingAroundRect: P0): R;
    _shouldDrawFocus<R = boolean>(): R;
    _shouldDrawFocusAroundACell<R = boolean>(): R;
    _shouldUseFocusRingMask<R = boolean>(): R;
    _endMyEditing<R = void>(): R;
    _sendAction_to_row_column<R = boolean, P0 = string, P1 = unknown, P2 = number, P3 = number>(__sendAction: P0, _to: P1, _row: P2, _column: P3): R;
    _sendingTableViewRowAction<R = boolean>(): R;
    _didSetFocusForCell_withKeyboardFocusClipView<R = void, P0 = unknown, P1 = unknown>(__didSetFocusForCell: P0, _withKeyboardFocusClipView: P1): R;
    editColumn_row_withEvent_select<R = void, P0 = number, P1 = number, P2 = unknown, P3 = boolean>(_editColumn: P0, _row: P1, _withEvent: P2, _select: P3): R;
    _cellBasedEditColumn_row_withEvent_select_inView<R = void, P0 = number, P1 = number, P2 = unknown, P3 = boolean, P4 = unknown>(__cellBasedEditColumn: P0, _row: P1, _withEvent: P2, _select: P3, _inView: P4): R;
    _viewBasedEditColumn_row_withEvent_select<R = void, P0 = number, P1 = number, P2 = unknown, P3 = boolean>(__viewBasedEditColumn: P0, _row: P1, _withEvent: P2, _select: P3): R;
    _hasHorizontalScrollBar<R = boolean>(): R;
    _updateLastEditingAndFocusRingFrame<R = void>(): R;
    _drawClearForSelectionArea<R = void>(): R;
    _visibleOrPreparedRect<R = cocoa.CGRect>(): R;
    _focusRingFrameForFocusedCell<R = cocoa.CGRect>(): R;
    _subclassOverridesDrawGridInClipRect<R = boolean>(): R;
    _subclassOverridesDrawBackgroundInRect<R = boolean>(): R;
    _drawContextualMenuHighlightInClipRect<R = void, P0 = cocoa.CGRect>(__drawContextualMenuHighlightInClipRect: P0): R;
    _drawCachedColumnsInRect<R = void, P0 = cocoa.CGRect>(__drawCachedColumnsInRect: P0): R;
    _drawDraggedColumn<R = void, P0 = number>(__drawDraggedColumn: P0): R;
    _drawEditingRectWhileCurrentlyEditing<R = cocoa.CGRect, P0 = boolean>(__drawEditingRectWhileCurrentlyEditing: P0): R;
    _viewBasedDrawRect<R = void, P0 = cocoa.CGRect>(__viewBasedDrawRect: P0): R;
    _controlShadowColor<R = unknown>(): R;
    _nonKeyEditingFrameColor<R = unknown>(): R;
    _textBackgroundColor<R = unknown>(): R;
    _updateFocusRingsForOldLastSelectedRow<R = void, P0 = number>(__updateFocusRingsForOldLastSelectedRow: P0): R;
    _setKeyboardFocusRingNeedsDisplayForCellInRect<R = void, P0 = cocoa.CGRect>(__setKeyboardFocusRingNeedsDisplayForCellInRect: P0): R;
    _adjustRectForFocusRing_atRow<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = number>(__adjustRectForFocusRing: P0, _atRow: P1): R;
    _needsRubberBandViews<R = boolean>(): R;
    _makeRubberBandViewWithFrame_inView<R = unknown, P0 = cocoa.CGRect, P1 = unknown>(__makeRubberBandViewWithFrame: P0, _inView: P1): R;
    _updateRubberBandAreas<R = void>(): R;
    _removeRubberBandAreas<R = void>(): R;
    _setRubberBandViews<R = void, P0 = unknown>(__setRubberBandViews: P0): R;
    _rubberBandViews<R = unknown>(): R;
    _isRubberBandAreaExposed<R = boolean>(): R;
    _clipView<R = unknown>(): R;
    _updateVerticalSeparator<R = void>(): R;
    _updateSeparatorPositions<R = void>(): R;
    _removeVerticalSeparators<R = void>(): R;
    _setVerticalSeparators<R = void, P0 = unknown>(__setVerticalSeparators: P0): R;
    _verticalSeparators<R = unknown>(): R;
    _updateBackgroundViews<R = void>(): R;
    _needsBackgroundFillerView<R = boolean>(): R;
    _preferredAppearance<R = unknown>(): R;
    _vibrantBlendingStyleForSubtree<R = number>(): R;
    _updateTableBackgroundView<R = void>(): R;
    _startObservingContainingVisualEffectView_andThemeFrame<R = void, P0 = boolean, P1 = boolean>(__startObservingContainingVisualEffectView: P0, _andThemeFrame: P1): R;
    _stopObservingContainingVisualEffectView_andThemeFrame<R = void, P0 = boolean, P1 = boolean>(__stopObservingContainingVisualEffectView: P0, _andThemeFrame: P1): R;
    _needsTableViewSourceListBackgroundView<R = boolean>(): R;
    _updateBlurBackgroundViewKeyState<R = void>(): R;
    _hasBlurBackgroundView<R = boolean>(): R;
    _shouldBlurSelectionWhenCellBased<R = boolean>(): R;
    _canUseSelectionMaterialWithContainingBackdrop<R = boolean>(): R;
    _wantsUnderTitlebarView<R = boolean>(): R;
    drawsBackground<R = boolean>(): R;
    _needsUnderlyingBlurView<R = boolean>(): R;
    _needsTableViewBlurBackgroundView<R = boolean>(): R;
    _canInheritContainingVisualEffectView<R = boolean>(): R;
    _setupBottomFillerView_forRow<R = void, P0 = unknown, P1 = number>(__setupBottomFillerView: P0, _forRow: P1): R;
    _updateAlternatingRowColorsForBottomFillerView_forRow<R = void, P0 = unknown, P1 = number>(__updateAlternatingRowColorsForBottomFillerView: P0, _forRow: P1): R;
    fontSmoothingBackgroundColor<R = unknown>(): R;
    _removeBackgroundView<R = void>(): R;
    _backgroundViewFillerFrame<R = cocoa.CGRect>(): R;
    _setBackgroundView<R = void, P0 = unknown>(__setBackgroundView: P0): R;
    _backgroundView<R = unknown>(): R;
    _removeBackgroundFillerView<R = void>(): R;
    _setBackgroundFillerView<R = void, P0 = unknown>(__setBackgroundFillerView: P0): R;
    _backgroundFillerView<R = unknown>(): R;
    setLayer<R = void, P0 = unknown>(_setLayer: P0): R;
    _rowViewContentsCanHostAutolayoutEngine<R = boolean>(): R;
    _updateBlurSelectionViewsIfNeeded<R = void>(): R;
    _needsBlurSelectionViews<R = boolean>(): R;
    _updateSelectionBlendingMode<R = void>(): R;
    setSelectionBlendingMode<R = void, P0 = number>(_setSelectionBlendingMode: P0): R;
    selectionBlendingMode<R = number>(): R;
    _inheritableContainingVisualEffectView<R = unknown>(): R;
    _makeSelectionBlurBackdropViewWithFrame<R = unknown, P0 = cocoa.CGRect>(__makeSelectionBlurBackdropViewWithFrame: P0): R;
    _removeAllBlurBackgroundViews<R = void>(): R;
    _setBlurBackgroundViews<R = void, P0 = unknown>(__setBlurBackgroundViews: P0): R;
    _blurSelectionBackgroundViews<R = unknown>(): R;
    _updateRubberBandViewsIfNeeded<R = void>(): R;
    _shouldAdjustPatternPhase<R = boolean>(): R;
    drawBackgroundOverhangInRect<R = void, P0 = cocoa.CGRect>(_drawBackgroundOverhangInRect: P0): R;
    drawBackgroundInClipRect<R = void, P0 = cocoa.CGRect>(_drawBackgroundInClipRect: P0): R;
    _callDrawBackgroundInClipRect<R = void, P0 = cocoa.CGRect>(__callDrawBackgroundInClipRect: P0): R;
    _drawBackgroundColor_inClipRect<R = void, P0 = unknown, P1 = cocoa.CGRect>(__drawBackgroundColor: P0, _inClipRect: P1): R;
    _drawSourceListBackgroundInClipRect<R = void, P0 = cocoa.CGRect>(__drawSourceListBackgroundInClipRect: P0): R;
    _drawStuff_withClipRect<R = void, P0 = cocoa.CDUnknownBlockType, P1 = cocoa.CGRect>(__drawStuff: P0, _withClipRect: P1): R;
    _drawSourceListBackgroundInnerEdgeInRect<R = void, P0 = cocoa.CGRect>(__drawSourceListBackgroundInnerEdgeInRect: P0): R;
    _setDrawingEverything<R = void, P0 = boolean>(__setDrawingEverything: P0): R;
    _viewBasedDrawAlternatingBackgroundInClipRect<R = void, P0 = cocoa.CGRect>(__viewBasedDrawAlternatingBackgroundInClipRect: P0): R;
    _drawAlternatingRowBackgroundColors_inRect_useGetRectsBeingDrawn<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = boolean>(__drawAlternatingRowBackgroundColors: P0, _inRect: P1, _useGetRectsBeingDrawn: P2): R;
    _drawAlternatingRowBackgroundColors_inRect<R = void, P0 = unknown, P1 = cocoa.CGRect>(__drawAlternatingRowBackgroundColors: P0, _inRect: P1): R;
    _colorIndexToStartAlternatingRowsAtFromRow<R = number, P0 = number>(__colorIndexToStartAlternatingRowsAtFromRow: P0): R;
    _alternatingRowBackgroundColors<R = unknown>(): R;
    _captureReorderResizeColumnImageCaches<R = void>(): R;
    _rectOfDraggedColumn<R = cocoa.CGRect>(): R;
    _callHighlightSelectionInClipRect<R = void, P0 = cocoa.CGRect>(__callHighlightSelectionInClipRect: P0): R;
    _layoutIsSameAsCachedLayoutWithFrame<R = boolean, P0 = cocoa.CGRect>(__layoutIsSameAsCachedLayoutWithFrame: P0): R;
    _columnPositionsTheSame<R = boolean>(): R;
    isFlipped<R = boolean>(): R;
    _updateColumnWidthsComparedToSuperview<R = void>(): R;
    _markColumnWidthsNotYetCompared<R = void>(): R;
    _systemSelectionColorChanged<R = void, P0 = unknown>(__systemSelectionColorChanged: P0): R;
    instantiateWithObjectInstantiator<R = void, P0 = unknown>(_instantiateWithObjectInstantiator: P0): R;
    _commonTableViewInit<R = void>(): R;
    _updateRowData<R = void>(): R;
    _finishedTableViewInitWithCoder<R = void>(): R;
    _old_initWithCoder_NSTableView<R = void, P0 = unknown>(__old_initWithCoder_NSTableView: P0): R;
    _staticTableViewDecodeStateWithCoder<R = void, P0 = unknown>(__staticTableViewDecodeStateWithCoder: P0): R;
    _staticTableViewEncodeStateWithCoder<R = void, P0 = unknown>(__staticTableViewEncodeStateWithCoder: P0): R;
    _staticTableViewDecodeRowsWithCoder<R = void, P0 = unknown>(__staticTableViewDecodeRowsWithCoder: P0): R;
    _staticTableViewEncodeRowsWithCoder<R = void, P0 = unknown>(__staticTableViewEncodeRowsWithCoder: P0): R;
    _setStaticTableRows<R = void, P0 = unknown>(__setStaticTableRows: P0): R;
    _staticTableRows<R = unknown>(): R;
    _externalObjectEntriesForNibIdentifer<R = unknown, P0 = unknown>(__externalObjectEntriesForNibIdentifer: P0): R;
    _externalObjectTables<R = unknown>(): R;
    _addExternalObjectsTable_forNibIdentifier<R = void, P0 = unknown, P1 = unknown>(__addExternalObjectsTable: P0, _forNibIdentifier: P1): R;
    _shouldEncodeUILayoutDirection<R = boolean>(): R;
    _old_encodeWithCoder_NSTableView<R = void, P0 = unknown>(__old_encodeWithCoder_NSTableView: P0): R;
    _endDraggingColumn<R = void, P0 = number>(__endDraggingColumn: P0): R;
    _beginDraggingColumn<R = void, P0 = number>(__beginDraggingColumn: P0): R;
    _canUseReorderResizeImageCacheForColumn<R = boolean, P0 = number>(__canUseReorderResizeImageCacheForColumn: P0): R;
    _draggedColumnImageInset<R = number>(): R;
    _setNeedsDisplayForColumn_draggedDelta<R = void, P0 = number, P1 = number>(__setNeedsDisplayForColumn: P0, _draggedDelta: P1): R;
    _setNeedsDisplayForSortingChangeInColumn<R = void, P0 = number>(__setNeedsDisplayForSortingChangeInColumn: P0): R;
    _tableColumn_changedWidthFrom_toWidth<R = void, P0 = unknown, P1 = number, P2 = number>(__tableColumn: P0, _changedWidthFrom: P1, _toWidth: P2): R;
    _tableColumn_willChangeWidthTo<R = void, P0 = unknown, P1 = number>(__tableColumn: P0, _willChangeWidthTo: P1): R;
    _setNeedsDisplayInColumn_includeHeader<R = void, P0 = number, P1 = boolean>(__setNeedsDisplayInColumn: P0, _includeHeader: P1): R;
    _setNeedsDisplayInRow<R = void, P0 = number>(__setNeedsDisplayInRow: P0): R;
    reloadDataForRowIndexes_columnIndexes<R = void, P0 = unknown, P1 = unknown>(_reloadDataForRowIndexes: P0, _columnIndexes: P1): R;
    drawGridInClipRect<R = void, P0 = cocoa.CGRect>(_drawGridInClipRect: P0): R;
    _drawVerticalGridInClipRect<R = void, P0 = cocoa.CGRect>(__drawVerticalGridInClipRect: P0): R;
    _invalidateVerticalGrid<R = void>(): R;
    _nextNonHiddenColumnFromColumn<R = number, P0 = number>(__nextNonHiddenColumnFromColumn: P0): R;
    _firstNonHiddenColumn<R = number>(): R;
    _lastNonHiddenColumn<R = number>(): R;
    _rowsInRectAssumingRowsCoverVisible<R = cocoa._NSRange, P0 = cocoa.CGRect>(__rowsInRectAssumingRowsCoverVisible: P0): R;
    highlightSelectionInClipRect<R = void, P0 = cocoa.CGRect>(_highlightSelectionInClipRect: P0): R;
    _highlightRegularSelectionInRange_clipRect<R = void, P0 = cocoa._NSRange, P1 = cocoa.CGRect>(__highlightRegularSelectionInRange: P0, _clipRect: P1): R;
    _highlightSourceListSelectionInRange<R = void, P0 = cocoa._NSRange>(__highlightSourceListSelectionInRange: P0): R;
    _priorRowIsSelectedFromRow_inSelection<R = boolean, P0 = number, P1 = unknown>(__priorRowIsSelectedFromRow: P0, _inSelection: P1): R;
    _selectedRowsToDraw<R = unknown>(): R;
    _hasSelectedRow<R = boolean>(): R;
    _hasSelectedColumn<R = boolean>(): R;
    _highlightColumn_clipRect<R = void, P0 = number, P1 = cocoa.CGRect>(__highlightColumn: P0, _clipRect: P1): R;
    _highlightRow_clipRect<R = void, P0 = number, P1 = cocoa.CGRect>(__highlightRow: P0, _clipRect: P1): R;
    _shouldUseSecondaryColorForRow_highlightColor<R = boolean, P0 = number, P1 = unknown>(__shouldUseSecondaryColorForRow: P0, _highlightColor: P1): R;
    _shouldDoSelectionStyleDropHighlight<R = boolean>(): R;
    _drawSourceListHighlightInRect<R = void, P0 = cocoa.CGRect>(__drawSourceListHighlightInRect: P0): R;
    _drawSourceListHighlightInRect_isButtedUpRow<R = void, P0 = cocoa.CGRect, P1 = boolean>(__drawSourceListHighlightInRect: P0, _isButtedUpRow: P1): R;
    _manuallyDrawSourceListHighlight<R = boolean>(): R;
    _manuallyDrawSourceListHighlightInRect_isButtedUpRow<R = void, P0 = cocoa.CGRect, P1 = boolean>(__manuallyDrawSourceListHighlightInRect: P0, _isButtedUpRow: P1): R;
    _getSourceListColorFor_startColor_endColor_bottomColor<R = void, P0 = number, P1 = unknown, P2 = unknown, P3 = unknown>(__getSourceListColorFor: P0, _startColor: P1, _endColor: P2, _bottomColor: P3): R;
    drawRowsInRange_clipRect<R = void, P0 = cocoa._NSRange, P1 = cocoa.CGRect>(_drawRowsInRange: P0, _clipRect: P1): R;
    drawRowIndexes_clipRect<R = void, P0 = unknown, P1 = cocoa.CGRect>(_drawRowIndexes: P0, _clipRect: P1): R;
    _setSelectedFontReferenceColorForRow<R = boolean, P0 = number>(__setSelectedFontReferenceColorForRow: P0): R;
    _isGroupRow<R = boolean, P0 = number>(__isGroupRow: P0): R;
    _shouldCacheGroupRows<R = boolean>(): R;
    _hasGroupRows<R = boolean>(): R;
    _drawContextMenuHighlightForIndexes_clipRect<R = void, P0 = unknown, P1 = cocoa.CGRect>(__drawContextMenuHighlightForIndexes: P0, _clipRect: P1): R;
    drawRow_clipRect<R = void, P0 = number, P1 = cocoa.CGRect>(_drawRow: P0, _clipRect: P1): R;
    _drawRowBackgroundForRow_clipRect<R = void, P0 = number, P1 = cocoa.CGRect>(__drawRowBackgroundForRow: P0, _clipRect: P1): R;
    _setFontSmoothingBackgroundColorForCapturingImage<R = void>(): R;
    _funnelRowBackgroundDrawingThroughDrawRect<R = boolean>(): R;
    _isPropertyListTable<R = boolean>(): R;
    _needsVerticalGridOverlayDraw<R = boolean>(): R;
    _isDropFeedbackRow<R = boolean, P0 = number>(__isDropFeedbackRow: P0): R;
    _dropCandidateRowToHighlight<R = number>(): R;
    _dropCandidateRow<R = number>(): R;
    _hasDropCandidateRow<R = boolean>(): R;
    _hasDropTargetOperation<R = boolean>(): R;
    _setFlashingDropFeedbackRow<R = void, P0 = boolean>(__setFlashingDropFeedbackRow: P0): R;
    _flashingDropFeedbackRow<R = boolean>(): R;
    _drawBackgroundForGroupRow_clipRect_isButtedUpRow<R = void, P0 = number, P1 = cocoa.CGRect, P2 = boolean>(__drawBackgroundForGroupRow: P0, _clipRect: P1, _isButtedUpRow: P2): R;
    _adjustDrawingTestFrame_atRow_column<R = void, P0 = cocoa.CGRect, P1 = number, P2 = number>(__adjustDrawingTestFrame: P0, _atRow: P1, _column: P2): R;
    _drawContentsAtRow_column_withCellFrame<R = void, P0 = number, P1 = number, P2 = cocoa.CGRect>(__drawContentsAtRow: P0, _column: P1, _withCellFrame: P2): R;
    _callDrawHighlight<R = boolean>(): R;
    _shouldHighlightRows<R = boolean>(): R;
    _setEnabledAttributesOnCell<R = void, P0 = unknown>(__setEnabledAttributesOnCell: P0): R;
    _drawContentsAtRow_column_clipRect<R = void, P0 = number, P1 = number, P2 = cocoa.CGRect>(__drawContentsAtRow: P0, _column: P1, _clipRect: P2): R;
    selectionShouldUsePrimaryColor<R = boolean>(): R;
    _shouldUseSecondaryHighlightColor<R = boolean>(): R;
    _highlightColorDependsOnWindowState<R = boolean>(): R;
    _usesSourceListColors<R = boolean>(): R;
    _forgetBeingASourceList<R = void>(): R;
    _becomeASourceList<R = void>(): R;
    _sendDelegateWillDisplayCell_forColumn_row<R = void, P0 = unknown, P1 = unknown, P2 = number>(__sendDelegateWillDisplayCell: P0, _forColumn: P1, _row: P2): R;
    _sendBindingAdapterWillDisplayCell_forColumn_row<R = void, P0 = unknown, P1 = unknown, P2 = number>(__sendBindingAdapterWillDisplayCell: P0, _forColumn: P1, _row: P2): R;
    _sendDelegateToolTipForCell_tableColumn_rect_row_mouseLocation<R = unknown, P0 = unknown, P1 = unknown, P2 = cocoa.CGRect, P3 = number, P4 = cocoa.CGPoint>(__sendDelegateToolTipForCell: P0, _tableColumn: P1, _rect: P2, _row: P3, _mouseLocation: P4): R;
    _sendDelegateShouldShowCellExpansionForColumn_row<R = boolean, P0 = number, P1 = number>(__sendDelegateShouldShowCellExpansionForColumn: P0, _row: P1): R;
    _delegateRespondsToShouldShowCellExpansion<R = boolean>(): R;
    _delegateRespondsToGetToolTip<R = boolean>(): R;
    _delegateWillDisplayCell_forColumn_row<R = void, P0 = unknown, P1 = unknown, P2 = number>(__delegateWillDisplayCell: P0, _forColumn: P1, _row: P2): R;
    _setNewObjectValueFromCell_ifNotEqualTo_forTableColumn_row<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = number>(__setNewObjectValueFromCell: P0, _ifNotEqualTo: P1, _forTableColumn: P2, _row: P3): R;
    _dataSourceSetValue_forColumn_row<R = void, P0 = unknown, P1 = unknown, P2 = number>(__dataSourceSetValue: P0, _forColumn: P1, _row: P2): R;
    _dataSourceValueForColumn_row<R = unknown, P0 = unknown, P1 = number>(__dataSourceValueForColumn: P0, _row: P1): R;
    _printDatasourceWarning<R = void>(): R;
    _unarchiving<R = boolean>(): R;
    _userSelectTextOfPreviousCell<R = boolean>(): R;
    _userSelectTextOfNextCell<R = boolean>(): R;
    _userSelectTextOfNextCellInSameColumn<R = boolean>(): R;
    _userCanSelectAndEditColumn_row<R = boolean, P0 = number, P1 = number>(__userCanSelectAndEditColumn: P0, _row: P1): R;
    _cellIsEditableAtColumn_row<R = boolean, P0 = number, P1 = number>(__cellIsEditableAtColumn: P0, _row: P1): R;
    _currentlyEditing<R = boolean>(): R;
    _userCanSelectAndEditTableColumn_row<R = boolean, P0 = unknown, P1 = number>(__userCanSelectAndEditTableColumn: P0, _row: P1): R;
    _userCanEditTableColumn_row<R = boolean, P0 = unknown, P1 = number>(__userCanEditTableColumn: P0, _row: P1): R;
    _userDeselectToRow<R = void, P0 = number>(__userDeselectToRow: P0): R;
    _revertToOldRowSelection_fromRow_toRow<R = void, P0 = unknown, P1 = number, P2 = number>(__revertToOldRowSelection: P0, _fromRow: P1, _toRow: P2): R;
    _userSelectSingleColumn<R = void, P0 = number>(__userSelectSingleColumn: P0): R;
    _userSelectColumnIndexes_withNewAnchorColumn<R = void, P0 = unknown, P1 = number>(__userSelectColumnIndexes: P0, _withNewAnchorColumn: P1): R;
    _userCanSelectRow_withNewSelectedIndexes<R = boolean, P0 = number, P1 = unknown>(__userCanSelectRow: P0, _withNewSelectedIndexes: P1): R;
    _userCanSelectSingleRow<R = boolean, P0 = number>(__userCanSelectSingleRow: P0): R;
    _userSelectSingleRow<R = void, P0 = number>(__userSelectSingleRow: P0): R;
    _userExtendSelectionWithRow<R = void, P0 = number>(__userExtendSelectionWithRow: P0): R;
    _userSelectRowIndexes_withNewSelectedRow<R = void, P0 = unknown, P1 = number>(__userSelectRowIndexes: P0, _withNewSelectedRow: P1): R;
    _userSelectableRowIndexesForProposedSelection<R = unknown, P0 = unknown>(__userSelectableRowIndexesForProposedSelection: P0): R;
    _userSelectableRowIndexesForProposedSelection_userCanAlreadyChangeSelection<R = unknown, P0 = unknown, P1 = boolean>(__userSelectableRowIndexesForProposedSelection: P0, _userCanAlreadyChangeSelection: P1): R;
    _oldUserCanSelectRow<R = boolean, P0 = number>(__oldUserCanSelectRow: P0): R;
    _selectableColumnIndexes<R = unknown, P0 = unknown>(__selectableColumnIndexes: P0): R;
    _userDeselectColumn<R = void, P0 = number>(__userDeselectColumn: P0): R;
    _userDeselectRow<R = void, P0 = number>(__userDeselectRow: P0): R;
    _oldUserCanSelectColumn<R = boolean, P0 = number>(__oldUserCanSelectColumn: P0): R;
    _sendDelegateCanSelectColumn<R = boolean, P0 = number>(__sendDelegateCanSelectColumn: P0): R;
    _sendDelegateSelectionIndexesForProposedSelection<R = unknown, P0 = unknown>(__sendDelegateSelectionIndexesForProposedSelection: P0): R;
    _sendDelegateCanSelectRow<R = boolean, P0 = number>(__sendDelegateCanSelectRow: P0): R;
    _delegateRespondsToCanSelectRow<R = boolean>(): R;
    _userCanChangeSelection<R = boolean>(): R;
    frameOfCellAtColumn_row<R = cocoa.CGRect, P0 = number, P1 = number>(_frameOfCellAtColumn: P0, _row: P1): R;
    _cellPositionAtColumn_row<R = unknown, P0 = number, P1 = number>(__cellPositionAtColumn: P0, _row: P1): R;
    _indentSourceLists<R = boolean>(): R;
    _isOutlineView<R = boolean>(): R;
    _sourceListFrameOfCellAtColumn_row_frame<R = void, P0 = number, P1 = number, P2 = cocoa.CGRect>(__sourceListFrameOfCellAtColumn: P0, _row: P1, _frame: P2): R;
    _isGapRow<R = boolean, P0 = number>(__isGapRow: P0): R;
    _firstAutoresizingColumn<R = number>(): R;
    _lastAutoresizingColumn<R = number>(): R;
    bounds<R = cocoa.CGRect>(): R;
    frame<R = cocoa.CGRect>(): R;
    _tileIfNeeded<R = void>(): R;
    noteNumberOfRowsChanged<R = void>(): R;
    reloadData<R = void>(): R;
    _wantsClipViewToDoOverhangViews<R = boolean>(): R;
    _stopObservingViewDidScroll<R = void>(): R;
    _startObservingViewDidScroll<R = void>(): R;
    _scrollViewDidChangeBounds<R = void, P0 = unknown>(__scrollViewDidChangeBounds: P0): R;
    observeValueForKeyPath_ofObject_change_context<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = void>(_observeValueForKeyPath: P0, _ofObject: P1, _change: P2, _context: P3): R;
    _updateFirstResponderView<R = void>(): R;
    _startObservingFirstResponder<R = void>(): R;
    _stopObservingFirstResponder<R = void>(): R;
    _invalidateNumberOfRowsCache<R = void>(): R;
    tile<R = void>(): R;
    _gutterSpacingChanged<R = void>(): R;
    _shouldLeavingScrollbarSpacing<R = boolean>(): R;
    _currentScrollbarSpacing<R = number>(): R;
    _shouldFlipTableColumnsForRTL<R = boolean>(): R;
    _userInterfaceDirectionIsLTR<R = boolean>(): R;
    _supportsRTL<R = boolean>(): R;
    _scrollbarSpacing<R = number>(): R;
    _tileAnimated<R = void, P0 = boolean>(__tileAnimated: P0): R;
    _finalTableBounds<R = cocoa.CGRect>(): R;
    _finalFrameSize<R = cocoa.CGSize>(): R;
    _fitsWidthInAutohideScrollersScrollView<R = boolean, P0 = unknown>(__fitsWidthInAutohideScrollersScrollView: P0): R;
    _isUpdating<R = boolean>(): R;
    _endUpdate<R = void>(): R;
    _endUpdateWithTile<R = void, P0 = boolean>(__endUpdateWithTile: P0): R;
    _beginUpdate<R = void>(): R;
    _tileAndRedisplayAll<R = void>(): R;
    _setTileNeeded<R = void>(): R;
    _shouldUseLayout<R = boolean>(): R;
    _verifySelectionIsOK<R = void>(): R;
    _moveAndResizeEditedCellWithOldFrame<R = void, P0 = cocoa.CGRect>(__moveAndResizeEditedCellWithOldFrame: P0): R;
    _rightmostAutoresizingColumn<R = number>(): R;
    _fillsClipViewHeight<R = boolean>(): R;
    _fillsClipViewWidth<R = boolean>(): R;
    _fitsInSuperview<R = boolean>(): R;
    _compareWidthWithSuperview<R = number>(): R;
    _setNeedsDisplayInColumn_row<R = void, P0 = number, P1 = number>(__setNeedsDisplayInColumn: P0, _row: P1): R;
    _keyboardFocusNeedsDisplayForColumn_row<R = boolean, P0 = number, P1 = number>(__keyboardFocusNeedsDisplayForColumn: P0, _row: P1): R;
    _cellAtPoint_row_column<R = unknown, P0 = cocoa.CGPoint, P1 = number, P2 = number>(__cellAtPoint: P0, _row: P1, _column: P2): R;
    rowsInRect<R = cocoa._NSRange, P0 = cocoa.CGRect>(_rowsInRect: P0): R;
    rowAtPoint<R = number, P0 = cocoa.CGPoint>(_rowAtPoint: P0): R;
    columnsInRect<R = cocoa._NSRange, P0 = cocoa.CGRect>(_columnsInRect: P0): R;
    _rtlColumnsInRect<R = cocoa._NSRange, P0 = cocoa.CGRect>(__rtlColumnsInRect: P0): R;
    _ltrColumnsInRect<R = cocoa._NSRange, P0 = cocoa.CGRect>(__ltrColumnsInRect: P0): R;
    _visibleTableColumnIndexes<R = unknown>(): R;
    columnIndexesInRect<R = unknown, P0 = cocoa.CGRect>(_columnIndexesInRect: P0): R;
    _columnClosestToColumn_whenMoved<R = number, P0 = number, P1 = number>(__columnClosestToColumn: P0, _whenMoved: P1): R;
    columnAtPoint<R = number, P0 = cocoa.CGPoint>(_columnAtPoint: P0): R;
    _columnAtLocation<R = number, P0 = number>(__columnAtLocation: P0): R;
    _rectOfColumnRange<R = cocoa.CGRect, P0 = cocoa._NSRange>(__rectOfColumnRange: P0): R;
    _rectOfRowRange<R = cocoa.CGRect, P0 = cocoa._NSRange>(__rectOfRowRange: P0): R;
    _totalHeightOfTableView<R = number>(): R;
    _locationOfRow<R = number, P0 = number>(__locationOfRow: P0): R;
    _locationOfColumn<R = number, P0 = number>(__locationOfColumn: P0): R;
    _minTableWidth<R = number>(): R;
    _startOfLastNonHiddenColumn<R = number>(): R;
    _endOfLastNonHiddenColumn<R = number>(): R;
    _rectOfRowAssumingRowExists<R = cocoa.CGRect, P0 = number>(__rectOfRowAssumingRowExists: P0): R;
    _fillerRectHeight<R = number>(): R;
    rectOfRow<R = cocoa.CGRect, P0 = number>(_rectOfRow: P0): R;
    _adjustRowRect_forSourceListRow<R = void, P0 = cocoa.CGRect, P1 = number>(__adjustRowRect: P0, _forSourceListRow: P1): R;
    _setUseUncachedRectOfRow<R = void, P0 = boolean>(__setUseUncachedRectOfRow: P0): R;
    rectOfColumn<R = cocoa.CGRect, P0 = number>(_rectOfColumn: P0): R;
    _rectOfColumn_ignoringTile<R = cocoa.CGRect, P0 = number, P1 = boolean>(__rectOfColumn: P0, _ignoringTile: P1): R;
    _newRectOfColumn<R = cocoa.CGRect, P0 = number>(__newRectOfColumn: P0): R;
    _standardGroupHeight<R = number>(): R;
    _cacheTableColumnPositions<R = void>(): R;
    _updateTableColumnPositionsIfNeeded<R = void>(): R;
    _invalidateCachedColumnForced<R = void, P0 = boolean>(__invalidateCachedColumnForced: P0): R;
    _oldRectOfColumn<R = cocoa.CGRect, P0 = number>(__oldRectOfColumn: P0): R;
    _widthOfColumn<R = number, P0 = number>(__widthOfColumn: P0): R;
    _invalidateForKeyChange<R = void>(): R;
    _needsTableViewDesktopTintedBackgroundWithMaterial<R = boolean, P0 = number>(__needsTableViewDesktopTintedBackgroundWithMaterial: P0): R;
    _hasDesktopTintedBackgroundColorWithMaterial<R = boolean, P0 = number>(__hasDesktopTintedBackgroundColorWithMaterial: P0): R;
    _hasSourceListBackground<R = boolean>(): R;
    _hasSourceListBackgroundColor<R = boolean>(): R;
    _needsRedrawOnKeyChange<R = boolean>(): R;
    _supportsContentBackgroundEffect<R = boolean>(): R;
    _invalidateGroupRowsIfNeeded<R = void>(): R;
    __ivar_getTrackingCell<R = unknown>(): R;
    __ivar_setClickedRow_clickedColumn<R = void, P0 = number, P1 = number>(___ivar_setClickedRow: P0, _clickedColumn: P1): R;
    __ivar_setTrackingCell<R = void, P0 = unknown>(___ivar_setTrackingCell: P0): R;
    _uncachedRectHeightOfRow<R = number, P0 = number>(__uncachedRectHeightOfRow: P0): R;
    _estimateHeightOfRow<R = number, P0 = number>(__estimateHeightOfRow: P0): R;
    _safeSendDelegateHeightOfRow<R = number, P0 = number>(__safeSendDelegateHeightOfRow: P0): R;
    _highlightRectForRow<R = cocoa.CGRect, P0 = number>(__highlightRectForRow: P0): R;
    _adjustRowRect_forSourceListGroupRow<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = number>(__adjustRowRect: P0, _forSourceListGroupRow: P1): R;
    _isSourceListGroupRow<R = boolean, P0 = number>(__isSourceListGroupRow: P0): R;
    _adjustRowRect_forIntergroupSpacingRow<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = number>(__adjustRowRect: P0, _forIntergroupSpacingRow: P1): R;
    _sendDelegateHeightOfRow<R = number, P0 = number>(__sendDelegateHeightOfRow: P0): R;
    _adjustRowHeight_forIntergroupSpacingRow<R = number, P0 = number, P1 = number>(__adjustRowHeight: P0, _forIntergroupSpacingRow: P1): R;
    _intergroupBottomSpacing<R = number>(): R;
    _intergroupTopSpacing<R = number>(): R;
    noteHeightOfRowsWithIndexesChanged<R = void, P0 = unknown>(_noteHeightOfRowsWithIndexesChanged: P0): R;
    rowHeightStorage<R = unknown>(): R;
    _supportsVariableHeightRowsBecauseOfGroupRows<R = boolean>(): R;
    _supportsVariableHeightRows<R = boolean>(): R;
    _hasItergroupSpacing<R = boolean>(): R;
    _typeSelectInterpretKeyEvent<R = boolean, P0 = unknown>(__typeSelectInterpretKeyEvent: P0): R;
    _typeSelectUndoLastSearch<R = boolean>(): R;
    _typeSelectEndCurrentSearch<R = void>(): R;
    _typeSelectEndCurrentSearchWithRedisplay<R = void, P0 = boolean>(__typeSelectEndCurrentSearchWithRedisplay: P0): R;
    _performTypeSelect<R = boolean, P0 = unknown>(__performTypeSelect: P0): R;
    _internalNextTypeSelectMatchFromRow_toRow_forString<R = number, P0 = number, P1 = number, P2 = unknown>(__internalNextTypeSelectMatchFromRow: P0, _toRow: P1, _forString: P2): R;
    _nextTypeSelectMatchFromRow_toRow_forString<R = number, P0 = number, P1 = number, P2 = unknown>(__nextTypeSelectMatchFromRow: P0, _toRow: P1, _forString: P2): R;
    _cellBasedIsTypeSelectMatchAtRow_forString_compareRange<R = boolean, P0 = number, P1 = unknown, P2 = cocoa._NSRange>(__cellBasedIsTypeSelectMatchAtRow: P0, _forString: P1, _compareRange: P2): R;
    _viewBasedIsTypeSelectMatchAtRow_forString_compareRange<R = boolean, P0 = number, P1 = unknown, P2 = cocoa._NSRange>(__viewBasedIsTypeSelectMatchAtRow: P0, _forString: P1, _compareRange: P2): R;
    _internalTypeSelectStringForColumn_row<R = unknown, P0 = number, P1 = number>(__internalTypeSelectStringForColumn: P0, _row: P1): R;
    _typeSelectStringForColumn_row<R = unknown, P0 = number, P1 = number>(__typeSelectStringForColumn: P0, _row: P1): R;
    _hasTextFieldFromView_matchingBlock<R = boolean, P0 = unknown, P1 = cocoa.CDUnknownBlockType>(__hasTextFieldFromView: P0, _matchingBlock: P1): R;
    _shouldTypeSelectForEvent<R = boolean, P0 = unknown>(__shouldTypeSelectForEvent: P0): R;
    currentTypeSelectSearchString<R = unknown>(): R;
    _dataCellForTableColumn_row<R = unknown, P0 = unknown, P1 = number>(__dataCellForTableColumn: P0, _row: P1): R;
    _delegate_dataCellForTableColumn_row<R = unknown, P0 = unknown, P1 = number>(__delegate_dataCellForTableColumn: P0, _row: P1): R;
    _delegate_isGroupRow<R = boolean, P0 = number>(__delegate_isGroupRow: P0): R;
    _delegate_shouldTypeSelectForEvent_withCurrentSearchString<R = boolean, P0 = unknown, P1 = unknown>(__delegate_shouldTypeSelectForEvent: P0, _withCurrentSearchString: P1): R;
    _delegateRespondsTo_shouldTypeSelectForEvent<R = boolean>(): R;
    _delegateTypeSelectStringForTableColumn_row<R = unknown, P0 = unknown, P1 = number>(__delegateTypeSelectStringForTableColumn: P0, _row: P1): R;
    _delegateRespondsTo_typeSelectStringForTableColumn<R = boolean>(): R;
    _delegate_nextTypeSelectMatchFromRow_toRow_forString<R = number, P0 = number, P1 = number, P2 = unknown>(__delegate_nextTypeSelectMatchFromRow: P0, _toRow: P1, _forString: P2): R;
    _delegateRespondsTo_nextTypeSelectMatchFromRow<R = boolean>(): R;
    _defaultValueForAllowsTypeSelect<R = boolean>(): R;
    _tableViewColumnDidResizeNotificationName<R = unknown>(): R;
    _hasMovedFarEnoughHorizontallyFromEvent<R = boolean, P0 = unknown>(__hasMovedFarEnoughHorizontallyFromEvent: P0): R;
    _handleScrollWheelSwipeWithEvent<R = boolean, P0 = unknown>(__handleScrollWheelSwipeWithEvent: P0): R;
    _editActionsForRow_actionEdge<R = unknown, P0 = number, P1 = number>(__editActionsForRow: P0, _actionEdge: P1): R;
    _delegateSupportsRowActions<R = boolean>(): R;
    setEditing<R = void, P0 = boolean>(_setEditing: P0): R;
    isEditing<R = boolean>(): R;
    _allowSwipeToDeleteForEvent<R = boolean, P0 = unknown>(__allowSwipeToDeleteForEvent: P0): R;
    _getDataSourceIvar<R = unknown>(): R;
    _setDataSourceIvar<R = void, P0 = unknown>(__setDataSourceIvar: P0): R;
    _getDelegateIvar<R = unknown>(): R;
    _setDelegateIvar<R = void, P0 = unknown>(__setDelegateIvar: P0): R;
    _delegateAndDatasourceIvarCanBeOpaque<R = boolean>(): R;
    _delegateAndDatasourceCanBeWeak<R = boolean>(): R;
    _shouldHeaderShowSeparatorForColumn<R = boolean, P0 = number>(__shouldHeaderShowSeparatorForColumn: P0): R;
    _drawRowHeaderSeparatorInClipRect<R = void, P0 = cocoa.CGRect>(__drawRowHeaderSeparatorInClipRect: P0): R;
    _rowHeaderSeparatorLineColor<R = unknown>(): R;
    _drawRowHeaderBackgroundInRect<R = void, P0 = cocoa.CGRect>(__drawRowHeaderBackgroundInRect: P0): R;
    _drawRowHeaderSeparatorAsSurface<R = boolean>(): R;
    _viewDidEndLiveResize_handleRowHeaderSurfaces<R = void>(): R;
    _viewWillStartLiveResize_handleRowHeaderSurfaces<R = void>(): R;
    _rowHeaderShadowSurfaceBounds<R = cocoa.CGRect>(): R;
    _rowHeaderShadowSurface<R = unknown>(): R;
    _rowHeaderShadowSurfaceIsShowing<R = boolean>(): R;
    _sizeRowHeaderToFitIfNecessary<R = void>(): R;
    _unregisterForClipBoundsDidChangeNotificationIfNecessaryForSuperview_force<R = void, P0 = unknown, P1 = boolean>(__unregisterForClipBoundsDidChangeNotificationIfNecessaryForSuperview: P0, _force: P1): R;
    _registerForClipBoundsDidChangeNotificationIfNecessaryForSuperview<R = void, P0 = unknown>(__registerForClipBoundsDidChangeNotificationIfNecessaryForSuperview: P0): R;
    _clipViewBoundsChanged<R = void, P0 = unknown>(__clipViewBoundsChanged: P0): R;
    _cachingView<R = boolean>(): R;
    _endDrawView<R = void, P0 = unknown>(__endDrawView: P0): R;
    _beginDrawView<R = void, P0 = unknown>(__beginDrawView: P0): R;
    _unobstructedVisibleRectOfColumn<R = cocoa.CGRect, P0 = number>(__unobstructedVisibleRectOfColumn: P0): R;
    _rowHeaderScrollableContentVisibleRect<R = cocoa.CGRect>(): R;
    _rowHeaderFixedContentRect<R = cocoa.CGRect>(): R;
    _getRowHeaderFixedContentRect_rowHeaderScrollableContentVisibleRect<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGRect>(__getRowHeaderFixedContentRect: P0, _rowHeaderScrollableContentVisibleRect: P1): R;
    _isRowHeaderColumn<R = boolean, P0 = number>(__isRowHeaderColumn: P0): R;
    _rowHeaderColumn<R = number>(): R;
    _hasRowHeaderColumn<R = boolean>(): R;
    _rowHeaderTableColumn<R = unknown>(): R;
    _setRowHeaderTableColumn<R = void, P0 = unknown>(__setRowHeaderTableColumn: P0): R;
    _setRowHeaderTableColumn_repositionTableColumnIfNecessary<R = void, P0 = unknown, P1 = boolean>(__setRowHeaderTableColumn: P0, _repositionTableColumnIfNecessary: P1): R;
    _accessibilityUnregisterCellsOfTableColumn<R = void, P0 = unknown>(__accessibilityUnregisterCellsOfTableColumn: P0): R;
    _accessibilityUnregisterAllRowsAndCells<R = void>(): R;
    _accessibilityUnregisterCellsOfRowIndexes_columnIndexes<R = void, P0 = unknown, P1 = unknown>(__accessibilityUnregisterCellsOfRowIndexes: P0, _columnIndexes: P1): R;
    _accessibilityUnregisterCellsOfTableColumns<R = void, P0 = unknown>(__accessibilityUnregisterCellsOfTableColumns: P0): R;
    _accessibilityShiftAtIndex_count_isDeleteForMove<R = void, P0 = number, P1 = number, P2 = boolean>(__accessibilityShiftAtIndex: P0, _count: P1, _isDeleteForMove: P2): R;
    _accessibilityTracksRowAndCellIndexes<R = boolean>(): R;
    _accessibilitySpecifierComponentForChildUIElement_registerIfNeeded<R = number, P0 = unknown, P1 = boolean>(__accessibilitySpecifierComponentForChildUIElement: P0, _registerIfNeeded: P1): R;
    _accessibilityChildUIElementForSpecifierComponent<R = unknown, P0 = number>(__accessibilityChildUIElementForSpecifierComponent: P0): R;
    _accessibilityRowIndexResolverCreateIfNeeded<R = unknown, P0 = boolean>(__accessibilityRowIndexResolverCreateIfNeeded: P0): R;
    accessibilityPostNotification<R = void, P0 = unknown>(_accessibilityPostNotification: P0): R;
    _isAccessibilityTopLevelNavigatorSectionCandidate<R = boolean>(): R;
    _isAccessibilityContentNavigatorSectionCandidate<R = boolean>(): R;
    _isAccessibilityContentSectionCandidate<R = boolean>(): R;
    _accessibilityTableRow<R = unknown, P0 = number>(__accessibilityTableRow: P0): R;
    accessibilityCellForColumnAndRowAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityCellForColumnAndRowAttributeForParameter: P0): R;
    accessibilityParameterizedAttributeNames<R = unknown>(): R;
    accessibilityArrayAttributeValues_index_maxCount<R = unknown, P0 = unknown, P1 = number, P2 = number>(_accessibilityArrayAttributeValues: P0, _index: P1, _maxCount: P2): R;
    accessibilityArrayAttributeCount<R = number, P0 = unknown>(_accessibilityArrayAttributeCount: P0): R;
    accessibilitySetSelectedChildrenAttribute<R = void, P0 = unknown>(_accessibilitySetSelectedChildrenAttribute: P0): R;
    accessibilityIsSelectedChildrenAttributeSettable<R = boolean>(): R;
    accessibilitySelectedChildrenAttribute<R = unknown>(): R;
    accessibilityIsVisibleChildrenAttributeSettable<R = boolean>(): R;
    accessibilityVisibleChildrenAttribute<R = unknown>(): R;
    accessibilityIndexOfChild<R = number, P0 = unknown>(_accessibilityIndexOfChild: P0): R;
    _accessibilityChildrenInRange<R = unknown, P0 = cocoa._NSRange>(__accessibilityChildrenInRange: P0): R;
    _accessibilityListChildrenInRange<R = unknown, P0 = cocoa._NSRange>(__accessibilityListChildrenInRange: P0): R;
    _accessibilityNumberOfChildren<R = number>(): R;
    accessibilityIsHeaderAttributeSettable<R = boolean>(): R;
    accessibilityHeaderAttribute<R = unknown>(): R;
    accessibilityIsSelectedCellsAttributeSettable<R = boolean>(): R;
    accessibilitySelectedCellsAttribute<R = unknown>(): R;
    accessibilitySetSelectedColumnsAttribute<R = void, P0 = unknown>(_accessibilitySetSelectedColumnsAttribute: P0): R;
    accessibilityIsSelectedColumnsAttributeSettable<R = boolean>(): R;
    accessibilitySelectedColumnsAttribute<R = unknown>(): R;
    accessibilityIsVisibleColumnsAttributeSettable<R = boolean>(): R;
    accessibilityVisibleColumnsAttribute<R = unknown>(): R;
    accessibilityIsColumnsAttributeSettable<R = boolean>(): R;
    accessibilityColumnsAttribute<R = unknown>(): R;
    _accessibilityListTableColumn<R = unknown>(): R;
    _accessibilityUnhiddenTableColumns<R = unknown>(): R;
    accessibilitySetSelectedRowsAttribute<R = void, P0 = unknown>(_accessibilitySetSelectedRowsAttribute: P0): R;
    _accessibilitySelectRowsFromAccessibilityRows<R = void, P0 = unknown>(__accessibilitySelectRowsFromAccessibilityRows: P0): R;
    accessibilityIsSelectedRowsAttributeSettable<R = boolean>(): R;
    accessibilitySelectedRowsAttribute<R = unknown>(): R;
    accessibilityIsVisibleRowsAttributeSettable<R = boolean>(): R;
    accessibilityVisibleRowsAttribute<R = unknown>(): R;
    _accessibilityVisibleRowsRangeIncludeFullyVisibleOnly<R = cocoa._NSRange, P0 = boolean>(__accessibilityVisibleRowsRangeIncludeFullyVisibleOnly: P0): R;
    accessibilityIsRowsAttributeSettable<R = boolean>(): R;
    accessibilityRowsAttribute<R = unknown>(): R;
    _accessibilityRowsInRange<R = unknown, P0 = cocoa._NSRange>(__accessibilityRowsInRange: P0): R;
    accessibilityIsOrientationAttributeSettable<R = boolean>(): R;
    accessibilityOrientationAttribute<R = unknown>(): R;
    accessibilityCurrentEditorForCell<R = unknown, P0 = unknown>(_accessibilityCurrentEditorForCell: P0): R;
    _accessibilityListCellElementClass<R = unknown>(): R;
    _accessibilityCellElementClass<R = unknown>(): R;
    _accessibilityIsList<R = boolean>(): R;
    _accessibilityWantsToBeList<R = boolean>(): R;
    _deprecatedCanFocusCell_atTableColumn_row<R = boolean, P0 = unknown, P1 = unknown, P2 = number>(__deprecatedCanFocusCell: P0, _atTableColumn: P1, _row: P2): R;
    _selectRow_byExtendingSelection<R = void, P0 = number, P1 = boolean>(__selectRow: P0, _byExtendingSelection: P1): R;
    _selectColumn_byExtendingSelection<R = void, P0 = number, P1 = boolean>(__selectColumn: P0, _byExtendingSelection: P1): R;
    _updateDisclosureButtonForRowView_forRow_removeIfNotAvailable_updatePosition<R = void, P0 = unknown, P1 = number, P2 = boolean, P3 = boolean>(__updateDisclosureButtonForRowView: P0, _forRow: P1, _removeIfNotAvailable: P2, _updatePosition: P3): R;
    _cellOffsetConstraintConstantsForColumn_row<R = cocoa.CGRect, P0 = number, P1 = number>(__cellOffsetConstraintConstantsForColumn: P0, _row: P1): R;
    _minWidthForTableColumn_column<R = number, P0 = unknown, P1 = number>(__minWidthForTableColumn: P0, _column: P1): R;
    cancelOperation<R = void, P0 = unknown>(_cancelOperation: P0): R;
    _hasActiveFieldEditor<R = boolean>(): R;
    _backgroundOffsetForGroupRow<R = number, P0 = number>(__backgroundOffsetForGroupRow: P0): R;
    _showGradientBackgroundBehindGroups<R = boolean>(): R;
    applyPermutationsFromArray_toArray_insertionAnimation_removalAnimation<R = void, P0 = unknown, P1 = unknown, P2 = number, P3 = number>(_applyPermutationsFromArray: P0, _toArray: P1, _insertionAnimation: P2, _removalAnimation: P3): R;
    applyPermutationsFromArray_toArray_insertAnimation_removeAnimation<R = void, P0 = unknown, P1 = unknown, P2 = number, P3 = number>(_applyPermutationsFromArray: P0, _toArray: P1, _insertAnimation: P2, _removeAnimation: P3): R;
    _clipViewWillDisplayOverHang<R = void>(): R;
    _adjustFieldEditorAnimated<R = void, P0 = boolean>(__adjustFieldEditorAnimated: P0): R;
    _groupViewSeparatorColor<R = unknown>(): R;
    _rowViewDrawsHorizontalGrid<R = boolean>(): R;
    _needsBackgroundImageForAnimation<R = boolean>(): R;
    _needsBackgroundToAnimate<R = boolean>(): R;
    _lastGroupRowChildFromRow<R = number, P0 = number>(__lastGroupRowChildFromRow: P0): R;
    _nextFloatableRowFromRow_inVisibleRange<R = number, P0 = number, P1 = cocoa._NSRange>(__nextFloatableRowFromRow: P0, _inVisibleRange: P1): R;
    _nextGroupRowGreaterThanOrEqualToRow<R = number, P0 = number>(__nextGroupRowGreaterThanOrEqualToRow: P0): R;
    _shouldFloatRow_inVisibleRange<R = boolean, P0 = number, P1 = cocoa._NSRange>(__shouldFloatRow: P0, _inVisibleRange: P1): R;
    moveRowsInRange_toIndex<R = void, P0 = cocoa._NSRange, P1 = number>(_moveRowsInRange: P0, _toIndex: P1): R;
    _forceViewsIn<R = void>(): R;
    addDropFeedbackViews<R = void>(): R;
    addDropBetweenFeedbackViewsForRow<R = void, P0 = number>(_addDropBetweenFeedbackViewsForRow: P0): R;
    _setAllNonDropTargetRowsToEmphasized<R = void, P0 = boolean>(__setAllNonDropTargetRowsToEmphasized: P0): R;
    addDropOnFeedbackViewsForRow<R = void, P0 = number>(_addDropOnFeedbackViewsForRow: P0): R;
    _setRow_targetForDropOperation<R = void, P0 = number, P1 = boolean>(__setRow: P0, _targetForDropOperation: P1): R;
    _setRowView_row_targetForDropOperation_resetOtherRows<R = void, P0 = unknown, P1 = number, P2 = boolean, P3 = boolean>(__setRowView: P0, _row: P1, _targetForDropOperation: P2, _resetOtherRows: P3): R;
    isDropTargetRow<R = boolean, P0 = number>(_isDropTargetRow: P0): R;
    _addDraggingDestinationViewForRowIndexes_draggingStyle<R = void, P0 = unknown, P1 = number>(__addDraggingDestinationViewForRowIndexes: P0, _draggingStyle: P1): R;
    removeDropFeedbackViewsFromOldRow<R = void, P0 = number>(_removeDropFeedbackViewsFromOldRow: P0): R;
    prepareDraggingDestinationView_forRowIndexes_draggingStyle<R = void, P0 = unknown, P1 = unknown, P2 = number>(_prepareDraggingDestinationView: P0, _forRowIndexes: P1, _draggingStyle: P2): R;
    setAnimationCompletionHandler<R = void, P0 = cocoa.CDUnknownBlockType>(_setAnimationCompletionHandler: P0): R;
    animationCompletionHandler<R = cocoa.CDUnknownBlockType>(): R;
    _mutableSelectedRows<R = unknown>(): R;
    _headerViewDraggedDistance<R = number>(): R;
    unassociateView_withColumn<R = void, P0 = unknown, P1 = number>(_unassociateView: P0, _withColumn: P1): R;
    associateView_withColumn<R = void, P0 = unknown, P1 = number>(_associateView: P0, _withColumn: P1): R;
    _validateHitTest<R = unknown, P0 = unknown>(__validateHitTest: P0): R;
    controlTextDidEndEditing<R = void, P0 = unknown>(_controlTextDidEndEditing: P0): R;
    _rowForView<R = number, P0 = unknown>(__rowForView: P0): R;
    makeRowViewForRow<R = unknown, P0 = number>(_makeRowViewForRow: P0): R;
    _staticRowViewForRow<R = unknown, P0 = number>(__staticRowViewForRow: P0): R;
    _delegateRowViewForRow<R = unknown, P0 = number>(__delegateRowViewForRow: P0): R;
    makeViewForTableColumn_row<R = unknown, P0 = unknown, P1 = number>(_makeViewForTableColumn: P0, _row: P1): R;
    _updateCellInView_atRow_column<R = void, P0 = unknown, P1 = number, P2 = number>(__updateCellInView: P0, _atRow: P1, _column: P2): R;
    _makeRowWrapperForRow<R = unknown, P0 = number>(__makeRowWrapperForRow: P0): R;
    _needsCachedTableRowView<R = boolean>(): R;
    _backgroundImageWithFrame<R = unknown, P0 = cocoa.CGRect>(__backgroundImageWithFrame: P0): R;
    _needsHighlightSelectionForBackgroundAnimations<R = boolean>(): R;
    _backgroundImageForRow_withFrame<R = unknown, P0 = number, P1 = cocoa.CGRect>(__backgroundImageForRow: P0, _withFrame: P1): R;
    _makeViewWrapperForTableColumn_row<R = unknown, P0 = unknown, P1 = number>(__makeViewWrapperForTableColumn: P0, _row: P1): R;
    _makeCachedCellWrapperForTableColumnn_row<R = unknown, P0 = unknown, P1 = number>(__makeCachedCellWrapperForTableColumnn: P0, _row: P1): R;
    _imageForColumn_row_frame<R = unknown, P0 = number, P1 = number, P2 = cocoa.CGRect>(__imageForColumn: P0, _row: P1, _frame: P2): R;
    _copiedCellForTableColumn_row<R = unknown, P0 = unknown, P1 = number>(__copiedCellForTableColumn: P0, _row: P1): R;
    _copiedCellForColumn_row<R = unknown, P0 = number, P1 = number>(__copiedCellForColumn: P0, _row: P1): R;
    _shouldSetObjectValueOnCellsForAnimations<R = boolean>(): R;
    _delegate_viewForTableColumn_row<R = unknown, P0 = unknown, P1 = number>(__delegate_viewForTableColumn: P0, _row: P1): R;
    _shouldReuseViews<R = boolean>(): R;
    cacheReusableView<R = void, P0 = unknown>(_cacheReusableView: P0): R;
    defaultOwner<R = unknown>(): R;
    _delegateRespondsTo_rowViewForRow<R = boolean>(): R;
    renameReuseableViewIdentifierFrom_to<R = void, P0 = unknown, P1 = unknown>(_renameReuseableViewIdentifierFrom: P0, _to: P1): R;
    removeReuseableViewNibNameForIdentifier<R = void, P0 = unknown>(_removeReuseableViewNibNameForIdentifier: P0): R;
    reuseableViewNibNameForIdentifier<R = unknown, P0 = unknown>(_reuseableViewNibNameForIdentifier: P0): R;
    reuseableViewIdentifiers<R = unknown>(): R;
    setReuseableViewNib_forIdentifier<R = void, P0 = unknown, P1 = unknown>(_setReuseableViewNib: P0, _forIdentifier: P1): R;
    setReuseableViewNibName_forIdentifier<R = void, P0 = unknown, P1 = unknown>(_setReuseableViewNibName: P0, _forIdentifier: P1): R;
    archivedReusableViews<R = unknown>(): R;
    setDraggedColumnView<R = void, P0 = unknown>(_setDraggedColumnView: P0): R;
    draggedColumnView<R = unknown>(): R;
    rowData<R = unknown>(): R;
    shouldUseViews<R = boolean>(): R;
    isViewBased<R = boolean>(): R;
    _hasDelegateSupportOrArchivedViews<R = boolean>(): R;
    _nsnib_setInDesignMode<R = void, P0 = boolean>(__nsnib_setInDesignMode: P0): R;
    _isInDesignMode<R = boolean>(): R;
    _delegateRepondsTo_viewForTableColumnRow<R = boolean>(): R;
    _clearReusueQueue<R = void>(): R;
    rowSizeStyle<R = number>(): R;
    setRowSizeStyle<R = void, P0 = number>(_v: P0): R;
    effectiveRowSizeStyle<R = number>(): R;
    floatsGroupRows<R = boolean>(): R;
    setFloatsGroupRows<R = void, P0 = boolean>(_v: P0): R;
    registeredNibsByIdentifier<R = cocoa.NSDictionary>(): R;
    draggingDestinationFeedbackStyle<R = number>(): R;
    setDraggingDestinationFeedbackStyle<R = void, P0 = number>(_v: P0): R;
    verticalMotionCanBeginDrag<R = boolean>(): R;
    setVerticalMotionCanBeginDrag<R = void, P0 = boolean>(_v: P0): R;
    highlightedTableColumn<R = cocoa.NSTableColumn>(): R;
    setHighlightedTableColumn<R = void, P0 = cocoa.NSTableColumn>(_v: P0): R;
    sortDescriptors<R = cocoa.NSArray>(): R;
    setSortDescriptors<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    autosaveTableColumns<R = boolean>(): R;
    setAutosaveTableColumns<R = void, P0 = boolean>(_v: P0): R;
    autosaveName<R = cocoa.NSString>(): R;
    setAutosaveName<R = void, P0 = cocoa.NSString>(_v: P0): R;
    selectedColumnIndexes<R = cocoa.NSIndexSet>(): R;
    selectedRowIndexes<R = cocoa.NSIndexSet>(): R;
    numberOfSelectedRows<R = number>(): R;
    numberOfSelectedColumns<R = number>(): R;
    selectedRow<R = number>(): R;
    selectedColumn<R = number>(): R;
    allowsEmptySelection<R = boolean>(): R;
    setAllowsEmptySelection<R = void, P0 = boolean>(_v: P0): R;
    allowsMultipleSelection<R = boolean>(): R;
    setAllowsMultipleSelection<R = void, P0 = boolean>(_v: P0): R;
    clickedColumn<R = number>(): R;
    clickedRow<R = number>(): R;
    editedRow<R = number>(): R;
    editedColumn<R = number>(): R;
    gridColor<R = cocoa.NSColor>(): R;
    setGridColor<R = void, P0 = cocoa.NSColor>(_v: P0): R;
    backgroundColor<R = cocoa.NSColor>(): R;
    setBackgroundColor<R = void, P0 = cocoa.NSColor>(_v: P0): R;
    gridStyleMask<R = number>(): R;
    setGridStyleMask<R = void, P0 = number>(_v: P0): R;
    usesAlternatingRowBackgroundColors<R = boolean>(): R;
    setUsesAlternatingRowBackgroundColors<R = void, P0 = boolean>(_v: P0): R;
    cornerView<R = cocoa.NSView>(): R;
    setCornerView<R = void, P0 = cocoa.NSView>(_v: P0): R;
    headerView<R = cocoa.NSTableHeaderView>(): R;
    setHeaderView<R = void, P0 = cocoa.NSTableHeaderView>(_v: P0): R;
    rowHeight<R = number>(): R;
    setRowHeight<R = void, P0 = number>(_v: P0): R;
    numberOfRows<R = number>(): R;
    numberOfColumns<R = number>(): R;
    tableColumns<R = cocoa.NSArray>(): R;
    intercellSpacing<R = cocoa.CGSize>(): R;
    setIntercellSpacing<R = void, P0 = cocoa.CGSize>(_v: P0): R;
    allowsColumnResizing<R = boolean>(): R;
    setAllowsColumnResizing<R = void, P0 = boolean>(_v: P0): R;
    allowsColumnSelection<R = boolean>(): R;
    setAllowsColumnSelection<R = void, P0 = boolean>(_v: P0): R;
    columnAutoresizingStyle<R = number>(): R;
    setColumnAutoresizingStyle<R = void, P0 = number>(_v: P0): R;
    allowsColumnReordering<R = boolean>(): R;
    setAllowsColumnReordering<R = void, P0 = boolean>(_v: P0): R;
    dataSource<R = cocoa.NSTableViewDataSource>(): R;
    setDataSource<R = void, P0 = cocoa.NSTableViewDataSource>(_v: P0): R;
    doubleAction<R = string>(): R;
    setDoubleAction<R = void, P0 = string>(_v: P0): R;
    delegate<R = cocoa.NSTableViewDelegate>(): R;
    setDelegate<R = void, P0 = cocoa.NSTableViewDelegate>(_v: P0): R;
    selectionHighlightStyle<R = number>(): R;
    setSelectionHighlightStyle<R = void, P0 = number>(_v: P0): R;
    userInterfaceLayoutDirection<R = number>(): R;
    setUserInterfaceLayoutDirection<R = void, P0 = number>(_v: P0): R;
    allowsTypeSelect<R = boolean>(): R;
    setAllowsTypeSelect<R = void, P0 = boolean>(_v: P0): R;
    usesStaticContents<R = boolean>(): R;
    setUsesStaticContents<R = void, P0 = boolean>(_v: P0): R;
    rowActionsVisible<R = boolean>(): R;
    setRowActionsVisible<R = void, P0 = boolean>(_v: P0): R;
    usesAutomaticRowHeights<R = boolean>(): R;
    setUsesAutomaticRowHeights<R = void, P0 = boolean>(_v: P0): R;
    hiddenRowIndexes<R = cocoa.NSIndexSet>(): R;
    debugDescription<R = cocoa.NSString>(): R;
    description<R = cocoa.NSString>(): R;
    hash<R = number>(): R;
    superclass<R = unknown>(): R;
  }
  namespace classes {
    export interface NSTableView<T = any> extends cocoa.classes.NSControl, cocoa.classes.NSUserInterfaceValidationsProtocol, cocoa.classes.NSTextViewDelegateProtocol, cocoa.classes.NSDraggingSourceProtocol, cocoa.classes.NSAccessibilityTableProtocol {
      alloc<R = NSTableView>(): R;
      new: <R = NSTableView>() => R;
      _defaultTableHeaderReverseSortImage<R = unknown>(): R;
      _defaultTableHeaderSortImage<R = unknown>(): R;
      _groupRowTitleTextColor<R = unknown>(): R;
      _sourceListInactiveGroupTitleTextColor<R = unknown>(): R;
      _sourceListGroupTitleTextColor<R = unknown>(): R;
      _sourceListBackgroundInnerEdgeColor<R = unknown>(): R;
      _logErrorForNonStringIdentifier<R = boolean>(): R;
    }
  }
}

declare const NSTableView: cocoa.classes.NSTableView;
