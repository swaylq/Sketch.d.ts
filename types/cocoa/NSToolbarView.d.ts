/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSToolbarView<T = any> extends NSView {
    _setLayoutInProgress<R = void, P0 = boolean>(__setLayoutInProgress: P0): R;
    _layoutInProgress<R = boolean>(): R;
    _hasTransparentBackground<R = boolean>(): R;
    _windowIsAddingOrRemovingSheet<R = void, P0 = unknown>(__windowIsAddingOrRemovingSheet: P0): R;
    windowDidUpdate<R = void, P0 = unknown>(_windowDidUpdate: P0): R;
    _scheduleDelayedValidationAfterTime<R = void, P0 = number>(__scheduleDelayedValidationAfterTime: P0): R;
    _cancelAnyDelayedValidation<R = void>(): R;
    _autovalidationTypeForEvent<R = number, P0 = unknown>(__autovalidationTypeForEvent: P0): R;
    _autovalidationTypeForTypedCharacters<R = number, P0 = unknown>(__autovalidationTypeForTypedCharacters: P0): R;
    _noteToolbarShowsBaselinePropertyChanged<R = void>(): R;
    _noteToolbarLayoutChanged<R = void>(): R;
    _noteToolbarDisplayModeChanged<R = void>(): R;
    _noteToolbarSizeModeChanged<R = void>(): R;
    _noteToolbarModeChangedAndUpdateItemViewers<R = void, P0 = string>(__noteToolbarModeChangedAndUpdateItemViewers: P0): R;
    _shouldUseEngineFrameForResizingWithOldSuperviewSize<R = boolean, P0 = CGSize>(__shouldUseEngineFrameForResizingWithOldSuperviewSize: P0): R;
    _sendBackgroundGradientHeightChangedNotification<R = void>(): R;
    _distanceFromBaseToTopOfWindow<R = number>(): R;
    _sizeHorizontallyToFitWidth<R = void, P0 = number>(__sizeHorizontallyToFitWidth: P0): R;
    _sizeHorizontallyToFit<R = void>(): R;
    _sizeVerticallyToFit<R = void>(): R;
    _calcToolbarFrame<R = CGRect>(): R;
    _sizeToFit<R = void, P0 = boolean>(__sizeToFit: P0): R;
    _layoutDirtyItemViewersAndTileToolbar<R = void>(): R;
    _minimumWidthEnsuringVisibilityOfAllItems<R = number>(): R;
    _toolbarMetrics<R = __NSToolbarLayoutMetrics>(): R;
    _isToolbarDirectionOppositeOfSystemDirection<R = boolean>(): R;
    _rangeOfCenteredItemsForItemViewers<R = _NSRange, P0 = unknown>(__rangeOfCenteredItemsForItemViewers: P0): R;
    _maximumItemViewerHeight<R = number>(): R;
    _setNeedsDisplayForItemViewers_movingFromFrames_toFrames<R = void, P0 = unknown, P1 = CGRect, P2 = CGRect>(__setNeedsDisplayForItemViewers: P0, _movingFromFrames: P1, _toFrames: P2): R;
    preservesContentDuringLiveResize<R = boolean>(): R;
    _layoutEnabled<R = boolean>(): R;
    _enableLayout<R = void>(): R;
    _disableLayout<R = void>(): R;
    _fullLayout<R = void>(): R;
    _setNeedsDisplayForItemIdentifierSelection<R = void, P0 = unknown>(__setNeedsDisplayForItemIdentifierSelection: P0): R;
    _setNeedsDisplayForItemViewerSelection<R = void, P0 = unknown>(__setNeedsDisplayForItemViewerSelection: P0): R;
    _setNeedsViewerLayout_itemViewers<R = void, P0 = boolean, P1 = unknown>(__setNeedsViewerLayout: P0, _itemViewers: P1): R;
    _setNeedsModeConfiguration_itemViewers<R = void, P0 = boolean, P1 = unknown>(__setNeedsModeConfiguration: P0, _itemViewers: P1): R;
    userInterfaceLayoutDirection<R = number>(): R;
    description<R = unknown>(): R;
    _minimumSizeEnsuringVisibilityOfItem<R = CGSize, P0 = unknown>(__minimumSizeEnsuringVisibilityOfItem: P0): R;
    _getPixelAligningTransformForLayout<R = CGAffineTransform>(): R;
    _makeSureItemViewersInArray_areSubviews_from_to<R = void, P0 = unknown, P1 = boolean, P2 = number, P3 = number>(__makeSureItemViewersInArray: P0, _areSubviews: P1, _from: P2, _to: P3): R;
    _cycleWindows<R = void, P0 = unknown>(__cycleWindows: P0): R;
    _makeFirstResponderForKeyboardHotKeyEvent<R = void>(): R;
    _computePriorFirstResponder<R = unknown>(): R;
    _returnFirstResponderToWindowFromKeyboardHotKeyEvent<R = void>(): R;
    _computeToolbarItemKeyboardLoopIfNecessary<R = void>(): R;
    _computeToolbarItemKeyboardLoop<R = void>(): R;
    _detatchNextAndPreviousForAllSubviews<R = void>(): R;
    _detatchNextAndPreviousForView<R = void, P0 = unknown>(__detatchNextAndPreviousForView: P0): R;
    _makeSureFirstResponderIsNotInInvisibleItemViewer<R = void>(): R;
    _removeClipIndicatorFromSuperview<R = void>(): R;
    _clippedItemViewers<R = unknown>(): R;
    _visibleItemViewers<R = unknown>(): R;
    _allItems<R = unknown>(): R;
    _superSetFrameSize<R = void, P0 = CGSize>(__superSetFrameSize: P0): R;
    _syncItemSetAndUpdateItemViewersWithSEL_setNeedsModeConfiguration_sizeToFit_setNeedsDisplay_updateKeyLoop<R = void, P0 = string, P1 = boolean, P2 = boolean, P3 = boolean, P4 = boolean>(__syncItemSetAndUpdateItemViewersWithSEL: P0, _setNeedsModeConfiguration: P1, _sizeToFit: P2, _setNeedsDisplay: P3, _updateKeyLoop: P4): R;
    _syncItemSet<R = void>(): R;
    _adjustClipIndicatorPosition<R = void>(): R;
    _setClipIndicatorItemsFromItemViewers<R = void, P0 = unknown>(__setClipIndicatorItemsFromItemViewers: P0): R;
    _createClipIndicatorIfNecessary<R = void>(): R;
    _subviewLayoutInProgress<R = boolean>(): R;
    _setBaselineSeparatorStyle<R = void, P0 = number>(__setBaselineSeparatorStyle: P0): R;
    _baselineSeparatorStyle<R = number>(): R;
    _updateBaselineView<R = void>(): R;
    _frameForBaselineView<R = CGRect, P0 = unknown>(__frameForBaselineView: P0): R;
    _setBaselineView<R = void, P0 = unknown>(__setBaselineView: P0): R;
    _baselineView<R = unknown>(): R;
    _drawBackgroundFillInClipRect<R = void, P0 = CGRect>(__drawBackgroundFillInClipRect: P0): R;
    _currentBackgroundColor<R = unknown>(): R;
    _drawsBaseline<R = boolean>(): R;
    mouseDownCanMoveWindow<R = boolean>(): R;
    _mouseUpWithEvent_forView<R = boolean, P0 = unknown, P1 = unknown>(__mouseUpWithEvent: P0, _forView: P1): R;
    _addToolbarItemToToolbarFromMenuItem<R = void, P0 = unknown>(__addToolbarItemToToolbarFromMenuItem: P0): R;
    removeToolbarItem<R = void, P0 = unknown>(_removeToolbarItem: P0): R;
    _printVerboseDebuggingInformation<R = void, P0 = unknown>(__printVerboseDebuggingInformation: P0): R;
    validateMenuItem<R = boolean, P0 = unknown>(_validateMenuItem: P0): R;
    resetToolbarToDefaultConfiguration<R = void, P0 = unknown>(_resetToolbarToDefaultConfiguration: P0): R;
    _findHitItemViewer<R = unknown, P0 = CGPoint>(__findHitItemViewer: P0): R;
    _shouldStealHitTestForCurrentEvent<R = boolean>(): R;
    _isEditing<R = boolean>(): R;
    _isInConfigurationMode<R = boolean>(): R;
    _isInCustomizationWindow<R = boolean>(): R;
    _isInCustomizationMode<R = boolean>(): R;
    _endCustomizationMode<R = void>(): R;
    _beginCustomizationMode<R = void>(): R;
    _beginTempEditingMode<R = void>(): R;
    _forceResetTexturedWindowDragMargins<R = void>(): R;
    _leadingFlexibleSpaceOffset<R = number>(): R;
    _validItemViewerBoundsAssumingClipIndicatorShown<R = CGRect>(): R;
    _validItemViewerBounds<R = CGRect>(): R;
    _validItemViewerBoundsAssumingClipIndicatorNotShown<R = CGRect>(): R;
    _unsuppressClipIndicatorAfterAnimationIfNecessary<R = void>(): R;
    _suppressClipIndicatorDuringAnimation<R = void>(): R;
    set_clipIndicator<R = void, P0 = unknown>(_set_clipIndicator: P0): R;
    _clipIndicator<R = unknown>(): R;
    _clipIndicatorIsShowing<R = boolean>(): R;
    _swapToolbarItemViewerAfterView<R = void, P0 = unknown>(__swapToolbarItemViewerAfterView: P0): R;
    _swapToolbarItemViewerPreviousToView<R = void, P0 = unknown>(__swapToolbarItemViewerPreviousToView: P0): R;
    _swapToolbarItemViewerInDirection_relativeToView<R = void, P0 = number, P1 = unknown>(__swapToolbarItemViewerInDirection: P0, _relativeToView: P1): R;
    _selectToolbarItemViewerAfterView<R = void, P0 = unknown>(__selectToolbarItemViewerAfterView: P0): R;
    _selectToolbarItemViewerPreviousToView<R = void, P0 = unknown>(__selectToolbarItemViewerPreviousToView: P0): R;
    _selectToolbarItemViewerInDirection_relativeToView<R = void, P0 = number, P1 = unknown>(__selectToolbarItemViewerInDirection: P0, _relativeToView: P1): R;
    numberOfItems<R = number>(): R;
    clippedItems<R = unknown>(): R;
    visibleItems<R = unknown>(): R;
    _toolbarItemViewerClass<R = unknown>(): R;
    _endSubviewsBeingBorrowed<R = void>(): R;
    _beginSubviewsBeingBorrowed<R = void>(): R;
    toolbar<R = unknown>(): R;
    setToolbar<R = void, P0 = unknown>(_setToolbar: P0): R;
    _isPaletteView<R = boolean>(): R;
    _wantsKeyboardLoop<R = boolean>(): R;
    _setWantsKeyboardLoop<R = void, P0 = boolean>(__setWantsKeyboardLoop: P0): R;
    _validDestinationForDragsWeInitiate<R = unknown>(): R;
    _setDrawsBaseline<R = void, P0 = boolean>(__setDrawsBaseline: P0): R;
    _setForceItemsToBeMinSize<R = void, P0 = boolean>(__setForceItemsToBeMinSize: P0): R;
    _setAllItemsTransparentBackground<R = void, P0 = boolean>(__setAllItemsTransparentBackground: P0): R;
    isFlipped<R = boolean>(): R;
    isOpaque<R = boolean>(): R;
    _inTexturedWindow<R = boolean>(): R;
    _toolbarDidChangeDraggedTypesFrom_to<R = void, P0 = unknown, P1 = unknown>(__toolbarDidChangeDraggedTypesFrom: P0, _to: P1): R;
    wantsLayer<R = boolean>(): R;
    privateDragTypes<R = unknown>(): R;
    _toolbarViewCommonInit<R = void>(): R;
    adjustToWindow_attachedToEdge<R = void, P0 = unknown, P1 = number>(_adjustToWindow: P0, _attachedToEdge: P1): R;
    _metrics<R = __NSToolbarMetrics>(): R;
    draggedImage_movedTo<R = void, P0 = unknown, P1 = CGPoint>(_draggedImage: P0, _movedTo: P1): R;
    _setImageOnDragSession_withOffset<R = void, P0 = unknown, P1 = CGPoint>(__setImageOnDragSession: P0, _withOffset: P1): R;
    _beginSrcDragItemWithEvent<R = boolean, P0 = unknown>(__beginSrcDragItemWithEvent: P0): R;
    _isItemViewerMoveable<R = boolean, P0 = unknown>(__isItemViewerMoveable: P0): R;
    _beginSrcDragItemViewerWithEvent<R = boolean, P0 = unknown>(__beginSrcDragItemViewerWithEvent: P0): R;
    _computeEarliestDateForDragAnimationForInfo<R = number, P0 = unknown>(__computeEarliestDateForDragAnimationForInfo: P0): R;
    _draggingModeForInfo<R = number, P0 = unknown>(__draggingModeForInfo: P0): R;
    draggedImage_endedAt_operation<R = void, P0 = unknown, P1 = CGPoint, P2 = number>(_draggedImage: P0, _endedAt: P1, _operation: P2): R;
    _wantsUserCancelledOperation<R = boolean>(): R;
    _canMoveItemAsSource<R = boolean, P0 = unknown>(__canMoveItemAsSource: P0): R;
    draggingSourceOperationMaskForLocal<R = number, P0 = boolean>(_draggingSourceOperationMaskForLocal: P0): R;
    dstDraggingDepositedAtPoint_draggingInfo<R = boolean, P0 = CGPoint, P1 = unknown>(_dstDraggingDepositedAtPoint: P0, _draggingInfo: P1): R;
    dstDraggingExitedAtPoint_draggingInfo<R = void, P0 = CGPoint, P1 = unknown>(_dstDraggingExitedAtPoint: P0, _draggingInfo: P1): R;
    _dstDraggingExitedAtPoint_draggingInfo_stillInViewBounds<R = void, P0 = CGPoint, P1 = unknown, P2 = boolean>(__dstDraggingExitedAtPoint: P0, _draggingInfo: P1, _stillInViewBounds: P2): R;
    dstDraggingMovedToPoint_draggingInfo<R = number, P0 = CGPoint, P1 = unknown>(_dstDraggingMovedToPoint: P0, _draggingInfo: P1): R;
    dstDraggingEnteredAtPoint_draggingInfo<R = number, P0 = CGPoint, P1 = unknown>(_dstDraggingEnteredAtPoint: P0, _draggingInfo: P1): R;
    _itemForDraggingInfo_draggingSource<R = unknown, P0 = unknown, P1 = unknown>(__itemForDraggingInfo: P0, _draggingSource: P1): R;
    _isAcceptableDragSource_pasteboard_dragInfo<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(__isAcceptableDragSource: P0, _pasteboard: P1, _dragInfo: P2): R;
    _findIndexOfFirstDuplicateItemWithItemIdentifier<R = number, P0 = unknown>(__findIndexOfFirstDuplicateItemWithItemIdentifier: P0): R;
    convertOriginForRTLIfNecessary_view<R = CGPoint, P0 = CGPoint, P1 = unknown>(_convertOriginForRTLIfNecessary: P0, _view: P1): R;
    beginUpdateInsertionAnimationAtIndex_throwAwayCacheWhenDone<R = void, P0 = number, P1 = boolean>(_beginUpdateInsertionAnimationAtIndex: P0, _throwAwayCacheWhenDone: P1): R;
    _dragEndedNotification<R = void, P0 = unknown>(__dragEndedNotification: P0): R;
    _endInsertionOptimizationWithDragSource_force<R = void, P0 = unknown, P1 = boolean>(__endInsertionOptimizationWithDragSource: P0, _force: P1): R;
    _startInsertionOptimizationWithDragSource<R = void, P0 = unknown>(__startInsertionOptimizationWithDragSource: P0): R;
    insertItemViewer_atIndex<R = void, P0 = unknown, P1 = number>(_insertItemViewer: P0, _atIndex: P1): R;
    removeItemViewerAtIndex<R = void, P0 = number>(_removeItemViewerAtIndex: P0): R;
    _layoutOrderInsertionIndexForPoint_previousIndex<R = number, P0 = CGPoint, P1 = number>(__layoutOrderInsertionIndexForPoint: P0, _previousIndex: P1): R;
    _dragDataInsertionGapItemViewer<R = unknown>(): R;
    _createInsertionGapItemForItemViewer_forDraggingSource<R = unknown, P0 = unknown, P1 = unknown>(__createInsertionGapItemForItemViewer: P0, _forDraggingSource: P1): R;
    _rectOfItemAtIndex<R = CGRect, P0 = number>(__rectOfItemAtIndex: P0): R;
    _dragDataItemViewer<R = unknown>(): R;
    _computeDragImageFromItemViewer<R = unknown, P0 = unknown>(__computeDragImageFromItemViewer: P0): R;
    _findItemViewerAtPoint<R = unknown, P0 = CGPoint>(__findItemViewerAtPoint: P0): R;
    _unregisterForToolbarNotifications<R = void, P0 = unknown>(__unregisterForToolbarNotifications: P0): R;
    _registerForToolbarNotifications<R = void, P0 = unknown>(__registerForToolbarNotifications: P0): R;
    _toolbarContentsAttributesChanged<R = void, P0 = unknown>(__toolbarContentsAttributesChanged: P0): R;
    _toolbarAttributesChanged<R = void, P0 = unknown>(__toolbarAttributesChanged: P0): R;
    _toolbarContentsChanged<R = void, P0 = unknown>(__toolbarContentsChanged: P0): R;
    accessibilityIsSelectedChildrenAttributeSettable<R = boolean>(): R;
    accessibilitySelectedChildrenAttribute<R = unknown>(): R;
    accessibilityIsOverflowButtonAttributeSettable<R = boolean>(): R;
    accessibilityOverflowButtonAttribute<R = unknown>(): R;
  }
  namespace classes {
    export interface NSToolbarView<T = any> extends NSView {
      alloc<R = NSToolbarView>(): R;
      new: <R = NSToolbarView>() => R;
      newViewForToolbar_inWindow_attachedToEdge<R = unknown, P0 = unknown, P1 = unknown, P2 = number>(_newViewForToolbar: P0, _inWindow: P1, _attachedToEdge: P2): R;
    }
  }
}

declare const NSToolbarView: cocoa.classes.NSToolbarView;
