/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSBrowser<T = any> extends NSControl {
    cxx_destruct<R = void>(): R;
    setAutomaticallyAdjustsContentInsets<R = void, P0 = boolean>(_setAutomaticallyAdjustsContentInsets: P0): R;
    automaticallyAdjustsContentInsets<R = boolean>(): R;
    setContentInsets<R = void, P0 = NSEdgeInsets>(_setContentInsets: P0): R;
    _updateNonAutomaticContentInsetsOfAllColumns<R = void>(): R;
    contentInsets<R = NSEdgeInsets>(): R;
    _hasLeafViewControllerForItem<R = boolean, P0 = unknown>(__hasLeafViewControllerForItem: P0): R;
    _clearLeafControllers<R = void>(): R;
    _gdbLeafItemViewControllerByItem<R = unknown>(): R;
    editItemAtIndexPath_withEvent_select<R = void, P0 = unknown, P1 = unknown, P2 = boolean>(_editItemAtIndexPath: P0, _withEvent: P1, _select: P2): R;
    _shouldAutoScrollForPoint<R = boolean, P0 = CGPoint>(__shouldAutoScrollForPoint: P0): R;
    namesOfPromisedFilesDroppedAtDestination<R = unknown, P0 = unknown>(_namesOfPromisedFilesDroppedAtDestination: P0): R;
    _delegateRespondsToNamesOfPromisedFilesDroppedAtDestination<R = boolean>(): R;
    _sendDelegateAcceptDropForDragInfo<R = boolean, P0 = unknown>(__sendDelegateAcceptDropForDragInfo: P0): R;
    _scheduleCollapsingAutoExpandedItems<R = void>(): R;
    _validateDropForDragInfo<R = void, P0 = unknown>(__validateDropForDragInfo: P0): R;
    _sendDelegateValidateDropForDragInfo<R = void, P0 = unknown>(__sendDelegateValidateDropForDragInfo: P0): R;
    _delegateRepondsToValidateDrop<R = boolean>(): R;
    _hoverAreaIsSameAsLast<R = boolean, P0 = unknown>(__hoverAreaIsSameAsLast: P0): R;
    _determineIsSameTargetForDragInfo<R = boolean, P0 = unknown>(__determineIsSameTargetForDragInfo: P0): R;
    _setNeedsDisplayForTargetRow_column_operation<R = void, P0 = number, P1 = number, P2 = number>(__setNeedsDisplayForTargetRow: P0, _column: P1, _operation: P2): R;
    _drawDropHighlight<R = void>(): R;
    _drawDropHighlightAroundColumnWithRect<R = void, P0 = CGRect>(__drawDropHighlightAroundColumnWithRect: P0): R;
    _endColumnDragging<R = void>(): R;
    _commitAutoExpandedItems<R = void>(): R;
    _collapseAutoExpandedItems<R = void>(): R;
    _releaseAutoExpandingItemsCache<R = void>(): R;
    _restoreLastSelectedItemsBeforeAutoExpand<R = void>(): R;
    _uncachedLastSelectedIndexSetForItem<R = unknown, P0 = unknown>(__uncachedLastSelectedIndexSetForItem: P0): R;
    _markAutoExpandedItemWithDragInfo<R = void, P0 = unknown>(__markAutoExpandedItemWithDragInfo: P0): R;
    _setDropTargetColumn_targetRow_targetDropOperation_dragOperation<R = void, P0 = number, P1 = number, P2 = number, P3 = number>(__setDropTargetColumn: P0, _targetRow: P1, _targetDropOperation: P2, _dragOperation: P3): R;
    _beginColumnDragging<R = void>(): R;
    _drawDropHighlightAboveRect<R = void, P0 = CGRect>(__drawDropHighlightAboveRect: P0): R;
    _drawDropHighlightAroundRect_isSelected_rounded<R = void, P0 = CGRect, P1 = boolean, P2 = boolean>(__drawDropHighlightAroundRect: P0, _isSelected: P1, _rounded: P2): R;
    _beforeDrawCell_atRow_col_clipRect<R = void, P0 = unknown, P1 = number, P2 = number, P3 = CGRect>(__beforeDrawCell: P0, _atRow: P1, _col: P2, _clipRect: P3): R;
    _drawDropHighlightBackgroundAroundRect<R = void, P0 = CGRect>(__drawDropHighlightBackgroundAroundRect: P0): R;
    _setDropHighilightColorIfSelected<R = void, P0 = boolean>(__setDropHighilightColorIfSelected: P0): R;
    _dropHighlightColorForEntireTableView<R = unknown>(): R;
    _dropHighlightBackgroundColor<R = unknown>(): R;
    _dropHighlightColor<R = unknown>(): R;
    ignoreModifierKeysWhileDragging<R = boolean>(): R;
    draggedImage_endedAt_operation<R = void, P0 = unknown, P1 = CGPoint, P2 = number>(_draggedImage: P0, _endedAt: P1, _operation: P2): R;
    draggedImage_beganAt<R = void, P0 = unknown, P1 = CGPoint>(_draggedImage: P0, _beganAt: P1): R;
    draggingSourceOperationMaskForLocal<R = number, P0 = boolean>(_draggingSourceOperationMaskForLocal: P0): R;
    setDraggingSourceOperationMask_forLocal<R = void, P0 = number, P1 = boolean>(_setDraggingSourceOperationMask: P0, _forLocal: P1): R;
    _cancelAutoExpandItemUnderCursor<R = void>(): R;
    _autoExpandItemUnderCursor<R = boolean>(): R;
    _shouldAutoExpandItemAtRow_inColumn<R = boolean, P0 = number, P1 = number>(__shouldAutoExpandItemAtRow: P0, _inColumn: P1): R;
    draggingImageForRowsWithIndexes_inColumn_withEvent_offset<R = unknown, P0 = unknown, P1 = number, P2 = unknown, P3 = CGPoint>(_draggingImageForRowsWithIndexes: P0, _inColumn: P1, _withEvent: P2, _offset: P3): R;
    canDragRowsWithIndexes_inColumn_withEvent<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(_canDragRowsWithIndexes: P0, _inColumn: P1, _withEvent: P2): R;
    _performDragFromMouseDown_inColumn<R = boolean, P0 = unknown, P1 = number>(__performDragFromMouseDown: P0, _inColumn: P1): R;
    _concludeDragRows_inColumn<R = void, P0 = unknown, P1 = number>(__concludeDragRows: P0, _inColumn: P1): R;
    _prepareToDragRows_inColumn<R = void, P0 = unknown, P1 = number>(__prepareToDragRows: P0, _inColumn: P1): R;
    _canDragRowsWithIndexes_inColumn_withEvent<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(__canDragRowsWithIndexes: P0, _inColumn: P1, _withEvent: P2): R;
    _dragRowIndexes_inColumn_withEvent_pasteboard_source_slideBack<R = void, P0 = unknown, P1 = number, P2 = unknown, P3 = unknown, P4 = unknown, P5 = boolean>(__dragRowIndexes: P0, _inColumn: P1, _withEvent: P2, _pasteboard: P3, _source: P4, _slideBack: P5): R;
    _draggingImageForRowsWithIndexes_inColumn_withEvent_offset<R = unknown, P0 = unknown, P1 = number, P2 = unknown, P3 = CGPoint>(__draggingImageForRowsWithIndexes: P0, _inColumn: P1, _withEvent: P2, _offset: P3): R;
    _dragShouldBeginFromMouseDown<R = boolean, P0 = unknown>(__dragShouldBeginFromMouseDown: P0): R;
    _sendDelegateWriteRowsWithIndexes_inColumn_toPasteboard<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(__sendDelegateWriteRowsWithIndexes: P0, _inColumn: P1, _toPasteboard: P2): R;
    _delegateRespondsToWriteRows<R = boolean>(): R;
    _sizeToFitColumnMenuAction<R = void, P0 = unknown>(__sizeToFitColumnMenuAction: P0): R;
    _sizeToFitColumn_withEvent<R = void, P0 = unknown, P1 = unknown>(__sizeToFitColumn: P0, _withEvent: P1): R;
    _sizeToFitColumn_withSizeToFitType<R = void, P0 = unknown, P1 = number>(__sizeToFitColumn: P0, _withSizeToFitType: P1): R;
    _calculateSizeToFitWidthOfColumn_testLoadedOnly<R = number, P0 = number, P1 = boolean>(__calculateSizeToFitWidthOfColumn: P0, _testLoadedOnly: P1): R;
    _resizeColumn_withEvent<R = void, P0 = unknown, P1 = unknown>(__resizeColumn: P0, _withEvent: P1): R;
    _enableAutosavingAndColumnResizingNotifications<R = void>(): R;
    _disableAutosavingAndColumnResizingNotificationsAndMark<R = void, P0 = boolean>(__disableAutosavingAndColumnResizingNotificationsAndMark: P0): R;
    _resizeColumnByDelta_resizeInfo<R = void, P0 = number, P1 = _NSBrowserColumnResizeInfo>(__resizeColumnByDelta: P0, _resizeInfo: P1): R;
    _equalyResizeColumnsByDelta_resizeInfo<R = void, P0 = number, P1 = _NSBrowserColumnResizeInfo>(__equalyResizeColumnsByDelta: P0, _resizeInfo: P1): R;
    _zeroPinnedResizeColumnsBySharingDelta_lastSharingColumn_resizeInfo<R = void, P0 = number, P1 = unknown, P2 = _NSBrowserColumnResizeInfo>(__zeroPinnedResizeColumnsBySharingDelta: P0, _lastSharingColumn: P1, _resizeInfo: P2): R;
    _setWidth_ofColumn_stretchWindow<R = void, P0 = number, P1 = number, P2 = boolean>(__setWidth: P0, _ofColumn: P1, _stretchWindow: P2): R;
    _alignColumnForStretchedWindowWithInfo<R = void, P0 = _NSBrowserColumnResizeInfo>(__alignColumnForStretchedWindowWithInfo: P0): R;
    _stretchWindowIfNecessaryToFitResizedColumnWithInfo_resizeColumnDelta<R = boolean, P0 = _NSBrowserColumnResizeInfo, P1 = number>(__stretchWindowIfNecessaryToFitResizedColumnWithInfo: P0, _resizeColumnDelta: P1): R;
    _shouldStretchWindowIfNecessaryForUserColumnResize<R = boolean>(): R;
    userColumnResizingAutoresizesWindow<R = boolean>(): R;
    setUserColumnResizingAutoresizesWindow<R = void, P0 = boolean>(_setUserColumnResizingAutoresizesWindow: P0): R;
    _columnResizeChangeFrameOfColumn_toFrame_constrainWidth_resizeInfo<R = void, P0 = unknown, P1 = CGRect, P2 = boolean, P3 = _NSBrowserColumnResizeInfo>(__columnResizeChangeFrameOfColumn: P0, _toFrame: P1, _constrainWidth: P2, _resizeInfo: P3): R;
    _preferedColumnWidth<R = number>(): R;
    _setNewPreferedColumnWidth<R = void, P0 = number>(__setNewPreferedColumnWidth: P0): R;
    _clearVisitedColumnContentWidths<R = void>(): R;
    _setNeedsDisplayBeginingAtColumn<R = void, P0 = number>(__setNeedsDisplayBeginingAtColumn: P0): R;
    _allowsDelegateSizingForUserResize<R = boolean>(): R;
    _setAllowsDelegateSizingForUserResize<R = void, P0 = boolean>(__setAllowsDelegateSizingForUserResize: P0): R;
    _continuousResizeNotifications<R = boolean>(): R;
    _setContinuousResizeNotifications<R = void, P0 = boolean>(__setContinuousResizeNotifications: P0): R;
    _autosaveColumnsIfNecessary<R = void>(): R;
    _readPersistentBrowserColumns<R = void>(): R;
    _writePersistentBrowserColumns<R = void>(): R;
    noteHeightOfRowsWithIndexesChanged_inColumn<R = void, P0 = unknown, P1 = number>(_noteHeightOfRowsWithIndexesChanged: P0, _inColumn: P1): R;
    _sizeMatrixOfColumnToFit<R = void, P0 = unknown>(__sizeMatrixOfColumnToFit: P0): R;
    widthOfColumn<R = number, P0 = number>(_widthOfColumn: P0): R;
    defaultColumnWidth<R = number>(): R;
    setDefaultColumnWidth<R = void, P0 = number>(_setDefaultColumnWidth: P0): R;
    setWidth_ofColumn<R = void, P0 = number, P1 = number>(_setWidth: P0, _ofColumn: P1): R;
    _validateNewWidthOfColumn_width<R = number, P0 = unknown, P1 = number>(__validateNewWidthOfColumn: P0, _width: P1): R;
    columnWidthForColumnContentWidth<R = number, P0 = number>(_columnWidthForColumnContentWidth: P0): R;
    columnContentWidthForColumnWidth<R = number, P0 = number>(_columnContentWidthForColumnWidth: P0): R;
    _lastDraggedOrUpEventFollowing<R = unknown, P0 = unknown>(__lastDraggedOrUpEventFollowing: P0): R;
    _lastDraggedEventFollowing<R = unknown, P0 = unknown>(__lastDraggedEventFollowing: P0): R;
    _typeSelectInterpretKeyEvent<R = boolean, P0 = unknown>(__typeSelectInterpretKeyEvent: P0): R;
    _typeSelectUndoLastSearch<R = boolean>(): R;
    _typeSelectEndCurrentSearch<R = void>(): R;
    _restoreTypeSelectCellValue<R = void>(): R;
    _performTypeSelect<R = boolean, P0 = unknown>(__performTypeSelect: P0): R;
    _typeSelectScheduleEndOfSearch<R = void>(): R;
    _internalNextTypeSelectMatchFromRow_toRow_inColumn_forString<R = number, P0 = number, P1 = number, P2 = number, P3 = unknown>(__internalNextTypeSelectMatchFromRow: P0, _toRow: P1, _inColumn: P2, _forString: P3): R;
    _nextTypeSelectMatchFromRow_toRow_inColumn_forString<R = number, P0 = number, P1 = number, P2 = number, P3 = unknown>(__nextTypeSelectMatchFromRow: P0, _toRow: P1, _inColumn: P2, _forString: P3): R;
    _internalTypeSelectStringForColumn_row<R = unknown, P0 = number, P1 = number>(__internalTypeSelectStringForColumn: P0, _row: P1): R;
    _typeSelectStringForColumn_row<R = unknown, P0 = number, P1 = number>(__typeSelectStringForColumn: P0, _row: P1): R;
    _shouldTypeSelectForEvent<R = boolean, P0 = unknown>(__shouldTypeSelectForEvent: P0): R;
    currentTypeSelectSearchString<R = unknown>(): R;
    _old_encodeWithCoder_NSBrowser<R = void, P0 = unknown>(__old_encodeWithCoder_NSBrowser: P0): R;
    _old_initWithCoder_NSBrowser<R = unknown, P0 = unknown>(__old_initWithCoder_NSBrowser: P0): R;
    _calcVisibleColumnAreaAvailable<R = CGSize>(): R;
    sendAction<R = boolean>(): R;
    doDoubleClick<R = void, P0 = unknown>(_doDoubleClick: P0): R;
    _willStartTrackingMouseInMatrix_withEvent<R = void, P0 = unknown, P1 = unknown>(__willStartTrackingMouseInMatrix: P0, _withEvent: P1): R;
    _doClickAndQueueSendingOfAction_removeAndAddColumnsIfNecessary_movingBack<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__doClickAndQueueSendingOfAction: P0, _removeAndAddColumnsIfNecessary: P1, _movingBack: P2): R;
    _doClickAndQueueSendingOfAction<R = void, P0 = unknown>(__doClickAndQueueSendingOfAction: P0): R;
    _matrixShouldAddColumnForColumn_matrix<R = boolean, P0 = number, P1 = unknown>(__matrixShouldAddColumnForColumn: P0, _matrix: P1): R;
    _sendQueuedAction<R = void>(): R;
    doClick<R = void, P0 = unknown>(_doClick: P0): R;
    selectAll<R = void, P0 = unknown>(_selectAll: P0): R;
    preservesContentDuringLiveResize<R = boolean>(): R;
    _scrollColumnToLastVisible<R = void, P0 = number>(__scrollColumnToLastVisible: P0): R;
    refusesFirstResponder<R = boolean>(): R;
    setRefusesFirstResponder<R = void, P0 = boolean>(_setRefusesFirstResponder: P0): R;
    _viewThatShouldBecomeFirstResponder<R = unknown>(): R;
    _actOnKeyDown<R = boolean, P0 = unknown>(__actOnKeyDown: P0): R;
    moveLeft<R = void, P0 = unknown>(_moveLeft: P0): R;
    _doMoveBackward<R = boolean>(): R;
    moveRight<R = void, P0 = unknown>(_moveRight: P0): R;
    _doMoveForward<R = boolean>(): R;
    _keyRowOrSelectedRowOfMatrix_inColumn<R = number, P0 = unknown, P1 = number>(__keyRowOrSelectedRowOfMatrix: P0, _inColumn: P1): R;
    _selectedOrFirstValidRowInColumn<R = number, P0 = number>(__selectedOrFirstValidRowInColumn: P0): R;
    _firstSelectableRowInMatrix_inColumn<R = number, P0 = unknown, P1 = number>(__firstSelectableRowInMatrix: P0, _inColumn: P1): R;
    _bumpSelectedItem<R = void, P0 = unknown>(__bumpSelectedItem: P0): R;
    _selectItemBestMatching<R = boolean, P0 = unknown>(__selectItemBestMatching: P0): R;
    _getMatchingRow_forString_inMatrix_startingAtRow_prefixMatch_caseSensitive<R = boolean, P0 = number, P1 = unknown, P2 = unknown, P3 = number, P4 = boolean, P5 = boolean>(__getMatchingRow: P0, _forString: P1, _inMatrix: P2, _startingAtRow: P3, _prefixMatch: P4, _caseSensitive: P5): R;
    _drawTitlesForView_inRect<R = void, P0 = unknown, P1 = CGRect>(__drawTitlesForView: P0, _inRect: P1): R;
    _drawEmptyColumnsForView_inRect<R = void, P0 = unknown, P1 = CGRect>(__drawEmptyColumnsForView: P0, _inRect: P1): R;
    _slowPathDrawEmptyColumnsForView_inRect<R = void, P0 = unknown, P1 = CGRect>(__slowPathDrawEmptyColumnsForView: P0, _inRect: P1): R;
    _imageForEmptyColumnOfSize<R = unknown, P0 = CGSize>(__imageForEmptyColumnOfSize: P0): R;
    _fastPathDrawEmptyColumnsForView_inRect<R = void, P0 = unknown, P1 = CGRect>(__fastPathDrawEmptyColumnsForView: P0, _inRect: P1): R;
    _imageForEmptyVerticalScroller<R = unknown>(): R;
    _focusRingRect<R = CGRect>(): R;
    observeValueForKeyPath_ofObject_change_context<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = void>(_observeValueForKeyPath: P0, _ofObject: P1, _change: P2, _context: P3): R;
    tile<R = void>(): R;
    _tileContinuousScrollingBrowser<R = void>(): R;
    _borderType<R = number>(): R;
    setBorderType<R = void, P0 = number>(_setBorderType: P0): R;
    _setBorderType<R = void, P0 = number>(__setBorderType: P0): R;
    _setLineBorderColor<R = void, P0 = unknown>(__setLineBorderColor: P0): R;
    _scrollViewForColumnsDidTrackHorizontalScroller<R = void, P0 = unknown>(__scrollViewForColumnsDidTrackHorizontalScroller: P0): R;
    _forceSynchronizedScrollingAnimation<R = boolean>(): R;
    _scrollViewForColumnsWillTrackHorizontalScroller<R = void, P0 = unknown>(__scrollViewForColumnsWillTrackHorizontalScroller: P0): R;
    _scrollViewForColumnsDocumentViewVisibilityChange<R = void, P0 = unknown>(__scrollViewForColumnsDocumentViewVisibilityChange: P0): R;
    _scrollViewForColumnsDocumentViewFrameDidChange<R = void, P0 = unknown>(__scrollViewForColumnsDocumentViewFrameDidChange: P0): R;
    _synchronizeTitlesAndColumnsViewFrame<R = void>(): R;
    _synchronizeTitlesAndColumnsViewVisibleRect<R = void>(): R;
    _postDidScrollNotification<R = void>(): R;
    _postWillScrollNotification<R = void>(): R;
    _sizeDocumentViewToColumnsAndAlignIfNecessary<R = void, P0 = boolean>(__sizeDocumentViewToColumnsAndAlignIfNecessary: P0): R;
    _sizeDocumentViewToColumnsAndAlign<R = void>(): R;
    _sizeDocumentViewToColumns<R = void>(): R;
    _calcNumVisibleColumnsAndColumnSize<R = void>(): R;
    drawTitleOfColumn_inRect<R = void, P0 = number, P1 = CGRect>(_drawTitleOfColumn: P0, _inRect: P1): R;
    _containerRelativeFrameOfInsideOfColumn<R = CGRect, P0 = number>(__containerRelativeFrameOfInsideOfColumn: P0): R;
    _containerRelativeFrameOfColumn<R = CGRect, P0 = number>(__containerRelativeFrameOfColumn: P0): R;
    _containerRelativeTitleFrameOfColumn<R = CGRect, P0 = number>(__containerRelativeTitleFrameOfColumn: P0): R;
    titleFrameOfColumn<R = CGRect, P0 = number>(_titleFrameOfColumn: P0): R;
    getRow_column_forPoint<R = boolean, P0 = number, P1 = number, P2 = CGPoint>(_getRow: P0, _column: P1, _forPoint: P2): R;
    frameOfRow_inColumn<R = CGRect, P0 = number, P1 = number>(_frameOfRow: P0, _inColumn: P1): R;
    frameOfInsideOfColumn<R = CGRect, P0 = number>(_frameOfInsideOfColumn: P0): R;
    frameOfColumn<R = CGRect, P0 = number>(_frameOfColumn: P0): R;
    _containerViewOfColumns<R = unknown>(): R;
    _containerViewOfTitles<R = unknown>(): R;
    _columnControllerInColumn<R = unknown, P0 = number>(__columnControllerInColumn: P0): R;
    matrixInColumn<R = unknown, P0 = number>(_matrixInColumn: P0): R;
    _viewInColumn<R = unknown, P0 = number>(__viewInColumn: P0): R;
    columnOfMatrix<R = number, P0 = unknown>(_columnOfMatrix: P0): R;
    _columnOfView<R = number, P0 = unknown>(__columnOfView: P0): R;
    selectedCellInColumn<R = unknown, P0 = number>(_selectedCellInColumn: P0): R;
    _selectedCellsInColumn<R = unknown, P0 = number>(__selectedCellsInColumn: P0): R;
    _setClickedColumn_clickedRow<R = void, P0 = number, P1 = number>(__setClickedColumn: P0, _clickedRow: P1): R;
    _shouldShowCellExpansionForRow_column<R = boolean, P0 = number, P1 = number>(__shouldShowCellExpansionForRow: P0, _column: P1): R;
    addColumnForItem<R = void, P0 = unknown>(_addColumnForItem: P0): R;
    addColumn<R = void>(): R;
    _rootItem<R = unknown>(): R;
    _visitedColumnContentWidths<R = unknown>(): R;
    _setScrollViewForColumns<R = void, P0 = unknown>(__setScrollViewForColumns: P0): R;
    _scrollViewForColumns<R = unknown>(): R;
    _stopObservingScrollerOfScrollViewForColumns<R = void>(): R;
    _startObservingScrollerOfScrollViewForColumns<R = void>(): R;
    _addingOrAnimatingNewColumn<R = boolean>(): R;
    _setInitialColumnContentSizeOfColumn<R = void, P0 = unknown>(__setInitialColumnContentSizeOfColumn: P0): R;
    _animateLastAddedColumnToVisible<R = void>(): R;
    _addColumnSubviewAndAnimateIfNecessary<R = void, P0 = unknown>(__addColumnSubviewAndAnimateIfNecessary: P0): R;
    _addColumnWithoutChangingVisibleColumn<R = void>(): R;
    _userClickOrKeyInColumnShouldMaintainColumnPosition<R = boolean>(): R;
    _shouldAnimateColumnScrolling<R = boolean>(): R;
    _setShouldAnimateColumnScrolling<R = void, P0 = boolean>(__setShouldAnimateColumnScrolling: P0): R;
    _enableColumnAnimation<R = void>(): R;
    _disableColumnAnimation<R = void>(): R;
    _addAnimatedColumn<R = void>(): R;
    _scrollLastColumnTrailingEdgeToVisible<R = void>(): R;
    _computeAndAlignFirstClosestVisibleColumn<R = void>(): R;
    _setVisibleRectOfColumns<R = void, P0 = CGRect>(__setVisibleRectOfColumns: P0): R;
    _visibleRectOfColumns<R = CGRect>(): R;
    _postColumnConfigurationDidChangeNotification<R = void>(): R;
    _doPostColumnConfigurationDidChangeNotification<R = void, P0 = unknown>(__doPostColumnConfigurationDidChangeNotification: P0): R;
    didFinishColumnScrollWithHelper<R = void, P0 = unknown>(_didFinishColumnScrollWithHelper: P0): R;
    _alignFirstVisibleColumnToDocumentViewEdge<R = void, P0 = boolean>(__alignFirstVisibleColumnToDocumentViewEdge: P0): R;
    _computeFirstMostlyVisibleColumn<R = void>(): R;
    _computeFirstCompletelyVisibleColumn<R = void>(): R;
    _computeFirstVisibleColumnRequireCompletelyVisible<R = void, P0 = boolean>(__computeFirstVisibleColumnRequireCompletelyVisible: P0): R;
    _ensureValidSelection<R = void>(): R;
    _didChangeLastColumn_toColumn<R = void, P0 = number, P1 = number>(__didChangeLastColumn: P0, _toColumn: P1): R;
    scrollRowToVisible_inColumn<R = void, P0 = number, P1 = number>(_scrollRowToVisible: P0, _inColumn: P1): R;
    _scrollOptimizingLastColumnPlacement<R = void>(): R;
    scrollColumnToVisible<R = void, P0 = number>(_scrollColumnToVisible: P0): R;
    _scrollRectToVisible<R = void, P0 = CGRect>(__scrollRectToVisible: P0): R;
    _shouldScrollStartOfColumnToVisible<R = boolean>(): R;
    _useSnowLeopardBehavior<R = boolean>(): R;
    _scrollFirstVisibleColumnIntoView<R = void>(): R;
    _scrollColumnToVisible_private<R = void, P0 = number, P1 = boolean>(__scrollColumnToVisible: P0, _private: P1): R;
    scrollColumnsLeftBy<R = void, P0 = number>(_scrollColumnsLeftBy: P0): R;
    scrollColumnsRightBy<R = void, P0 = number>(_scrollColumnsRightBy: P0): R;
    _scrollColumnsRightBy<R = void, P0 = number>(__scrollColumnsRightBy: P0): R;
    _createColumn_empty<R = unknown, P0 = CGRect, P1 = boolean>(__createColumn: P0, _empty: P1): R;
    _setScrollerSize<R = void, P0 = number>(__setScrollerSize: P0): R;
    _syncScrollerSizeOfColumn<R = void, P0 = unknown>(__syncScrollerSizeOfColumn: P0): R;
    _controlSizeForScrollers<R = number>(): R;
    _fixKeyViewForView<R = void, P0 = unknown>(__fixKeyViewForView: P0): R;
    _reattachColumnSubviews<R = void, P0 = unknown>(__reattachColumnSubviews: P0): R;
    _unhookColumnSubviews<R = unknown>(): R;
    reloadColumn<R = void, P0 = number>(_reloadColumn: P0): R;
    _matrixBasedReloadColumn<R = void, P0 = number>(__matrixBasedReloadColumn: P0): R;
    _itemBasedReloadColumn<R = void, P0 = number>(__itemBasedReloadColumn: P0): R;
    _newSelectionIndexesFromOldSelectedItems_parentItem<R = unknown, P0 = unknown, P1 = unknown>(__newSelectionIndexesFromOldSelectedItems: P0, _parentItem: P1): R;
    displayAllColumns<R = void>(): R;
    displayColumn<R = void, P0 = number>(_displayColumn: P0): R;
    _setNeedsDisplayInColumn<R = void, P0 = number>(__setNeedsDisplayInColumn: P0): R;
    validateVisibleColumns<R = void>(): R;
    path<R = unknown>(): R;
    pathToColumn<R = unknown, P0 = number>(_pathToColumn: P0): R;
    setPath<R = boolean, P0 = unknown>(_setPath: P0): R;
    selectedRowInColumn<R = number, P0 = number>(_selectedRowInColumn: P0): R;
    selectRow_inColumn<R = void, P0 = number, P1 = number>(_selectRow: P0, _inColumn: P1): R;
    selectRowIndexes_inColumn<R = void, P0 = unknown, P1 = number>(_selectRowIndexes: P0, _inColumn: P1): R;
    selectedRowIndexesInColumn<R = unknown, P0 = number>(_selectedRowIndexesInColumn: P0): R;
    _selectRowIndexes_inColumn<R = void, P0 = unknown, P1 = number>(__selectRowIndexes: P0, _inColumn: P1): R;
    _selectCell_inColumn<R = boolean, P0 = unknown, P1 = number>(__selectCell: P0, _inColumn: P1): R;
    loadColumnZero<R = void>(): R;
    _shouldMaintainFirstResponder<R = boolean>(): R;
    _viewWillResignFirstResponder<R = void, P0 = unknown>(__viewWillResignFirstResponder: P0): R;
    beforeDraw<R = void>(): R;
    _setFocusRingNeedsDisplay<R = void>(): R;
    _hasKeyboardFocus<R = boolean>(): R;
    _shouldDrawFocus<R = boolean>(): R;
    _setUsesSmallTitleFont<R = void, P0 = boolean>(__setUsesSmallTitleFont: P0): R;
    setTitle_ofColumn<R = void, P0 = unknown, P1 = number>(_setTitle: P0, _ofColumn: P1): R;
    _setTitle_ofColumn<R = void, P0 = unknown, P1 = number>(__setTitle: P0, _ofColumn: P1): R;
    titleOfColumn<R = unknown, P0 = number>(_titleOfColumn: P0): R;
    _titleCellOfColumn<R = unknown, P0 = number>(__titleCellOfColumn: P0): R;
    _shouldClipViewForTitlesCopyOnScroll<R = boolean>(): R;
    _updateNumberOfTitleCellsIfNecessary<R = void>(): R;
    loadedCellAtRow_column<R = unknown, P0 = number, P1 = number>(_loadedCellAtRow: P0, _column: P1): R;
    _loadedCellAtRow_column_inMatrix<R = unknown, P0 = number, P1 = number, P2 = unknown>(__loadedCellAtRow: P0, _column: P1, _inMatrix: P2): R;
    _typeSelectString<R = unknown>(): R;
    _isTypeSelectRow_column<R = boolean, P0 = number, P1 = number>(__isTypeSelectRow: P0, _column: P1): R;
    _delegateDoesNotCreateRowsInMatrix<R = boolean>(): R;
    _delegateRespondsToWillDisplayCell<R = boolean>(): R;
    _delegateRespondsToSelectCellsByRow<R = boolean>(): R;
    _sendDelegateCreateRowsForColumn_inMatrix<R = void, P0 = number, P1 = unknown>(__sendDelegateCreateRowsForColumn: P0, _inMatrix: P1): R;
    _sendDelegateWillDisplayCell_atRow_column<R = void, P0 = unknown, P1 = number, P2 = number>(__sendDelegateWillDisplayCell: P0, _atRow: P1, _column: P2): R;
    _loadCell_atRow_col_inMatrix<R = unknown, P0 = unknown, P1 = number, P2 = number, P3 = unknown>(__loadCell: P0, _atRow: P1, _col: P2, _inMatrix: P3): R;
    _sendDelegateSelectRow_inColumn<R = boolean, P0 = number, P1 = number>(__sendDelegateSelectRow: P0, _inColumn: P1): R;
    reloadItem_reloadChildren<R = void, P0 = unknown, P1 = boolean>(_reloadItem: P0, _reloadChildren: P1): R;
    reloadDataForRowIndexes_inColumn<R = void, P0 = unknown, P1 = number>(_reloadDataForRowIndexes: P0, _inColumn: P1): R;
    _reloadRow_column<R = void, P0 = number, P1 = number>(__reloadRow: P0, _column: P1): R;
    _findRow_column_forItem<R = boolean, P0 = number, P1 = number, P2 = unknown>(__findRow: P0, _column: P1, _forItem: P2): R;
    _gdbColumnControllers<R = unknown>(): R;
    _lastNonLeafColumnController<R = unknown>(): R;
    isLeafItem<R = boolean, P0 = unknown>(_isLeafItem: P0): R;
    _isExpandableRow_withParentItem<R = boolean, P0 = number, P1 = unknown>(__isExpandableRow: P0, _withParentItem: P1): R;
    _isExpandableItem<R = boolean, P0 = unknown>(__isExpandableItem: P0): R;
    _isLeafRow_withParentItem<R = boolean, P0 = number, P1 = unknown>(__isLeafRow: P0, _withParentItem: P1): R;
    parentForItem<R = unknown, P0 = unknown>(_parentForItem: P0): R;
    indexPathForColumn<R = unknown, P0 = number>(_indexPathForColumn: P0): R;
    indexPathForItem<R = unknown, P0 = unknown>(_indexPathForItem: P0): R;
    _indexOfItem_inColumn<R = number, P0 = unknown, P1 = number>(__indexOfItem: P0, _inColumn: P1): R;
    _indexOfItem_inParent<R = number, P0 = unknown, P1 = unknown>(__indexOfItem: P0, _inParent: P1): R;
    _child_ofItem<R = unknown, P0 = number, P1 = unknown>(__child: P0, _ofItem: P1): R;
    _numberOfChildrenOfItem<R = number, P0 = unknown>(__numberOfChildrenOfItem: P0): R;
    itemAtRow_inColumn<R = unknown, P0 = number, P1 = number>(_itemAtRow: P0, _inColumn: P1): R;
    itemAtRow_column<R = unknown, P0 = number, P1 = number>(_itemAtRow: P0, _column: P1): R;
    _itemAtRow_parentItem<R = unknown, P0 = number, P1 = unknown>(__itemAtRow: P0, _parentItem: P1): R;
    parentForItemsInColumn<R = unknown, P0 = number>(_parentForItemsInColumn: P0): R;
    itemAtIndexPath<R = unknown, P0 = unknown>(_itemAtIndexPath: P0): R;
    _setShouldForwardTypeSelectionToNextColumn<R = void, P0 = boolean>(__setShouldForwardTypeSelectionToNextColumn: P0): R;
    _shouldForwardTypeSelectionToNextColumn<R = boolean>(): R;
    setEnabled<R = void, P0 = boolean>(_setEnabled: P0): R;
    _setAcceptsFirstMouse<R = void, P0 = boolean>(__setAcceptsFirstMouse: P0): R;
    acceptsArrowKeys<R = boolean>(): R;
    setAcceptsArrowKeys<R = void, P0 = boolean>(_setAcceptsArrowKeys: P0): R;
    _horizontalScroller<R = unknown>(): R;
    _setHasHorizontalScroller<R = void, P0 = boolean>(__setHasHorizontalScroller: P0): R;
    allowsIncrementalSearching<R = boolean>(): R;
    setAllowsIncrementalSearching<R = void, P0 = boolean>(_setAllowsIncrementalSearching: P0): R;
    matrixClass<R = unknown>(): R;
    setMatrixClass<R = void, P0 = unknown>(_setMatrixClass: P0): R;
    scrollViaScroller<R = void, P0 = unknown>(_scrollViaScroller: P0): R;
    _scrollColumnsForScrollerIncrementOrDecrementUsingPart<R = boolean, P0 = number>(__scrollColumnsForScrollerIncrementOrDecrementUsingPart: P0): R;
    _scrollColumnToVisible_requireCompletelyVisible<R = void, P0 = number, P1 = boolean>(__scrollColumnToVisible: P0, _requireCompletelyVisible: P1): R;
    updateScroller<R = void>(): R;
    _doTiming<R = void>(): R;
    _setFirstColumnTitle<R = void, P0 = unknown>(__setFirstColumnTitle: P0): R;
    _setNumVisibleColumns<R = void, P0 = number>(__setNumVisibleColumns: P0): R;
    _browserIBMetrics<R = unknown>(): R;
    valueForKey<R = unknown, P0 = unknown>(_valueForKey: P0): R;
    _isAccessibilityContentSectionCandidate<R = boolean>(): R;
    accessibilityIsColumnsAttributeSettable<R = boolean>(): R;
    accessibilityColumnsAttribute<R = unknown>(): R;
    accessibilityIsColumnTitlesAttributeSettable<R = boolean>(): R;
    accessibilityColumnTitlesAttribute<R = unknown>(): R;
    accessibilityIsHorizontalScrollBarAttributeSettable<R = boolean>(): R;
    accessibilityHorizontalScrollBarAttribute<R = unknown>(): R;
    accessibilityIsVisibleColumnsAttributeSettable<R = boolean>(): R;
    accessibilityVisibleColumnsAttribute<R = unknown>(): R;
    columnsAutosaveName<R = NSString>(): R;
    setColumnsAutosaveName<R = void, P0 = NSString>(_v: P0): R;
    rowHeight<R = number>(): R;
    setRowHeight<R = void, P0 = number>(_v: P0): R;
    prefersAllColumnUserResizing<R = boolean>(): R;
    setPrefersAllColumnUserResizing<R = void, P0 = boolean>(_v: P0): R;
    columnResizingType<R = number>(): R;
    setColumnResizingType<R = void, P0 = number>(_v: P0): R;
    titleHeight<R = number>(): R;
    loaded<R = boolean>(): R;
    selectedCells<R = NSArray>(): R;
    selectedCell<R = unknown>(): R;
    selectedColumn<R = number>(): R;
    clickedRow<R = number>(): R;
    clickedColumn<R = number>(): R;
    lastColumn<R = number>(): R;
    setLastColumn<R = void, P0 = number>(_v: P0): R;
    lastVisibleColumn<R = number>(): R;
    firstVisibleColumn<R = number>(): R;
    maxVisibleColumns<R = number>(): R;
    setMaxVisibleColumns<R = void, P0 = number>(_v: P0): R;
    minColumnWidth<R = number>(): R;
    setMinColumnWidth<R = void, P0 = number>(_v: P0): R;
    takesTitleFromPreviousColumn<R = boolean>(): R;
    setTakesTitleFromPreviousColumn<R = void, P0 = boolean>(_v: P0): R;
    pathSeparator<R = NSString>(): R;
    setPathSeparator<R = void, P0 = NSString>(_v: P0): R;
    selectionIndexPaths<R = NSArray>(): R;
    setSelectionIndexPaths<R = void, P0 = NSArray>(_v: P0): R;
    selectionIndexPath<R = NSIndexPath>(): R;
    setSelectionIndexPath<R = void, P0 = NSIndexPath>(_v: P0): R;
    titled<R = boolean>(): R;
    setTitled<R = void, P0 = boolean>(_v: P0): R;
    sendsActionOnArrowKeys<R = boolean>(): R;
    setSendsActionOnArrowKeys<R = void, P0 = boolean>(_v: P0): R;
    separatesColumns<R = boolean>(): R;
    setSeparatesColumns<R = void, P0 = boolean>(_v: P0): R;
    autohidesScroller<R = boolean>(): R;
    setAutohidesScroller<R = void, P0 = boolean>(_v: P0): R;
    hasHorizontalScroller<R = boolean>(): R;
    setHasHorizontalScroller<R = void, P0 = boolean>(_v: P0): R;
    reusesColumns<R = boolean>(): R;
    setReusesColumns<R = void, P0 = boolean>(_v: P0): R;
    backgroundColor<R = NSColor>(): R;
    setBackgroundColor<R = void, P0 = NSColor>(_v: P0): R;
    allowsTypeSelect<R = boolean>(): R;
    setAllowsTypeSelect<R = void, P0 = boolean>(_v: P0): R;
    allowsEmptySelection<R = boolean>(): R;
    setAllowsEmptySelection<R = void, P0 = boolean>(_v: P0): R;
    allowsBranchSelection<R = boolean>(): R;
    setAllowsBranchSelection<R = void, P0 = boolean>(_v: P0): R;
    allowsMultipleSelection<R = boolean>(): R;
    setAllowsMultipleSelection<R = void, P0 = boolean>(_v: P0): R;
    delegate<R = NSBrowserDelegate>(): R;
    setDelegate<R = void, P0 = NSBrowserDelegate>(_v: P0): R;
    cellPrototype<R = unknown>(): R;
    setCellPrototype<R = void, P0 = unknown>(_v: P0): R;
    doubleAction<R = string>(): R;
    setDoubleAction<R = void, P0 = string>(_v: P0): R;
    numberOfVisibleColumns<R = number>(): R;
  }
  namespace classes {
    export interface NSBrowser<T = any> extends NSControl {
      alloc<R = NSBrowser>(): R;
      new: <R = NSBrowser>() => R;
      removeSavedColumnsWithAutosaveName<R = void, P0 = unknown>(_removeSavedColumnsWithAutosaveName: P0): R;
      browserTableColumnClass<R = unknown>(): R;
      browserTableViewClass<R = unknown>(): R;
      matrixColumnViewControllerClass<R = unknown>(): R;
      tableColumnViewControllerClass<R = unknown>(): R;
      previewColumnViewControllerClass<R = unknown>(): R;
      browserColumnViewClass<R = unknown>(): R;
    }
  }
}

declare const NSBrowser: cocoa.classes.NSBrowser;
