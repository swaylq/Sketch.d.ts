/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSBinder<T0 = void, T1 = void, T2 = void> extends NSObject, NSCodingProtocol {
    _markAutoCreated<R = void, P0 = boolean>(__markAutoCreated: P0): R;
    _isAutoCreated<R = boolean>(): R;
    description<R = unknown>(): R;
    _logError_fallbackMessage_relatedToBinding<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__logError: P0, _fallbackMessage: P1, _relatedToBinding: P2): R;
    _presentModalAlertWithError_responder_relatedToBinding<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__presentModalAlertWithError: P0, _responder: P1, _relatedToBinding: P2): R;
    observeValueForKeyPath_ofObject_change_context<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = void>(_observeValueForKeyPath: P0, _ofObject: P1, _change: P2, _context: P3): R;
    _observeValueForKeyPath_ofObject_context<R = void, P0 = unknown, P1 = unknown, P2 = void>(__observeValueForKeyPath: P0, _ofObject: P1, _context: P2): R;
    isEditing<R = boolean>(): R;
    commitEditingAndReturnError<R = boolean, P0 = unknown>(_commitEditingAndReturnError: P0): R;
    commitEditingWithDelegate_didCommitSelector_contextInfo<R = void, P0 = unknown, P1 = string, P2 = void>(_commitEditingWithDelegate: P0, _didCommitSelector: P1, _contextInfo: P2): R;
    commitEditing<R = boolean>(): R;
    discardEditing<R = void>(): R;
    invokeSelector_withArguments_forBinding_atIndex_error<R = boolean, P0 = string, P1 = unknown, P2 = unknown, P3 = number, P4 = unknown>(_invokeSelector: P0, _withArguments: P1, _forBinding: P2, _atIndex: P3, _error: P4): R;
    setValue_forBinding_atIndex_error<R = boolean, P0 = unknown, P1 = unknown, P2 = number, P3 = unknown>(_setValue: P0, _forBinding: P1, _atIndex: P2, _error: P3): R;
    mutableSetValueForBinding_atIndex_resolveMarkersToPlaceholders<R = unknown, P0 = unknown, P1 = number, P2 = boolean>(_mutableSetValueForBinding: P0, _atIndex: P1, _resolveMarkersToPlaceholders: P2): R;
    mutableArrayValueForBinding_atIndex_resolveMarkersToPlaceholders<R = unknown, P0 = unknown, P1 = number, P2 = boolean>(_mutableArrayValueForBinding: P0, _atIndex: P1, _resolveMarkersToPlaceholders: P2): R;
    valueForBinding_atIndex_resolveMarkersToPlaceholders<R = unknown, P0 = unknown, P1 = number, P2 = boolean>(_valueForBinding: P0, _atIndex: P1, _resolveMarkersToPlaceholders: P2): R;
    valueForBinding_atIndexPath_resolveMarkersToPlaceholders<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(_valueForBinding: P0, _atIndexPath: P1, _resolveMarkersToPlaceholders: P2): R;
    setValue_forBinding_atIndexPath_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(_setValue: P0, _forBinding: P1, _atIndexPath: P2, _error: P3): R;
    invokeSelector_withArguments_forBinding_atIndexPath_error<R = boolean, P0 = string, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown>(_invokeSelector: P0, _withArguments: P1, _forBinding: P2, _atIndexPath: P3, _error: P4): R;
    invokeSelector_withArguments_forBinding_error<R = boolean, P0 = string, P1 = unknown, P2 = unknown, P3 = unknown>(_invokeSelector: P0, _withArguments: P1, _forBinding: P2, _error: P3): R;
    setValue_forBinding_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(_setValue: P0, _forBinding: P1, _error: P2): R;
    mutableSetValueForBinding_resolveMarkersToPlaceholders<R = unknown, P0 = unknown, P1 = boolean>(_mutableSetValueForBinding: P0, _resolveMarkersToPlaceholders: P1): R;
    mutableArrayValueForBinding_resolveMarkersToPlaceholders<R = unknown, P0 = unknown, P1 = boolean>(_mutableArrayValueForBinding: P0, _resolveMarkersToPlaceholders: P1): R;
    valueForBinding_resolveMarkersToPlaceholders<R = unknown, P0 = unknown, P1 = boolean>(_valueForBinding: P0, _resolveMarkersToPlaceholders: P1): R;
    resolveMarkerToPlaceholder_binding<R = unknown, P0 = unknown, P1 = unknown>(_resolveMarkerToPlaceholder: P0, _binding: P1): R;
    applyValueTransformerToValue_forBinding_reverse<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(_applyValueTransformerToValue: P0, _forBinding: P1, _reverse: P2): R;
    _invokeSelector_withArguments_onKeyPath_ofObject_mode_raisesForNotApplicableKeys<R = void, P0 = string, P1 = unknown, P2 = unknown, P3 = unknown, P4 = __NSKeyValueCodingControllerModeType, P5 = boolean>(__invokeSelector: P0, _withArguments: P1, _onKeyPath: P2, _ofObject: P3, _mode: P4, _raisesForNotApplicableKeys: P5): R;
    _setValue_forKeyPath_ofObject_mode_validateImmediately_raisesForNotApplicableKeys_error<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown, P3 = __NSKeyValueCodingControllerModeType, P4 = boolean, P5 = boolean, P6 = unknown>(__setValue: P0, _forKeyPath: P1, _ofObject: P2, _mode: P3, _validateImmediately: P4, _raisesForNotApplicableKeys: P5, _error: P6): R;
    _mutableSetValueForKeyPath_ofObject_atIndex_raisesForNotApplicableKeys<R = unknown, P0 = unknown, P1 = unknown, P2 = number, P3 = boolean>(__mutableSetValueForKeyPath: P0, _ofObject: P1, _atIndex: P2, _raisesForNotApplicableKeys: P3): R;
    _mutableArrayValueForKeyPath_ofObject_atIndex_raisesForNotApplicableKeys<R = unknown, P0 = unknown, P1 = unknown, P2 = number, P3 = boolean>(__mutableArrayValueForKeyPath: P0, _ofObject: P1, _atIndex: P2, _raisesForNotApplicableKeys: P3): R;
    _valueForKeyPath_ofObject_mode_raisesForNotApplicableKeys<R = unknown, P0 = unknown, P1 = unknown, P2 = __NSKeyValueCodingControllerModeType, P3 = boolean>(__valueForKeyPath: P0, _ofObject: P1, _mode: P2, _raisesForNotApplicableKeys: P3): R;
    _resolveMarkerToPlaceholder_forBindingInfo_allowPluginOverride<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(__resolveMarkerToPlaceholder: P0, _forBindingInfo: P1, _allowPluginOverride: P2): R;
    _applyValueTransformerToValue_forBindingInfo_reverse<R = unknown, P0 = unknown, P1 = unknown, P2 = boolean>(__applyValueTransformerToValue: P0, _forBindingInfo: P1, _reverse: P2): R;
    _prepareIndirectKeyValueCodingCallWithPartialControllerKey_controller<R = void, P0 = unknown, P1 = unknown>(__prepareIndirectKeyValueCodingCallWithPartialControllerKey: P0, _controller: P1): R;
    isConnected<R = boolean>(): R;
    releaseConnectionWithSynchronizePeerBinders<R = void, P0 = boolean>(_releaseConnectionWithSynchronizePeerBinders: P0): R;
    breakConnection<R = void>(): R;
    _cleanUpConnectionWithSynchronizePeerBinders<R = void, P0 = boolean>(__cleanUpConnectionWithSynchronizePeerBinders: P0): R;
    _connectionWasBroken<R = void>(): R;
    establishConnection<R = void>(): R;
    _handleObservingRefresh<R = boolean>(): R;
    _connectionWasEstablished<R = void>(): R;
    deprecatedBindings<R = unknown>(): R;
    _performConnectionEstablishedRefresh<R = void>(): R;
    _observationProcessingEnabled<R = boolean>(): R;
    shouldProcessObservations<R = boolean>(): R;
    _resumeObservationNotificationProcessing<R = void>(): R;
    _suspendObservationNotificationProcessing<R = void>(): R;
    _updateDependenciesWithPeerBinders<R = void, P0 = unknown>(__updateDependenciesWithPeerBinders: P0): R;
    _synchronizeWithPeerBindersInArray<R = void, P0 = unknown>(__synchronizeWithPeerBindersInArray: P0): R;
    _clearDependenciesWithAllPeerBinders<R = void>(): R;
    _referenceBinderController<R = unknown>(): R;
    _referenceBinding<R = unknown>(): R;
    _updateObservingRegistration<R = void, P0 = boolean>(__updateObservingRegistration: P0): R;
    _observeKeyPathForBindingInfo_registerOrUnregister<R = boolean, P0 = unknown, P1 = boolean>(__observeKeyPathForBindingInfo: P0, _registerOrUnregister: P1): R;
    _observeKeyPathForRelatedBinder_registerOrUnregister<R = boolean, P0 = unknown, P1 = boolean>(__observeKeyPathForRelatedBinder: P0, _registerOrUnregister: P1): R;
    _isKeyPathBound<R = boolean, P0 = unknown>(__isKeyPathBound: P0): R;
    _isAnyBindingInMaskBound<R = boolean, P0 = number>(__isAnyBindingInMaskBound: P0): R;
    _isBindingEstablished<R = boolean, P0 = unknown>(__isBindingEstablished: P0): R;
    alwaysPresentsApplicationModalAlertsWithBinding<R = boolean, P0 = unknown>(_alwaysPresentsApplicationModalAlertsWithBinding: P0): R;
    setAlwaysPresentsApplicationModalAlerts_withBinding<R = void, P0 = boolean, P1 = unknown>(_setAlwaysPresentsApplicationModalAlerts: P0, _withBinding: P1): R;
    validatesImmediatelyWithBinding<R = boolean, P0 = unknown>(_validatesImmediatelyWithBinding: P0): R;
    setValidatesImmediately_withBinding<R = void, P0 = boolean, P1 = unknown>(_setValidatesImmediately: P0, _withBinding: P1): R;
    raisesForNotApplicableKeysWithBinding<R = boolean, P0 = unknown>(_raisesForNotApplicableKeysWithBinding: P0): R;
    setRaisesForNotApplicableKeys_withBinding<R = void, P0 = boolean, P1 = unknown>(_setRaisesForNotApplicableKeys: P0, _withBinding: P1): R;
    placeholderForMarker_withBinding<R = unknown, P0 = unknown, P1 = unknown>(_placeholderForMarker: P0, _withBinding: P1): R;
    setPlaceholder_forMarker_withBinding<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(_setPlaceholder: P0, _forMarker: P1, _withBinding: P2): R;
    _setController_forBinding<R = void, P0 = unknown, P1 = unknown>(__setController: P0, _forBinding: P1): R;
    _valueTransformerNameForBinding<R = unknown, P0 = unknown>(__valueTransformerNameForBinding: P0): R;
    valueTransformerForBinding<R = unknown, P0 = unknown>(_valueTransformerForBinding: P0): R;
    keyPathForBinding<R = unknown, P0 = unknown>(_keyPathForBinding: P0): R;
    controllerForBinding<R = unknown, P0 = unknown>(_controllerForBinding: P0): R;
    _bindingInfos<R = unknown>(): R;
    removeBinding<R = void, P0 = unknown>(_removeBinding: P0): R;
    _removeBinding_byReplacingWithRemainingBindingsInArray<R = void, P0 = unknown, P1 = unknown>(__removeBinding: P0, _byReplacingWithRemainingBindingsInArray: P1): R;
    _removeBinding<R = void, P0 = unknown>(__removeBinding: P0): R;
    _bindingInfoForBinding<R = unknown, P0 = unknown>(__bindingInfoForBinding: P0): R;
    _bindingInfoIndexForBinding<R = number, P0 = unknown>(__bindingInfoIndexForBinding: P0): R;
    addBinding_toController_withKeyPath_valueTransformer_options<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown>(_addBinding: P0, _toController: P1, _withKeyPath: P2, _valueTransformer: P3, _options: P4): R;
    _addBinding_toController_withKeyPath_valueTransformerName_options<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown>(__addBinding: P0, _toController: P1, _withKeyPath: P2, _valueTransformerName: P3, _options: P4): R;
    canApplyValueTransformer_toBinding<R = boolean, P0 = unknown, P1 = unknown>(_canApplyValueTransformer: P0, _toBinding: P1): R;
    _isBooleanBinding<R = boolean, P0 = unknown>(__isBooleanBinding: P0): R;
    valueClassForBinding<R = unknown, P0 = unknown>(_valueClassForBinding: P0): R;
    bindingRunsAlerts<R = boolean, P0 = unknown>(_bindingRunsAlerts: P0): R;
    isBindingReadOnly<R = boolean, P0 = unknown>(_isBindingReadOnly: P0): R;
    canAddBinding_toController<R = boolean, P0 = unknown, P1 = unknown>(_canAddBinding: P0, _toController: P1): R;
    _optionsForBinding_specifyOnlyIfDifferentFromDefault<R = unknown, P0 = unknown, P1 = boolean>(__optionsForBinding: P0, _specifyOnlyIfDifferentFromDefault: P1): R;
    _setOptions_forBinding<R = void, P0 = unknown, P1 = unknown>(__setOptions: P0, _forBinding: P1): R;
    _setOptions_withBindingInfo<R = void, P0 = unknown, P1 = unknown>(__setOptions: P0, _withBindingInfo: P1): R;
    _setParameter_forOption_withBindingInfo<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__setParameter: P0, _forOption: P1, _withBindingInfo: P2): R;
    _testBinderConfiguration_repairBindings<R = boolean, P0 = unknown, P1 = boolean>(__testBinderConfiguration: P0, _repairBindings: P1): R;
    availableBindings<R = unknown>(): R;
    _plugin<R = unknown>(): R;
    _bindingAdaptorMethodsNeededMask<R = number>(): R;
    object<R = unknown>(): R;
    _setObject<R = void, P0 = unknown>(__setObject: P0): R;
    dealloc<R = void>(): R;
    _dealloc<R = void>(): R;
    _updatePlaceholdersForBindingInfo<R = void, P0 = unknown>(__updatePlaceholdersForBindingInfo: P0): R;
    copyToObject<R = unknown, P0 = unknown>(_copyToObject: P0): R;
    _copyDetailsFromBinder<R = void, P0 = unknown>(__copyDetailsFromBinder: P0): R;
    initWithObject<R = unknown, P0 = unknown>(_initWithObject: P0): R;
    _initWithObjectNoExceptions<R = unknown, P0 = unknown>(__initWithObjectNoExceptions: P0): R;
    _init<R = void>(): R;
    _noticeEditablePeerBinder<R = void, P0 = unknown>(__noticeEditablePeerBinder: P0): R;
    updateOutlineColumnOutlineCell_forDisplayAtIndexPath<R = void, P0 = unknown, P1 = unknown>(_updateOutlineColumnOutlineCell: P0, _forDisplayAtIndexPath: P1): R;
    updateOutlineColumnDataCell_forDisplayAtIndexPath<R = void, P0 = unknown, P1 = unknown>(_updateOutlineColumnDataCell: P0, _forDisplayAtIndexPath: P1): R;
    supportsTableEditing<R = boolean>(): R;
    updateTableColumnDataCell_forDisplayAtIndex<R = void, P0 = unknown, P1 = number>(_updateTableColumnDataCell: P0, _forDisplayAtIndex: P1): R;
    _noticeTextColorPeerBinder<R = void, P0 = unknown>(__noticeTextColorPeerBinder: P0): R;
  }
  namespace NSBinder {
    export interface CLASS<T0 = void, T1 = void, T2 = void> extends NSObject, NSCodingProtocol {
      alloc<R = NSBinder>(): R;
      new: <R = NSBinder>() => R;
      _autoCreateBinderForObject_withController<R = boolean, P0 = unknown, P1 = unknown>(__autoCreateBinderForObject: P0, _withController: P1): R;
      _deprecatedBindings<R = unknown>(): R;
      binderClassesSuperseded<R = unknown>(): R;
      bindingCategory<R = unknown>(): R;
      objectMechanismsRequiredForObject<R = unknown, P0 = unknown>(_objectMechanismsRequiredForObject: P0): R;
      bindingsForObject<R = unknown, P0 = unknown>(_bindingsForObject: P0): R;
      _enumeratedBindings_storage_number_numberFirstBinding_maxNumber<R = unknown, P0 = unknown, P1 = unknown, P2 = number, P3 = boolean, P4 = number>(__enumeratedBindings: P0, _storage: P1, _number: P2, _numberFirstBinding: P3, _maxNumber: P4): R;
      isUsableWithObject<R = boolean, P0 = unknown>(_isUsableWithObject: P0): R;
      _pluginClassWithObject<R = unknown, P0 = unknown>(__pluginClassWithObject: P0): R;
      _pluginProtocol<R = unknown>(): R;
      binderClassesForObject<R = unknown, P0 = unknown>(_binderClassesForObject: P0): R;
      _allBinderClasses<R = __CFArray>(): R;
      _didPresentModalAlert_contextInfo<R = void, P0 = boolean, P1 = unknown>(__didPresentModalAlert: P0, _contextInfo: P1): R;
      _presentSheetForError_responder_responderCandidate_delegate_callback_callbackContextInfo<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = string, P5 = void>(__presentSheetForError: P0, _responder: P1, _responderCandidate: P2, _delegate: P3, _callback: P4, _callbackContextInfo: P5): R;
      _presentAlertPanelForError_responder_responderCandidate<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__presentAlertPanelForError: P0, _responder: P1, _responderCandidate: P2): R;
      _prepareAlertError_responder_responderCandidate_window_recoveryAttempter<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown>(__prepareAlertError: P0, _responder: P1, _responderCandidate: P2, _window: P3, _recoveryAttempter: P4): R;
      load<R = void>(): R;
    }
  }
}

declare const NSBinder: cocoa.NSBinder.CLASS;
