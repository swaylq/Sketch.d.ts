/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSCell<T = any> extends cocoa.NSObject, cocoa.NSCopyingProtocol, cocoa.NSCodingProtocol, cocoa.NSUserInterfaceItemIdentificationProtocol, cocoa.NSAccessibilityElementProtocol, cocoa.NSAccessibilityProtocol {
    setAccessibilityContentSiblingBelow<R = void, P0 = unknown>(_setAccessibilityContentSiblingBelow: P0): R;
    accessibilityContentSiblingBelow<R = unknown>(): R;
    setAccessibilityContentSiblingAbove<R = void, P0 = unknown>(_setAccessibilityContentSiblingAbove: P0): R;
    accessibilityContentSiblingAbove<R = unknown>(): R;
    setNextContentSibling<R = void, P0 = unknown>(_setNextContentSibling: P0): R;
    accessibilityNextContentSibling<R = unknown>(): R;
    setPreviousContentSibling<R = void, P0 = unknown>(_setPreviousContentSibling: P0): R;
    accessibilityPreviousContentSibling<R = unknown>(): R;
    setAccessibilityFrameInParentSpace<R = void, P0 = cocoa.CGRect>(_setAccessibilityFrameInParentSpace: P0): R;
    accessibilityFrameInParentSpace<R = cocoa.CGRect>(): R;
    setAccessibilityHeaderGroup<R = void, P0 = unknown>(_setAccessibilityHeaderGroup: P0): R;
    accessibilityHeaderGroup<R = unknown>(): R;
    setAccessibilitySections<R = void, P0 = unknown>(_setAccessibilitySections: P0): R;
    accessibilitySections<R = unknown>(): R;
    setAccessibilityMimicNativeView<R = void, P0 = boolean>(_setAccessibilityMimicNativeView: P0): R;
    isAccessibilityMimicNativeView<R = boolean>(): R;
    setAccessibilityFunctionRowTopLevelElements<R = void, P0 = unknown>(_setAccessibilityFunctionRowTopLevelElements: P0): R;
    accessibilityFunctionRowTopLevelElements<R = unknown>(): R;
    setAccessibilityEnhancedUserInterface<R = void, P0 = boolean>(_setAccessibilityEnhancedUserInterface: P0): R;
    isAccessibilityEnhancedUserInterface<R = boolean>(): R;
    _accessibilityLabel<R = unknown>(): R;
    setAccessibilityCustomChoosers<R = void, P0 = unknown>(_setAccessibilityCustomChoosers: P0): R;
    accessibilityCustomChoosers<R = unknown>(): R;
    setAccessibilityAuditIssues<R = void, P0 = unknown>(_setAccessibilityAuditIssues: P0): R;
    accessibilityAuditIssues<R = unknown>(): R;
    accessibilityResultsForSearchPredicate<R = unknown, P0 = unknown>(_accessibilityResultsForSearchPredicate: P0): R;
    textAlignmentPolicy<R = number>(): R;
    _stringDrawingContext<R = unknown>(): R;
    _usesBezeledSelectionStyle<R = boolean>(): R;
    _effectiveBackgroundStyleInView_forSpecifiedStyle_isTemplate<R = number, P0 = unknown, P1 = number, P2 = boolean>(__effectiveBackgroundStyleInView: P0, _forSpecifiedStyle: P1, _isTemplate: P2): R;
    _effectiveBackgroundStyleInView_isTemplate<R = number, P0 = unknown, P1 = boolean>(__effectiveBackgroundStyleInView: P0, _isTemplate: P1): R;
    setFieldEditorTextContainer<R = void, P0 = unknown>(_setFieldEditorTextContainer: P0): R;
    fieldEditorTextContainer<R = unknown>(): R;
    setTitleTextContainer<R = void, P0 = unknown>(_setTitleTextContainer: P0): R;
    titleTextContainer<R = unknown>(): R;
    setStyleEffectConfiguration<R = void, P0 = unknown>(_setStyleEffectConfiguration: P0): R;
    styleEffectConfiguration<R = unknown>(): R;
    _allowsTextTighteningInView<R = boolean, P0 = unknown>(__allowsTextTighteningInView: P0): R;
    _hasAppearanceTextEffectsWithAttributedString<R = boolean, P0 = unknown>(__hasAppearanceTextEffectsWithAttributedString: P0): R;
    setAllowsAppearanceTextEffects<R = void, P0 = boolean>(_setAllowsAppearanceTextEffects: P0): R;
    allowsAppearanceTextEffects<R = boolean>(): R;
    canSmoothFontsInFrame_forLayerBackedView<R = boolean, P0 = cocoa.CGRect, P1 = unknown>(_canSmoothFontsInFrame: P0, _forLayerBackedView: P1): R;
    draggingImageComponentsWithFrame_inView<R = unknown, P0 = cocoa.CGRect, P1 = unknown>(_draggingImageComponentsWithFrame: P0, _inView: P1): R;
    _imageComponentIfNonEmptyImagePortion_rect_key<R = unknown, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(__imageComponentIfNonEmptyImagePortion: P0, _rect: P1, _key: P2): R;
    _drawCellForDragWithFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(__drawCellForDragWithFrame: P0, _inView: P1): R;
    allowsEditingTokens<R = boolean>(): R;
    opaqueRectForTitleBounds<R = cocoa.CGRect, P0 = cocoa.CGRect>(_opaqueRectForTitleBounds: P0): R;
    setUserInterfaceItemIdentifier<R = void, P0 = unknown>(_setUserInterfaceItemIdentifier: P0): R;
    userInterfaceItemIdentifier<R = unknown>(): R;
    wantsNotificationForMarkedText<R = boolean>(): R;
    menuForEvent_inRect_ofView<R = unknown, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(_menuForEvent: P0, _inRect: P1, _ofView: P2): R;
    performClick<R = void, P0 = unknown>(_performClick: P0): R;
    resetCursorRect_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(_resetCursorRect: P0, _inView: P1): R;
    _maybeSwapSystemFontForFont<R = unknown, P0 = unknown>(__maybeSwapSystemFontForFont: P0): R;
    _autoflipUnarchivedProperties<R = void>(): R;
    fieldEditorForView<R = unknown, P0 = unknown>(_fieldEditorForView: P0): R;
    endEditing<R = void, P0 = unknown>(_endEditing: P0): R;
    _validateEditing<R = void, P0 = unknown>(__validateEditing: P0): R;
    selectWithFrame_inView_editor_delegate_start_length<R = void, P0 = cocoa.CGRect, P1 = unknown, P2 = unknown, P3 = unknown, P4 = number, P5 = number>(_selectWithFrame: P0, _inView: P1, _editor: P2, _delegate: P3, _start: P4, _length: P5): R;
    editWithFrame_inView_editor_delegate_event<R = void, P0 = cocoa.CGRect, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown>(_editWithFrame: P0, _inView: P1, _editor: P2, _delegate: P3, _event: P4): R;
    _restartEditingWithTextView<R = void, P0 = unknown>(__restartEditingWithTextView: P0): R;
    _synchronizeTextView<R = void, P0 = unknown>(__synchronizeTextView: P0): R;
    _selectOrEdit_inView_target_editor_event_start_end<R = unknown, P0 = cocoa.CGRect, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = number, P6 = number>(__selectOrEdit: P0, _inView: P1, _target: P2, _editor: P3, _event: P4, _start: P5, _end: P6): R;
    _centerInnerBounds<R = cocoa.CGRect, P0 = cocoa.CGRect>(__centerInnerBounds: P0): R;
    _focusRingFrameForFrame_cellFrame<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = cocoa.CGRect>(__focusRingFrameForFrame: P0, _cellFrame: P1): R;
    keyUp_inRect_ofView<R = boolean, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(_keyUp: P0, _inRect: P1, _ofView: P2): R;
    keyDown_inRect_ofView<R = boolean, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(_keyDown: P0, _inRect: P1, _ofView: P2): R;
    _setAnimationsAllowed<R = void, P0 = boolean>(__setAnimationsAllowed: P0): R;
    trackMouse_inRect_ofView_untilMouseUp<R = boolean, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown, P3 = boolean>(_trackMouse: P0, _inRect: P1, _ofView: P2, _untilMouseUp: P3): R;
    cancelTrackingAt_inView<R = void, P0 = cocoa.CGPoint, P1 = unknown>(_cancelTrackingAt: P0, _inView: P1): R;
    touchCancelledAt_inView<R = void, P0 = cocoa.CGPoint, P1 = unknown>(_touchCancelledAt: P0, _inView: P1): R;
    touchEndedAt_inView<R = void, P0 = cocoa.CGPoint, P1 = unknown>(_touchEndedAt: P0, _inView: P1): R;
    touchMovedFrom_to_inView<R = void, P0 = cocoa.CGPoint, P1 = cocoa.CGPoint, P2 = unknown>(_touchMovedFrom: P0, _to: P1, _inView: P2): R;
    touchBeganAt_inView<R = void, P0 = cocoa.CGPoint, P1 = unknown>(_touchBeganAt: P0, _inView: P1): R;
    _hitTestForTouch_inRect_ofView<R = boolean, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(__hitTestForTouch: P0, _inRect: P1, _ofView: P2): R;
    _setTouchContinuousTimer<R = void, P0 = unknown>(__setTouchContinuousTimer: P0): R;
    _touchContinuousTimer<R = unknown>(): R;
    _setTrackingTouch<R = void, P0 = unknown>(__setTrackingTouch: P0): R;
    _trackingTouch<R = unknown>(): R;
    _MSMessengerTrackMouse_inRect_ofView_untilMouseUp<R = boolean, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown, P3 = boolean>(__MSMessengerTrackMouse: P0, _inRect: P1, _ofView: P2, _untilMouseUp: P3): R;
    _currentEventStage<R = number>(): R;
    _hitTestForTrackMouseEvent_inRect_ofView<R = boolean, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(__hitTestForTrackMouseEvent: P0, _inRect: P1, _ofView: P2): R;
    _suppressMouseUpAction<R = boolean>(): R;
    _usesDefaultContinuousBehavior<R = boolean>(): R;
    _useHitTestInTrackMouse<R = boolean>(): R;
    _vetoMouseDragActionDispatch<R = boolean>(): R;
    _displaySomeWindowsIfNeeded<R = void, P0 = unknown>(__displaySomeWindowsIfNeeded: P0): R;
    _sendActionFrom<R = boolean, P0 = unknown>(__sendActionFrom: P0): R;
    stopTracking_at_inView_mouseIsUp<R = void, P0 = cocoa.CGPoint, P1 = cocoa.CGPoint, P2 = unknown, P3 = boolean>(_stopTracking: P0, _at: P1, _inView: P2, _mouseIsUp: P3): R;
    continueTrackingPeriodicEvent_inView<R = void, P0 = unknown, P1 = unknown>(_continueTrackingPeriodicEvent: P0, _inView: P1): R;
    continueTrackingGesture_inView<R = boolean, P0 = unknown, P1 = unknown>(_continueTrackingGesture: P0, _inView: P1): R;
    continueTracking_at_inView<R = boolean, P0 = cocoa.CGPoint, P1 = cocoa.CGPoint, P2 = unknown>(_continueTracking: P0, _at: P1, _inView: P2): R;
    startTrackingAt_inView<R = boolean, P0 = cocoa.CGPoint, P1 = unknown>(_startTrackingAt: P0, _inView: P1): R;
    getPeriodicDelay_interval<R = void, P0 = number, P1 = number>(_getPeriodicDelay: P0, _interval: P1): R;
    _setMouseDownFlags<R = void, P0 = number>(__setMouseDownFlags: P0): R;
    highlight_withFrame_inView<R = void, P0 = boolean, P1 = cocoa.CGRect, P2 = unknown>(_highlight: P0, _withFrame: P1, _inView: P2): R;
    _shouldSetHighlightToFlag<R = boolean, P0 = boolean>(__shouldSetHighlightToFlag: P0): R;
    _setCurrentlyEditing<R = void, P0 = boolean>(__setCurrentlyEditing: P0): R;
    _drawFocusRingWithFrame<R = void, P0 = cocoa.CGRect>(__drawFocusRingWithFrame: P0): R;
    _backingScaleFactorForDrawingInView<R = number, P0 = unknown>(__backingScaleFactorForDrawingInView: P0): R;
    layoutLayerWithFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(_layoutLayerWithFrame: P0, _inView: P1): R;
    updateLayerWithFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(_updateLayerWithFrame: P0, _inView: P1): R;
    wantsUpdateLayerInView<R = boolean, P0 = unknown>(_wantsUpdateLayerInView: P0): R;
    drawWithFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(_drawWithFrame: P0, _inView: P1): R;
    drawInteriorWithFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(_drawInteriorWithFrame: P0, _inView: P1): R;
    _drawHighlightWithFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(__drawHighlightWithFrame: P0, _inView: P1): R;
    highlightColorWithFrame_inView<R = unknown, P0 = cocoa.CGRect, P1 = unknown>(_highlightColorWithFrame: P0, _inView: P1): R;
    _usingAlternateHighlightColorWithFrame_inView<R = boolean, P0 = cocoa.CGRect, P1 = unknown>(__usingAlternateHighlightColorWithFrame: P0, _inView: P1): R;
    _effectiveStyleEffectConfigurationInView<R = unknown, P0 = unknown>(__effectiveStyleEffectConfigurationInView: P0): R;
    _shouldUseStyledTextInView<R = boolean, P0 = unknown>(__shouldUseStyledTextInView: P0): R;
    _allowsStyledTextForColor<R = boolean, P0 = unknown>(__allowsStyledTextForColor: P0): R;
    _customForegroundColorInTitle<R = boolean, P0 = unknown>(__customForegroundColorInTitle: P0): R;
    _interiorContentValueStateInView<R = number, P0 = unknown>(__interiorContentValueStateInView: P0): R;
    _interiorContentAppearanceInView<R = number, P0 = unknown>(__interiorContentAppearanceInView: P0): R;
    _minimumPressDuration<R = number>(): R;
    _isGuarded<R = boolean>(): R;
    _controlViewDidChangeEffectiveAppearance<R = void, P0 = unknown>(__controlViewDidChangeEffectiveAppearance: P0): R;
    _preferInactiveContentInView<R = boolean, P0 = unknown>(__preferInactiveContentInView: P0): R;
    _preferInactiveBezelArtInView<R = boolean, P0 = unknown>(__preferInactiveBezelArtInView: P0): R;
    _defaultImageHints<R = unknown>(): R;
    _needsHighlightedTextHint<R = boolean>(): R;
    _setNeedsHighlightedTextHint<R = void, P0 = boolean>(__setNeedsHighlightedTextHint: P0): R;
    _characterRangeForPoint_inRect_ofView<R = cocoa._NSRange, P0 = cocoa.CGPoint, P1 = cocoa.CGRect, P2 = unknown>(__characterRangeForPoint: P0, _inRect: P1, _ofView: P2): R;
    _setCachedLineRef<R = void, P0 = unknown>(__setCachedLineRef: P0): R;
    _cachedLineRef<R = unknown>(): R;
    cachesLineRef<R = boolean>(): R;
    _isButtonTitleCell<R = boolean>(): R;
    _endVibrantBlendGroup<R = void>(): R;
    _beginVibrantBlendGroupIfNecessaryForControlView<R = boolean, P0 = unknown>(__beginVibrantBlendGroupIfNecessaryForControlView: P0): R;
    _vibrancyBlendModeForControlView<R = number, P0 = unknown>(__vibrancyBlendModeForControlView: P0): R;
    _coreUIWidgetName<R = cocoa.__CFString>(): R;
    _effectiveCoreUIBackgroundTypeInControlView<R = unknown, P0 = unknown>(__effectiveCoreUIBackgroundTypeInControlView: P0): R;
    customizedBackgroundTypeForControlView<R = cocoa.__CFString, P0 = unknown>(_customizedBackgroundTypeForControlView: P0): R;
    fontDilationStyle<R = number>(): R;
    setUpFieldEditorAttributes<R = unknown, P0 = unknown>(_setUpFieldEditorAttributes: P0): R;
    calcDrawInfo<R = void, P0 = cocoa.CGRect>(_calcDrawInfo: P0): R;
    cellSizeForBounds<R = cocoa.CGSize, P0 = cocoa.CGRect>(_cellSizeForBounds: P0): R;
    textDidChange<R = void, P0 = unknown>(_textDidChange: P0): R;
    textView_shouldChangeTextInRange_replacementString<R = boolean, P0 = unknown, P1 = cocoa._NSRange, P2 = unknown>(_textView: P0, _shouldChangeTextInRange: P1, _replacementString: P2): R;
    _validateEntryString_uiHandled<R = boolean, P0 = unknown, P1 = string>(__validateEntryString: P0, _uiHandled: P1): R;
    _delegateValidation_object_uiHandled<R = boolean, P0 = unknown, P1 = unknown, P2 = string>(__delegateValidation: P0, _object: P1, _uiHandled: P2): R;
    _drawingInRevealover<R = boolean>(): R;
    _setDrawingInRevealover<R = void, P0 = boolean>(__setDrawingInRevealover: P0): R;
    drawWithExpansionFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(_drawWithExpansionFrame: P0, _inView: P1): R;
    expansionFrameWithFrame_inView<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = unknown>(_expansionFrameWithFrame: P0, _inView: P1): R;
    _backgroundColorForFontSmoothing<R = unknown>(): R;
    drawingRectForBounds<R = cocoa.CGRect, P0 = cocoa.CGRect>(_drawingRectForBounds: P0): R;
    titleRectForBounds<R = cocoa.CGRect, P0 = cocoa.CGRect>(_titleRectForBounds: P0): R;
    imageRectForBounds<R = cocoa.CGRect, P0 = cocoa.CGRect>(_imageRectForBounds: P0): R;
    setCellAttribute_to<R = void, P0 = number, P1 = number>(_setCellAttribute: P0, _to: P1): R;
    cellAttribute<R = number, P0 = number>(_cellAttribute: P0): R;
    controlTint<R = number>(): R;
    setControlTint<R = void, P0 = number>(_setControlTint: P0): R;
    _defaultFont<R = unknown>(): R;
    _invalidateFont<R = void>(): R;
    _effectiveFont<R = unknown>(): R;
    takeObjectValueFrom<R = void, P0 = unknown>(_takeObjectValueFrom: P0): R;
    takeStringValueFrom<R = void, P0 = unknown>(_takeStringValueFrom: P0): R;
    takeDoubleValueFrom<R = void, P0 = unknown>(_takeDoubleValueFrom: P0): R;
    takeFloatValueFrom<R = void, P0 = unknown>(_takeFloatValueFrom: P0): R;
    takeIntegerValueFrom<R = void, P0 = unknown>(_takeIntegerValueFrom: P0): R;
    takeIntValueFrom<R = void, P0 = unknown>(_takeIntValueFrom: P0): R;
    _setIntegerValue<R = void, P0 = number>(__setIntegerValue: P0): R;
    _integerValue<R = number>(): R;
    compare<R = number, P0 = unknown>(_compare: P0): R;
    setAllowsDefaultTighteningForTruncation<R = void, P0 = boolean>(_setAllowsDefaultTighteningForTruncation: P0): R;
    allowsDefaultTighteningForTruncation<R = boolean>(): R;
    setImportsGraphics<R = void, P0 = boolean>(_setImportsGraphics: P0): R;
    importsGraphics<R = boolean>(): R;
    setAllowsEditingTextAttributes<R = void, P0 = boolean>(_setAllowsEditingTextAttributes: P0): R;
    allowsEditingTextAttributes<R = boolean>(): R;
    drawFocusRingMaskWithFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(_drawFocusRingMaskWithFrame: P0, _inView: P1): R;
    focusRingMaskBoundsForFrame_inView<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = unknown>(_focusRingMaskBoundsForFrame: P0, _inView: P1): R;
    _effectiveFocusRingType<R = number>(): R;
    focusRingType<R = number>(): R;
    setFocusRingType<R = void, P0 = number>(_setFocusRingType: P0): R;
    showsFirstResponder<R = boolean>(): R;
    setShowsFirstResponder<R = void, P0 = boolean>(_setShowsFirstResponder: P0): R;
    setTitleWithMnemonic<R = void, P0 = unknown>(_setTitleWithMnemonic: P0): R;
    mnemonic<R = unknown>(): R;
    mnemonicLocation<R = number>(): R;
    setMnemonicLocation<R = void, P0 = number>(_setMnemonicLocation: P0): R;
    setAttributedStringValue<R = void, P0 = unknown>(_setAttributedStringValue: P0): R;
    _objectValue_forString<R = boolean, P0 = unknown, P1 = unknown>(__objectValue: P0, _forString: P1): R;
    _objectValue_forString_errorDescription<R = boolean, P0 = unknown, P1 = unknown, P2 = unknown>(__objectValue: P0, _forString: P1, _errorDescription: P2): R;
    _cachedAttributedStringValue<R = unknown>(): R;
    attributedStringValue<R = unknown>(): R;
    _hasAttributedStringValue<R = boolean>(): R;
    _clearAttributedStringCache<R = void>(): R;
    _canCacheAttributedStringValue<R = boolean>(): R;
    _attributedStringValue_invalid<R = unknown, P0 = unknown, P1 = boolean>(__attributedStringValue: P0, _invalid: P1): R;
    _unformattedAttributedStringValue<R = unknown, P0 = unknown>(__unformattedAttributedStringValue: P0): R;
    _stringForEditing<R = unknown>(): R;
    _attributedStringForEditing<R = unknown>(): R;
    _setLineBreakMode<R = void, P0 = number>(__setLineBreakMode: P0): R;
    _lineBreakMode<R = number>(): R;
    _typesetterBehavior<R = number>(): R;
    _setTextAttributeParaStyleNeedsRecalc<R = void>(): R;
    _textAttributes<R = unknown>(): R;
    _textDimsWhenDisabled<R = boolean>(): R;
    _shouldRedrawOnIdenticalObjectValueChanges<R = boolean>(): R;
    _skipsSynchronizationForEditingTextView<R = boolean, P0 = unknown>(__skipsSynchronizationForEditingTextView: P0): R;
    _isEditingTextView<R = boolean, P0 = unknown>(__isEditingTextView: P0): R;
    _clearEditingTextView<R = void, P0 = unknown>(__clearEditingTextView: P0): R;
    _setEditingTextView<R = void, P0 = unknown>(__setEditingTextView: P0): R;
    _setContents<R = void, P0 = unknown>(__setContents: P0): R;
    _formatObjectValue_invalid<R = unknown, P0 = unknown, P1 = boolean>(__formatObjectValue: P0, _invalid: P1): R;
    _contents<R = unknown>(): R;
    _updateInvalidatedObjectValue<R = unknown, P0 = unknown>(__updateInvalidatedObjectValue: P0): R;
    _invalidateObjectValue<R = void>(): R;
    _performKeyEquivalent_conditionally<R = boolean, P0 = unknown, P1 = boolean>(__performKeyEquivalent: P0, _conditionally: P1): R;
    setFloatingPointFormat_left_right<R = void, P0 = boolean, P1 = number, P2 = number>(_setFloatingPointFormat: P0, _left: P1, _right: P2): R;
    isEntryAcceptable<R = boolean, P0 = unknown>(_isEntryAcceptable: P0): R;
    setEntryType<R = void, P0 = number>(_setEntryType: P0): R;
    entryType<R = number>(): R;
    _setVerticallyCentered<R = void, P0 = boolean>(__setVerticallyCentered: P0): R;
    _setHorizontallyCentered<R = void, P0 = boolean>(__setHorizontallyCentered: P0): R;
    _setNeedsStateUpdate<R = void, P0 = unknown>(__setNeedsStateUpdate: P0): R;
    setImageInterpolation<R = void, P0 = number>(_setImageInterpolation: P0): R;
    imageInterpolation<R = number>(): R;
    _cell_isEditable<R = boolean>(): R;
    _setAcceptsFirstResponder<R = void, P0 = boolean>(__setAcceptsFirstResponder: P0): R;
    refusesFirstResponder<R = boolean>(): R;
    setRefusesFirstResponder<R = void, P0 = boolean>(_setRefusesFirstResponder: P0): R;
    _cell_setRefusesFirstResponder<R = void, P0 = boolean>(__cell_setRefusesFirstResponder: P0): R;
    acceptsFirstResponder<R = boolean>(): R;
    sendActionOn<R = number, P0 = number>(_sendActionOn: P0): R;
    _hasTrackingGestureOverride<R = boolean>(): R;
    _setControlView<R = void, P0 = unknown>(__setControlView: P0): R;
    _usesUserKeyEquivalent<R = boolean>(): R;
    _useUserKeyEquivalent<R = unknown>(): R;
    _prefersTrackingWhenDisabled<R = boolean>(): R;
    dealloc<R = void>(): R;
    copy<R = unknown>(): R;
    _failsafeAllocAuxiliaryStorage<R = void>(): R;
    initImageCell<R = unknown, P0 = unknown>(_initImageCell: P0): R;
    initTextCell<R = unknown, P0 = unknown>(_initTextCell: P0): R;
    _commonInit<R = void>(): R;
    _allowsContextMenus<R = boolean>(): R;
    _convertToText<R = void, P0 = unknown>(__convertToText: P0): R;
    setNextState<R = void>(): R;
    mouseExited<R = void, P0 = unknown>(_mouseExited: P0): R;
    mouseEntered<R = void, P0 = unknown>(_mouseEntered: P0): R;
    updateTrackingAreaWithFrame_inView<R = void, P0 = cocoa.CGRect, P1 = unknown>(_updateTrackingAreaWithFrame: P0, _inView: P1): R;
    _viewDidChangeGeometryInWindow<R = void, P0 = unknown>(__viewDidChangeGeometryInWindow: P0): R;
    _clearMouseTracking<R = void>(): R;
    _pressureConfigurationIfNeeded<R = unknown>(): R;
    _setMouseTrackingInRect_ofView<R = void, P0 = cocoa.CGRect, P1 = unknown>(__setMouseTrackingInRect: P0, _ofView: P1): R;
    _setMouseTrackingInRect_ofView_withConfiguration<R = void, P0 = cocoa.CGRect, P1 = unknown, P2 = unknown>(__setMouseTrackingInRect: P0, _ofView: P1, _withConfiguration: P2): R;
    _setMouseTrackingInfo<R = void, P0 = unknown>(__setMouseTrackingInfo: P0): R;
    _mouseTrackingInfo<R = unknown>(): R;
    _isAnimatingDefaultCell<R = boolean>(): R;
    heartBeat<R = void, P0 = unknown>(_heartBeat: P0): R;
    _wantsHeartBeat<R = boolean>(): R;
    _windowChangedKeyStateInView<R = void, P0 = unknown>(__windowChangedKeyStateInView: P0): R;
    _needRedrawOnWindowChangedKeyState<R = boolean>(): R;
    _defaultPlaceholderString<R = unknown>(): R;
    _placeholderAttributedString<R = unknown>(): R;
    _setPlaceholderAttributedString<R = void, P0 = unknown>(__setPlaceholderAttributedString: P0): R;
    _placeholderString<R = unknown>(): R;
    _setPlaceholderString<R = void, P0 = unknown>(__setPlaceholderString: P0): R;
    hitTestForEvent_inRect_ofView<R = number, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(_hitTestForEvent: P0, _inRect: P1, _ofView: P2): R;
    _textHitTest_withFrame_inView<R = number, P0 = cocoa.CGPoint, P1 = cocoa.CGRect, P2 = unknown>(__textHitTest: P0, _withFrame: P1, _inView: P2): R;
    _initialBackgroundStyleCompatibilityGuess<R = number>(): R;
    _externalContextSeemsLikelyToBeRaised<R = boolean>(): R;
    _initialBackgroundStyleCompatibilityGuessIgnoringExternalContext<R = number>(): R;
    deepestAccessibilityDescendants<R = unknown>(): R;
    accessibilityAuditContrast<R = unknown>(): R;
    accessibilityAuditLabel<R = unknown>(): R;
    accessibilityAuditHierarchy<R = unknown>(): R;
    accessibilityAuditParent<R = unknown>(): R;
    accessibilityAuditIssuesAttribute<R = unknown>(): R;
    accessibilitySectionsAttribute<R = unknown>(): R;
    accessibilityVerticalUnitDescriptionAttribute<R = unknown>(): R;
    accessibilityHorizontalUnitDescriptionAttribute<R = unknown>(): R;
    accessibilityShouldSendNotification<R = boolean, P0 = unknown>(_accessibilityShouldSendNotification: P0): R;
    _accessibilityIsTableViewDescendant<R = boolean>(): R;
    accessibilityElementWithParent<R = unknown, P0 = unknown>(_accessibilityElementWithParent: P0): R;
    accessibilityPostNotification<R = void, P0 = unknown>(_accessibilityPostNotification: P0): R;
    accessibilitySupportsOverriddenAttributes<R = boolean>(): R;
    accessibilityShouldUseUniqueId<R = boolean>(): R;
    accessibilityFocusedUIElement<R = unknown>(): R;
    accessibilityHitTest<R = unknown, P0 = cocoa.CGPoint>(_accessibilityHitTest: P0): R;
    accessibilityIsIgnored<R = boolean>(): R;
    _accessibilityShowMenu<R = void, P0 = unknown>(__accessibilityShowMenu: P0): R;
    _accessibilityShowMenu_withProxy<R = void, P0 = unknown, P1 = unknown>(__accessibilityShowMenu: P0, _withProxy: P1): R;
    accessibilityWindowPointForShowMenu<R = cocoa.CGPoint>(): R;
    _accessibilityWindowPointForShowMenuWithProxy<R = cocoa.CGPoint, P0 = unknown>(__accessibilityWindowPointForShowMenuWithProxy: P0): R;
    accessibilityPerformAction<R = void, P0 = unknown>(_accessibilityPerformAction: P0): R;
    accessibilityActionDescription<R = unknown, P0 = unknown>(_accessibilityActionDescription: P0): R;
    accessibilityActionNames<R = unknown>(): R;
    accessibilitySetValue_forAttribute<R = void, P0 = unknown, P1 = unknown>(_accessibilitySetValue: P0, _forAttribute: P1): R;
    accessibilityIsAttributeSettable<R = boolean, P0 = unknown>(_accessibilityIsAttributeSettable: P0): R;
    accessibilityAttributeValue<R = unknown, P0 = unknown>(_accessibilityAttributeValue: P0): R;
    accessibilityIsSizeAttributeSettable<R = boolean>(): R;
    accessibilitySizeAttribute<R = unknown>(): R;
    accessibilityIsPositionAttributeSettable<R = boolean>(): R;
    accessibilityPositionAttribute<R = unknown>(): R;
    accessibilityIsTopLevelUIElementAttributeSettable<R = boolean>(): R;
    accessibilityTopLevelUIElementAttribute<R = unknown>(): R;
    accessibilityIsWindowAttributeSettable<R = boolean>(): R;
    accessibilityWindowAttribute<R = unknown>(): R;
    accessibilityIsParentAttributeSettable<R = boolean>(): R;
    accessibilityParentAttribute<R = unknown>(): R;
    accessibilitySetFocusedAttribute<R = void, P0 = unknown>(_accessibilitySetFocusedAttribute: P0): R;
    accessibilityIsFocusedAttributeSettable<R = boolean>(): R;
    accessibilityFocusedAttribute<R = unknown>(): R;
    accessibilityIsEnabledAttributeSettable<R = boolean>(): R;
    accessibilityEnabledAttribute<R = unknown>(): R;
    accessibilityIsHelpAttributeSettable<R = boolean>(): R;
    accessibilityHelpAttribute<R = unknown>(): R;
    accessibilityIsRoleDescriptionAttributeSettable<R = boolean>(): R;
    accessibilityRoleDescriptionAttribute<R = unknown>(): R;
    accessibilityIsRoleAttributeSettable<R = boolean>(): R;
    accessibilityRoleAttribute<R = unknown>(): R;
    accessibilityAttributeNames<R = unknown>(): R;
    accessibilityStyleRangeForIndexAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityStyleRangeForIndexAttributeForParameter: P0): R;
    accessibilityAttributedStringForRangeAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityAttributedStringForRangeAttributeForParameter: P0): R;
    accessibilityRTFForRangeAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityRTFForRangeAttributeForParameter: P0): R;
    accessibilityBoundsForRangeAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityBoundsForRangeAttributeForParameter: P0): R;
    accessibilityRangeForIndexAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityRangeForIndexAttributeForParameter: P0): R;
    accessibilityRangeForPositionAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityRangeForPositionAttributeForParameter: P0): R;
    accessibilityStringForRangeAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityStringForRangeAttributeForParameter: P0): R;
    accessibilityRangeForLineAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityRangeForLineAttributeForParameter: P0): R;
    accessibilityLineForIndexAttributeForParameter<R = unknown, P0 = unknown>(_accessibilityLineForIndexAttributeForParameter: P0): R;
    accessibilityIsInsertionPointLineNumberAttributeSettable<R = boolean>(): R;
    accessibilityInsertionPointLineNumberAttribute<R = unknown>(): R;
    accessibilitySetVisibleCharacterRangeAttribute<R = void, P0 = unknown>(_accessibilitySetVisibleCharacterRangeAttribute: P0): R;
    accessibilityIsVisibleCharacterRangeAttributeSettable<R = boolean>(): R;
    accessibilityVisibleCharacterRangeAttribute<R = unknown>(): R;
    accessibilityIsNumberOfCharactersAttributeSettable<R = boolean>(): R;
    accessibilityNumberOfCharactersAttribute<R = unknown>(): R;
    accessibilitySetSelectedTextRangeAttribute<R = void, P0 = unknown>(_accessibilitySetSelectedTextRangeAttribute: P0): R;
    accessibilityIsSelectedTextRangeAttributeSettable<R = boolean>(): R;
    accessibilitySelectedTextRangeAttribute<R = unknown>(): R;
    accessibilitySetSelectedTextAttribute<R = void, P0 = unknown>(_accessibilitySetSelectedTextAttribute: P0): R;
    accessibilityIsSelectedTextAttributeSettable<R = boolean>(): R;
    accessibilitySelectedTextAttribute<R = unknown>(): R;
    accessibilitySetValueAttribute<R = void, P0 = unknown>(_accessibilitySetValueAttribute: P0): R;
    accessibilityIsValueAttributeSettable<R = boolean>(): R;
    accessibilityValueAttribute<R = unknown>(): R;
    accessibilityCurrentEditor<R = unknown>(): R;
    _finalizeStyleTextOptions<R = boolean, P0 = unknown>(__finalizeStyleTextOptions: P0): R;
    _updateStyledTextOptions_withContentAppearanceInView<R = boolean, P0 = unknown, P1 = unknown>(__updateStyledTextOptions: P0, _withContentAppearanceInView: P1): R;
    _updateCoreUIOptions_withContentAppearanceInView<R = void, P0 = unknown, P1 = unknown>(__updateCoreUIOptions: P0, _withContentAppearanceInView: P1): R;
    _shouldHighlightCellWhenSelected<R = boolean>(): R;
    drawsBackground<R = boolean>(): R;
    setDrawsBackground<R = void, P0 = boolean>(_setDrawsBackground: P0): R;
    accessibilityZoomButton<R = unknown>(): R;
    setAccessibilityZoomButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityWindows<R = cocoa.NSArray>(): R;
    setAccessibilityWindows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityWindow<R = unknown>(): R;
    setAccessibilityWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityWarningValue<R = unknown>(): R;
    setAccessibilityWarningValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityVisibleRows<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleColumns<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleChildren<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleCharacterRange<R = cocoa._NSRange>(): R;
    setAccessibilityVisibleCharacterRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityVisibleCells<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleCells<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVerticalUnits<R = number>(): R;
    setAccessibilityVerticalUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityVerticalUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityVerticalUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityVerticalScrollBar<R = unknown>(): R;
    setAccessibilityVerticalScrollBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityValueDescription<R = cocoa.NSString>(): R;
    setAccessibilityValueDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityValue<R = unknown>(): R;
    setAccessibilityValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityUnits<R = number>(): R;
    setAccessibilityUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityURL<R = cocoa.NSURL>(): R;
    setAccessibilityURL<R = void, P0 = cocoa.NSURL>(_v: P0): R;
    accessibilityTopLevelUIElement<R = unknown>(): R;
    setAccessibilityTopLevelUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityToolbarButton<R = unknown>(): R;
    setAccessibilityToolbarButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityTitleUIElement<R = unknown>(): R;
    setAccessibilityTitleUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityTitle<R = cocoa.NSString>(): R;
    setAccessibilityTitle<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityTabs<R = cocoa.NSArray>(): R;
    setAccessibilityTabs<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySubrole<R = cocoa.NSString>(): R;
    setAccessibilitySubrole<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilitySplitters<R = cocoa.NSArray>(): R;
    setAccessibilitySplitters<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySortDirection<R = number>(): R;
    setAccessibilitySortDirection<R = void, P0 = number>(_v: P0): R;
    accessibilityFrame<R = cocoa.CGRect>(): R;
    setAccessibilityFrame<R = void, P0 = cocoa.CGRect>(_v: P0): R;
    accessibilityShownMenu<R = unknown>(): R;
    setAccessibilityShownMenu<R = void, P0 = unknown>(_v: P0): R;
    accessibilitySharedTextUIElements<R = cocoa.NSArray>(): R;
    setAccessibilitySharedTextUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySharedFocusElements<R = cocoa.NSArray>(): R;
    setAccessibilitySharedFocusElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySharedCharacterRange<R = cocoa._NSRange>(): R;
    setAccessibilitySharedCharacterRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityServesAsTitleForUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityServesAsTitleForUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedTextRanges<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedTextRanges<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedTextRange<R = cocoa._NSRange>(): R;
    setAccessibilitySelectedTextRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilitySelectedText<R = cocoa.NSString>(): R;
    setAccessibilitySelectedText<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilitySelectedRows<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedColumns<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedChildren<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedCells<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedCells<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelected<R = boolean>(): R;
    setAccessibilitySelected<R = void, P0 = boolean>(_v: P0): R;
    accessibilitySearchMenu<R = unknown>(): R;
    setAccessibilitySearchMenu<R = void, P0 = unknown>(_v: P0): R;
    accessibilitySearchButton<R = unknown>(): R;
    setAccessibilitySearchButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityRows<R = cocoa.NSArray>(): R;
    setAccessibilityRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityRowIndexRange<R = cocoa._NSRange>(): R;
    setAccessibilityRowIndexRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityRowHeaderUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityRowHeaderUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityRowCount<R = number>(): R;
    setAccessibilityRowCount<R = void, P0 = number>(_v: P0): R;
    accessibilityRoleDescription<R = cocoa.NSString>(): R;
    setAccessibilityRoleDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityRole<R = cocoa.NSString>(): R;
    setAccessibilityRole<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityRequired<R = boolean>(): R;
    setAccessibilityRequired<R = void, P0 = boolean>(_v: P0): R;
    accessibilityProxy<R = unknown>(): R;
    setAccessibilityProxy<R = void, P0 = unknown>(_v: P0): R;
    accessibilityPreviousContents<R = cocoa.NSArray>(): R;
    setAccessibilityPreviousContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityPlaceholderValue<R = cocoa.NSString>(): R;
    setAccessibilityPlaceholderValue<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityParent<R = unknown>(): R;
    setAccessibilityParent<R = void, P0 = unknown>(_v: P0): R;
    accessibilityOverflowButton<R = unknown>(): R;
    setAccessibilityOverflowButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityOrientation<R = number>(): R;
    setAccessibilityOrientation<R = void, P0 = number>(_v: P0): R;
    accessibilityOrderedByRow<R = boolean>(): R;
    setAccessibilityOrderedByRow<R = void, P0 = boolean>(_v: P0): R;
    accessibilityNumberOfCharacters<R = number>(): R;
    setAccessibilityNumberOfCharacters<R = void, P0 = number>(_v: P0): R;
    accessibilityNextContents<R = cocoa.NSArray>(): R;
    setAccessibilityNextContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityModal<R = boolean>(): R;
    setAccessibilityModal<R = void, P0 = boolean>(_v: P0): R;
    accessibilityMinimized<R = boolean>(): R;
    setAccessibilityMinimized<R = void, P0 = boolean>(_v: P0): R;
    accessibilityMinimizeButton<R = unknown>(): R;
    setAccessibilityMinimizeButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMinValue<R = unknown>(): R;
    setAccessibilityMinValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMenuBar<R = unknown>(): R;
    setAccessibilityMenuBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMaxValue<R = unknown>(): R;
    setAccessibilityMaxValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMarkerValues<R = unknown>(): R;
    setAccessibilityMarkerValues<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMarkerUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityMarkerUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityMarkerTypeDescription<R = cocoa.NSString>(): R;
    setAccessibilityMarkerTypeDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityRulerMarkerType<R = number>(): R;
    setAccessibilityRulerMarkerType<R = void, P0 = number>(_v: P0): R;
    accessibilityMarkerGroupUIElement<R = unknown>(): R;
    setAccessibilityMarkerGroupUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMainWindow<R = unknown>(): R;
    setAccessibilityMainWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMain<R = boolean>(): R;
    setAccessibilityMain<R = void, P0 = boolean>(_v: P0): R;
    accessibilityLinkedUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityLinkedUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityLabelValue<R = number>(): R;
    setAccessibilityLabelValue<R = void, P0 = number>(_v: P0): R;
    accessibilityLabelUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityLabelUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityInsertionPointLineNumber<R = number>(): R;
    setAccessibilityInsertionPointLineNumber<R = void, P0 = number>(_v: P0): R;
    accessibilityIndex<R = number>(): R;
    setAccessibilityIndex<R = void, P0 = number>(_v: P0): R;
    accessibilityIncrementButton<R = unknown>(): R;
    setAccessibilityIncrementButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityIdentifier<R = cocoa.NSString>(): R;
    setAccessibilityIdentifier<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityHorizontalUnits<R = number>(): R;
    setAccessibilityHorizontalUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityHorizontalUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityHorizontalUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityHorizontalScrollBar<R = unknown>(): R;
    setAccessibilityHorizontalScrollBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityHidden<R = boolean>(): R;
    setAccessibilityHidden<R = void, P0 = boolean>(_v: P0): R;
    accessibilityHelp<R = cocoa.NSString>(): R;
    setAccessibilityHelp<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityHeader<R = unknown>(): R;
    setAccessibilityHeader<R = void, P0 = unknown>(_v: P0): R;
    accessibilityHandles<R = cocoa.NSArray>(): R;
    setAccessibilityHandles<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityGrowArea<R = unknown>(): R;
    setAccessibilityGrowArea<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFullScreenButton<R = unknown>(): R;
    setAccessibilityFullScreenButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFrontmost<R = boolean>(): R;
    setAccessibilityFrontmost<R = void, P0 = boolean>(_v: P0): R;
    accessibilityFocusedWindow<R = unknown>(): R;
    setAccessibilityFocusedWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityApplicationFocusedUIElement<R = unknown>(): R;
    setAccessibilityApplicationFocusedUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFocused<R = boolean>(): R;
    setAccessibilityFocused<R = void, P0 = boolean>(_v: P0): R;
    accessibilityFilename<R = cocoa.NSString>(): R;
    setAccessibilityFilename<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityExtrasMenuBar<R = unknown>(): R;
    setAccessibilityExtrasMenuBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityExpanded<R = boolean>(): R;
    setAccessibilityExpanded<R = void, P0 = boolean>(_v: P0): R;
    accessibilityEnabled<R = boolean>(): R;
    setAccessibilityEnabled<R = void, P0 = boolean>(_v: P0): R;
    accessibilityEdited<R = boolean>(): R;
    setAccessibilityEdited<R = void, P0 = boolean>(_v: P0): R;
    accessibilityDocument<R = cocoa.NSString>(): R;
    setAccessibilityDocument<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityDisclosureLevel<R = number>(): R;
    setAccessibilityDisclosureLevel<R = void, P0 = number>(_v: P0): R;
    accessibilityDisclosed<R = boolean>(): R;
    setAccessibilityDisclosed<R = void, P0 = boolean>(_v: P0): R;
    accessibilityDisclosedRows<R = unknown>(): R;
    setAccessibilityDisclosedRows<R = void, P0 = unknown>(_v: P0): R;
    accessibilityDisclosedByRow<R = unknown>(): R;
    setAccessibilityDisclosedByRow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityLabel<R = cocoa.NSString>(): R;
    setAccessibilityLabel<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityDefaultButton<R = unknown>(): R;
    setAccessibilityDefaultButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityDecrementButton<R = unknown>(): R;
    setAccessibilityDecrementButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityCustomRotors<R = cocoa.NSArray>(): R;
    setAccessibilityCustomRotors<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityCustomActions<R = cocoa.NSArray>(): R;
    setAccessibilityCustomActions<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityCriticalValue<R = unknown>(): R;
    setAccessibilityCriticalValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityContents<R = cocoa.NSArray>(): R;
    setAccessibilityContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityProtectedContent<R = boolean>(): R;
    setAccessibilityProtectedContent<R = void, P0 = boolean>(_v: P0): R;
    accessibilityColumns<R = cocoa.NSArray>(): R;
    setAccessibilityColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityColumnTitles<R = cocoa.NSArray>(): R;
    setAccessibilityColumnTitles<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityColumnIndexRange<R = cocoa._NSRange>(): R;
    setAccessibilityColumnIndexRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityColumnHeaderUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityColumnHeaderUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityColumnCount<R = number>(): R;
    setAccessibilityColumnCount<R = void, P0 = number>(_v: P0): R;
    accessibilityCloseButton<R = unknown>(): R;
    setAccessibilityCloseButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityClearButton<R = unknown>(): R;
    setAccessibilityClearButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityChildrenInNavigationOrder<R = cocoa.NSArray>(): R;
    setAccessibilityChildrenInNavigationOrder<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityChildren<R = cocoa.NSArray>(): R;
    setAccessibilityChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityCancelButton<R = unknown>(): R;
    setAccessibilityCancelButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityAlternateUIVisible<R = boolean>(): R;
    setAccessibilityAlternateUIVisible<R = void, P0 = boolean>(_v: P0): R;
    accessibilityAllowedValues<R = cocoa.NSArray>(): R;
    setAccessibilityAllowedValues<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityActivationPoint<R = cocoa.CGPoint>(): R;
    setAccessibilityActivationPoint<R = void, P0 = cocoa.CGPoint>(_v: P0): R;
    accessibilityElement<R = boolean>(): R;
    setAccessibilityElement<R = void, P0 = boolean>(_v: P0): R;
    identifier<R = cocoa.NSString>(): R;
    setIdentifier<R = void, P0 = cocoa.NSString>(_v: P0): R;
    userInterfaceLayoutDirection<R = number>(): R;
    setUserInterfaceLayoutDirection<R = void, P0 = number>(_v: P0): R;
    baseWritingDirection<R = number>(): R;
    setBaseWritingDirection<R = void, P0 = number>(_v: P0): R;
    sendsActionOnEndEditing<R = boolean>(): R;
    setSendsActionOnEndEditing<R = void, P0 = boolean>(_v: P0): R;
    menu<R = cocoa.NSMenu>(): R;
    setMenu<R = void, P0 = cocoa.NSMenu>(_v: P0): R;
    mouseDownFlags<R = number>(): R;
    cellSize<R = cocoa.CGSize>(): R;
    usesSingleLineMode<R = boolean>(): R;
    setUsesSingleLineMode<R = void, P0 = boolean>(_v: P0): R;
    truncatesLastVisibleLine<R = boolean>(): R;
    setTruncatesLastVisibleLine<R = void, P0 = boolean>(_v: P0): R;
    representedObject<R = unknown>(): R;
    setRepresentedObject<R = void, P0 = unknown>(_v: P0): R;
    formatter<R = cocoa.NSFormatter>(): R;
    setFormatter<R = void, P0 = cocoa.NSFormatter>(_v: P0): R;
    controlSize<R = number>(): R;
    setControlSize<R = void, P0 = number>(_v: P0): R;
    image<R = cocoa.NSImage>(): R;
    setImage<R = void, P0 = cocoa.NSImage>(_v: P0): R;
    font<R = cocoa.NSFont>(): R;
    setFont<R = void, P0 = cocoa.NSFont>(_v: P0): R;
    doubleValue<R = number>(): R;
    setDoubleValue<R = void, P0 = number>(_v: P0): R;
    floatValue<R = number>(): R;
    setFloatValue<R = void, P0 = number>(_v: P0): R;
    integerValue<R = number>(): R;
    setIntegerValue<R = void, P0 = number>(_v: P0): R;
    intValue<R = number>(): R;
    setIntValue<R = void, P0 = number>(_v: P0): R;
    stringValue<R = cocoa.NSString>(): R;
    setStringValue<R = void, P0 = cocoa.NSString>(_v: P0): R;
    allowsUndo<R = boolean>(): R;
    setAllowsUndo<R = void, P0 = boolean>(_v: P0): R;
    lineBreakMode<R = number>(): R;
    setLineBreakMode<R = void, P0 = number>(_v: P0): R;
    hasValidObjectValue<R = boolean>(): R;
    objectValue<R = unknown>(): R;
    setObjectValue<R = void, P0 = unknown>(_v: P0): R;
    keyEquivalent<R = cocoa.NSString>(): R;
    wraps<R = boolean>(): R;
    setWraps<R = void, P0 = boolean>(_v: P0): R;
    alignment<R = number>(): R;
    setAlignment<R = void, P0 = number>(_v: P0): R;
    highlighted<R = boolean>(): R;
    setHighlighted<R = void, P0 = boolean>(_v: P0): R;
    scrollable<R = boolean>(): R;
    setScrollable<R = void, P0 = boolean>(_v: P0): R;
    bezeled<R = boolean>(): R;
    setBezeled<R = void, P0 = boolean>(_v: P0): R;
    bordered<R = boolean>(): R;
    setBordered<R = void, P0 = boolean>(_v: P0): R;
    selectable<R = boolean>(): R;
    setSelectable<R = void, P0 = boolean>(_v: P0): R;
    editable<R = boolean>(): R;
    setEditable<R = void, P0 = boolean>(_v: P0): R;
    continuous<R = boolean>(): R;
    setContinuous<R = void, P0 = boolean>(_v: P0): R;
    enabled<R = boolean>(): R;
    setEnabled<R = void, P0 = boolean>(_v: P0): R;
    opaque<R = boolean>(): R;
    title<R = cocoa.NSString>(): R;
    setTitle<R = void, P0 = cocoa.NSString>(_v: P0): R;
    tag<R = number>(): R;
    setTag<R = void, P0 = number>(_v: P0): R;
    action<R = string>(): R;
    setAction<R = void, P0 = string>(_v: P0): R;
    target<R = unknown>(): R;
    setTarget<R = void, P0 = unknown>(_v: P0): R;
    state<R = number>(): R;
    setState<R = void, P0 = number>(_v: P0): R;
    type<R = number>(): R;
    setType<R = void, P0 = number>(_v: P0): R;
    controlView<R = cocoa.NSView>(): R;
    setControlView<R = void, P0 = cocoa.NSView>(_v: P0): R;
    nextState<R = number>(): R;
    allowsMixedState<R = boolean>(): R;
    setAllowsMixedState<R = void, P0 = boolean>(_v: P0): R;
    interiorBackgroundStyle<R = number>(): R;
    backgroundStyle<R = number>(): R;
    setBackgroundStyle<R = void, P0 = number>(_v: P0): R;
    debugDescription<R = cocoa.NSString>(): R;
    description<R = cocoa.NSString>(): R;
    hash<R = number>(): R;
    superclass<R = unknown>(): R;
    // + NSCell(Chocolat,Inspector):
    inheritedBackgroundStyle<R = number>(): R;
    inspectorFocusRingMaskBoundsForFrame_inView<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = unknown>(_inspectorFocusRingMaskBoundsForFrame: P0, _inView: P1): R;
    drawInspectorFocusRingMaskWithWithPath<R = void, P0 = unknown>(_drawInspectorFocusRingMaskWithWithPath: P0): R;
    drawInspectorTextFieldBackgroundWithPath<R = void, P0 = unknown>(_drawInspectorTextFieldBackgroundWithPath: P0): R;
    drawInspectorButtonPath_accented_highlighted<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(_drawInspectorButtonPath: P0, _accented: P1, _highlighted: P2): R;
    drawInspectorStatelessControlImage_centeredInRect<R = void, P0 = unknown, P1 = cocoa.CGRect>(_drawInspectorStatelessControlImage: P0, _centeredInRect: P1): R;
    drawInspectorButtonImage_centeredInRect_accented_accentsImage<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = boolean, P3 = boolean>(_drawInspectorButtonImage: P0, _centeredInRect: P1, _accented: P2, _accentsImage: P3): R;
    drawInspectorButtonImage_centeredInRect_accented<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = boolean>(_drawInspectorButtonImage: P0, _centeredInRect: P1, _accented: P2): R;
    drawInspectorButtonImage_centeredInRect<R = void, P0 = unknown, P1 = cocoa.CGRect>(_drawInspectorButtonImage: P0, _centeredInRect: P1): R;
    currentInspectorAccentColor<R = unknown>(): R;
    currentInspectorIconColor<R = unknown>(): R;
  }
  namespace classes {
    export interface NSCell<T = any> extends cocoa.classes.NSObject, cocoa.classes.NSCopyingProtocol, cocoa.classes.NSCodingProtocol, cocoa.classes.NSUserInterfaceItemIdentificationProtocol, cocoa.classes.NSAccessibilityElementProtocol, cocoa.classes.NSAccessibilityProtocol {
      alloc<R = NSCell>(): R;
      new: <R = NSCell>() => R;
      defaultMenu<R = unknown>(): R;
      _cuiStyleEffectsKey<R = unknown>(): R;
      _cuiCatalogKey<R = unknown>(): R;
      defaultFocusRingType<R = number>(): R;
      prefersTrackingUntilMouseUp<R = boolean>(): R;
      initialize<R = void>(): R;
      // + NSCell(Chocolat,Inspector):
      drawBaselineAlignedAttributedTitle_forCell_controlView<R = cocoa.CGRect, P0 = unknown, P1 = unknown, P2 = unknown>(_drawBaselineAlignedAttributedTitle: P0, _forCell: P1, _controlView: P2): R;
      drawInspectorButtonImage_centeredInRect_withColor<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(_drawInspectorButtonImage: P0, _centeredInRect: P1, _withColor: P2): R;
      inspectorAccentColorForCellHighlighted<R = unknown, P0 = boolean>(_inspectorAccentColorForCellHighlighted: P0): R;
      inspectorIconColorForCellEnabled_highlighted<R = unknown, P0 = boolean, P1 = boolean>(_inspectorIconColorForCellEnabled: P0, _highlighted: P1): R;
    }
  }
}

declare const NSCell: cocoa.classes.NSCell;
