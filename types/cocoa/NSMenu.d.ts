/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSMenu<T = any> extends cocoa.NSObject, cocoa.NSCopyingProtocol, cocoa.NSCodingProtocol, cocoa.NSUserInterfaceItemIdentificationProtocol, cocoa.NSAccessibilityElementProtocol, cocoa.NSAccessibilityProtocol {
    setUserInterfaceItemIdentifier<R = void, P0 = unknown>(_setUserInterfaceItemIdentifier: P0): R;
    userInterfaceItemIdentifier<R = unknown>(): R;
    _menuItem_didChangeRequiresModifiersToBeVisibleFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeRequiresModifiersToBeVisibleFrom: P1, _to: P2): R;
    _menuItem_didChangeImageSizeFrom_to<R = void, P0 = unknown, P1 = cocoa.CGSize, P2 = cocoa.CGSize>(__menuItem: P0, _didChangeImageSizeFrom: P1, _to: P2): R;
    _menuDidChangeAccessibilityOverriddenAttribute_from_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuDidChangeAccessibilityOverriddenAttribute: P0, _from: P1, _to: P2): R;
    _menuItem_didChangeRespectsKeyEquivalentWhileHiddenFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeRespectsKeyEquivalentWhileHiddenFrom: P1, _to: P2): R;
    _menuItem_didChangeAccessibilityOverriddenAttribute_from_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(__menuItem: P0, _didChangeAccessibilityOverriddenAttribute: P1, _from: P2, _to: P3): R;
    _menuItem_didChangeSeparatorStatusFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeSeparatorStatusFrom: P1, _to: P2): R;
    _menuItem_didChangeHiddenFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeHiddenFrom: P1, _to: P2): R;
    _menuItem_didChangeCustomViewHandlesEventsFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeCustomViewHandlesEventsFrom: P1, _to: P2): R;
    _menuItem_didChangeCustomViewFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeCustomViewFrom: P1, _to: P2): R;
    _menuItem_didChangeTooltipFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeTooltipFrom: P1, _to: P2): R;
    _menuItem_didChangeIndentFrom_to<R = void, P0 = unknown, P1 = number, P2 = number>(__menuItem: P0, _didChangeIndentFrom: P1, _to: P2): R;
    _menuItem_didChangeNextItemIsAlternateFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeNextItemIsAlternateFrom: P1, _to: P2): R;
    _menuItem_didChangeDestructiveFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeDestructiveFrom: P1, _to: P2): R;
    _menuItem_didChangeAlternateFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeAlternateFrom: P1, _to: P2): R;
    _menuItem_didChangeKeyEquivalentModifierMaskFrom_to<R = void, P0 = unknown, P1 = number, P2 = number>(__menuItem: P0, _didChangeKeyEquivalentModifierMaskFrom: P1, _to: P2): R;
    _menuItem_didChangeKeyEquivalentVirtualKeyCodeFrom_to<R = void, P0 = unknown, P1 = number, P2 = number>(__menuItem: P0, _didChangeKeyEquivalentVirtualKeyCodeFrom: P1, _to: P2): R;
    _menuItem_didChangeKeyEquivalentFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeKeyEquivalentFrom: P1, _to: P2): R;
    _menuItem_didChangeImageFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeImageFrom: P1, _to: P2): R;
    _menuItem_didChangeStateImageFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeStateImageFrom: P1, _to: P2): R;
    _menuItem_didChangeActionFrom_to<R = void, P0 = unknown, P1 = string, P2 = string>(__menuItem: P0, _didChangeActionFrom: P1, _to: P2): R;
    _menuItem_didChangeNewItemsCountFrom_to<R = void, P0 = unknown, P1 = number, P2 = number>(__menuItem: P0, _didChangeNewItemsCountFrom: P1, _to: P2): R;
    _menuItem_didChangeFontFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeFontFrom: P1, _to: P2): R;
    _menuItem_didChangeAttributedTitleFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeAttributedTitleFrom: P1, _to: P2): R;
    _menuItem_didChangeTitleFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeTitleFrom: P1, _to: P2): R;
    _menuItem_didChangeSubmenuContentsWithSubmenu<R = void, P0 = unknown, P1 = unknown>(__menuItem: P0, _didChangeSubmenuContentsWithSubmenu: P1): R;
    _menuItem_didChangeSubmenuFrom_to<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__menuItem: P0, _didChangeSubmenuFrom: P1, _to: P2): R;
    _menuItem_didChangeEnabledStateFrom_to<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__menuItem: P0, _didChangeEnabledStateFrom: P1, _to: P2): R;
    _notifySupermenuOfSubmenuChange<R = void>(): R;
    _limitedViewWantsRedisplayForItem_inRect<R = void, P0 = unknown, P1 = cocoa.CGRect>(__limitedViewWantsRedisplayForItem: P0, _inRect: P1): R;
    _contextMenuPluginAEDesc<R = cocoa.AEDesc>(): R;
    _setContextMenuPluginAEDesc<R = void, P0 = cocoa.AEDesc>(__setContextMenuPluginAEDesc: P0): R;
    _sendMenuClosedNotification<R = void, P0 = boolean>(__sendMenuClosedNotification: P0): R;
    _sendMenuOpeningNotification<R = void, P0 = boolean>(__sendMenuOpeningNotification: P0): R;
    _associateStatusItem<R = void, P0 = unknown>(__associateStatusItem: P0): R;
    _boundsIfOpen<R = cocoa.CGRect>(): R;
    _confinementRectForScreen<R = cocoa.CGRect, P0 = unknown>(__confinementRectForScreen: P0): R;
    _unlockMenuPosition<R = void>(): R;
    _lockMenuPosition<R = void>(): R;
    cancelTracking<R = void>(): R;
    cancelTrackingWithoutAnimation<R = void>(): R;
    _cancelTrackingWithFade<R = void, P0 = boolean>(__cancelTrackingWithFade: P0): R;
    highlightItem<R = void, P0 = unknown>(_highlightItem: P0): R;
    _informDelegateOfHighlightedItem<R = void, P0 = unknown>(__informDelegateOfHighlightedItem: P0): R;
    _menuOwnerCanUseMenuWhenModal<R = boolean>(): R;
    _isInMainMenu<R = boolean>(): R;
    _recursivelyNoteChangedIsInMainMenu<R = void, P0 = boolean>(__recursivelyNoteChangedIsInMainMenu: P0): R;
    _recursivelyChangeLayoutDirectionFrom_to<R = void, P0 = number, P1 = number>(__recursivelyChangeLayoutDirectionFrom: P0, _to: P1): R;
    _setMenuOwner<R = void, P0 = unknown>(__setMenuOwner: P0): R;
    _menuOwner<R = unknown>(): R;
    _owningPopUp<R = unknown>(): R;
    _setOwnedByPopUp<R = void, P0 = unknown>(__setOwnedByPopUp: P0): R;
    _ownedByPopUp<R = boolean>(): R;
    _performSidebandUpdatersForRole_withEventRef<R = void, P0 = number, P1 = void>(__performSidebandUpdatersForRole: P0, _withEventRef: P1): R;
    _removeSidebandMenuUpdaterForToken<R = void, P0 = unknown>(__removeSidebandMenuUpdaterForToken: P0): R;
    _addSidebandMenuUpdaterForRoles_token_priority_handler<R = void, P0 = number, P1 = unknown, P2 = number, P3 = cocoa.CDUnknownBlockType>(__addSidebandMenuUpdaterForRoles: P0, _token: P1, _priority: P2, _handler: P3): R;
    _sidebandUpdaterRoles<R = number>(): R;
    _populate<R = void, P0 = boolean>(__populate: P0): R;
    _populateWithEventRef<R = boolean, P0 = void>(__populateWithEventRef: P0): R;
    _populateFromSidebandUpdatersOfSign_withEventRef<R = void, P0 = number, P1 = void>(__populateFromSidebandUpdatersOfSign: P0, _withEventRef: P1): R;
    _populateFromDelegateWithEventRef<R = boolean, P0 = void>(__populateFromDelegateWithEventRef: P0): R;
    _delegateWantsDidFailToOpenCall<R = boolean>(): R;
    _delegateWantsPrepareCall<R = boolean>(): R;
    _delegateWantsConfinementRectCall<R = boolean>(): R;
    _delegateWantsHighlightedCall<R = boolean>(): R;
    _delegateWantsCloseCall<R = boolean>(): R;
    _delegateWantsOpenCall<R = boolean>(): R;
    _delegateWantsPopulateCall<R = boolean>(): R;
    _endHandlingCarbonEvents<R = void, P0 = unknown>(__endHandlingCarbonEvents: P0): R;
    _handleCarbonEvents_count_handler<R = unknown, P0 = cocoa.EventTypeSpec, P1 = number, P2 = cocoa.CDUnknownBlockType>(__handleCarbonEvents: P0, _count: P1, _handler: P2): R;
    _hasPendingCancellationEvent<R = boolean>(): R;
    _layoutDirectionIfExists<R = number>(): R;
    _setHasPadding_onEdge<R = void, P0 = boolean, P1 = number>(__setHasPadding: P0, _onEdge: P1): R;
    _hasPaddingOnEdge<R = boolean, P0 = number>(__hasPaddingOnEdge: P0): R;
    _condensesSeparators<R = boolean>(): R;
    _setCondensesSeparators<R = void, P0 = boolean>(__setCondensesSeparators: P0): R;
    _menuServicesStartingRequestor<R = unknown>(): R;
    _setMenuServicesStartingRequestor<R = void, P0 = unknown>(__setMenuServicesStartingRequestor: P0): R;
    _menuPluginTypes<R = number>(): R;
    _setMenuPluginTypes<R = void, P0 = number>(__setMenuPluginTypes: P0): R;
    _menuPluginInsertionMode<R = number>(): R;
    _setMenuPluginInsertionMode<R = void, P0 = number>(__setMenuPluginInsertionMode: P0): R;
    _setAllowsDifferentInitialPopupSelection<R = void, P0 = boolean>(__setAllowsDifferentInitialPopupSelection: P0): R;
    _allowsDifferentInitialPopupSelection<R = boolean>(): R;
    _backgroundStyle<R = number>(): R;
    _fontOrNilIfDefault<R = unknown>(): R;
    _popUpMenuWithEvent_forView<R = void, P0 = unknown, P1 = unknown>(__popUpMenuWithEvent: P0, _forView: P1): R;
    _updateEnabled<R = void>(): R;
    _isEnabled<R = boolean>(): R;
    _setEnabled<R = void, P0 = boolean>(__setEnabled: P0): R;
    _setIsContextualMenu<R = void, P0 = boolean>(__setIsContextualMenu: P0): R;
    _isContextualMenu<R = boolean>(): R;
    _image_frame_forPopUpMenuPositioningItem_atLocation_inView_appearance<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown, P3 = cocoa.CGPoint, P4 = unknown, P5 = unknown>(__image: P0, _frame: P1, _forPopUpMenuPositioningItem: P2, _atLocation: P3, _inView: P4, _appearance: P5): R;
    popUpMenuPositioningItem_atLocation_inView_appearance<R = boolean, P0 = unknown, P1 = cocoa.CGPoint, P2 = unknown, P3 = unknown>(_popUpMenuPositioningItem: P0, _atLocation: P1, _inView: P2, _appearance: P3): R;
    popUpMenuPositioningItem_atLocation_inView<R = boolean, P0 = unknown, P1 = cocoa.CGPoint, P2 = unknown>(_popUpMenuPositioningItem: P0, _atLocation: P1, _inView: P2): R;
    _popUpContextMenu_withEvent_forView_withFont<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(__popUpContextMenu: P0, _withEvent: P1, _forView: P2, _withFont: P3): R;
    _popUpContextMenu_withEvent_forView<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__popUpContextMenu: P0, _withEvent: P1, _forView: P2): R;
    _servicesMenuItemsAreForContextMenu<R = boolean>(): R;
    _insertItemInSortedOrderWithTitle_action_keyEquivalent<R = unknown, P0 = unknown, P1 = string, P2 = unknown>(__insertItemInSortedOrderWithTitle: P0, _action: P1, _keyEquivalent: P2): R;
    _internalPerformActionForItemAtIndex<R = void, P0 = number>(__internalPerformActionForItemAtIndex: P0): R;
    performActionForItemAtIndex<R = void, P0 = number>(_performActionForItemAtIndex: P0): R;
    locationForSubmenu<R = cocoa.CGPoint, P0 = unknown>(_locationForSubmenu: P0): R;
    sizeToFit<R = void>(): R;
    isAttached<R = boolean>(): R;
    attachedMenu<R = unknown>(): R;
    isTornOff<R = boolean>(): R;
    tearOffMenuRepresentation<R = unknown>(): R;
    setTearOffMenuRepresentation<R = void, P0 = unknown>(_setTearOffMenuRepresentation: P0): R;
    contextMenuRepresentation<R = unknown>(): R;
    _contextMenuImpl<R = unknown>(): R;
    setContextMenuRepresentation<R = void, P0 = unknown>(_setContextMenuRepresentation: P0): R;
    menuRepresentation<R = unknown>(): R;
    _createExtraIvars<R = void>(): R;
    propertiesToUpdate<R = number>(): R;
    _currentMenuUpdateFlags<R = number>(): R;
    _menuImplIfExists<R = unknown>(): R;
    _menuImpl<R = unknown>(): R;
    _createMenuImpl<R = unknown>(): R;
    setMenuRepresentation<R = void, P0 = unknown>(_setMenuRepresentation: P0): R;
    helpRequested<R = void, P0 = unknown>(_helpRequested: P0): R;
    _postItemChangedNotificationButIgnoringItOurselves<R = void, P0 = unknown>(__postItemChangedNotificationButIgnoringItOurselves: P0): R;
    itemChanged<R = void, P0 = unknown>(_itemChanged: P0): R;
    _menuChanged<R = void>(): R;
    menuChangedMessagesEnabled<R = boolean>(): R;
    setMenuChangedMessagesEnabled<R = void, P0 = boolean>(_setMenuChangedMessagesEnabled: P0): R;
    update<R = void>(): R;
    _updateForTracking<R = void>(): R;
    _enableItems<R = void>(): R;
    _enableItem<R = void, P0 = unknown>(__enableItem: P0): R;
    performKeyEquivalent<R = boolean, P0 = unknown>(_performKeyEquivalent: P0): R;
    _setAvoidUsingCache<R = void, P0 = boolean>(__setAvoidUsingCache: P0): R;
    _performActionWithHighlightingForItemAtIndex<R = void, P0 = number>(__performActionWithHighlightingForItemAtIndex: P0): R;
    _performActionWithHighlightingForItemAtIndex_sendAccessibilityNotification<R = void, P0 = number, P1 = boolean>(__performActionWithHighlightingForItemAtIndex: P0, _sendAccessibilityNotification: P1): R;
    _performKeyEquivalentWithDelegate<R = boolean, P0 = unknown>(__performKeyEquivalentWithDelegate: P0): R;
    _setSuppressAutoenabling<R = void, P0 = boolean>(__setSuppressAutoenabling: P0): R;
    itemWithTag<R = unknown, P0 = number>(_itemWithTag: P0): R;
    itemWithTitle<R = unknown, P0 = unknown>(_itemWithTitle: P0): R;
    itemAtIndex<R = unknown, P0 = number>(_itemAtIndex: P0): R;
    _indexOfItemWithPartialTitle<R = number, P0 = unknown>(__indexOfItemWithPartialTitle: P0): R;
    indexOfItemWithTarget_andAction<R = number, P0 = unknown, P1 = string>(_indexOfItemWithTarget: P0, _andAction: P1): R;
    indexOfItemWithSubmenu<R = number, P0 = unknown>(_indexOfItemWithSubmenu: P0): R;
    indexOfItemWithRepresentedObject<R = number, P0 = unknown>(_indexOfItemWithRepresentedObject: P0): R;
    indexOfItemWithTag<R = number, P0 = number>(_indexOfItemWithTag: P0): R;
    indexOfItemWithTitle<R = number, P0 = unknown>(_indexOfItemWithTitle: P0): R;
    indexOfItem<R = number, P0 = unknown>(_indexOfItem: P0): R;
    _itemArray<R = unknown>(): R;
    setSubmenu_forItem<R = void, P0 = unknown, P1 = unknown>(_setSubmenu: P0, _forItem: P1): R;
    removeAllItems<R = void>(): R;
    removeItem<R = void, P0 = unknown>(_removeItem: P0): R;
    removeItemAtIndex<R = void, P0 = number>(_removeItemAtIndex: P0): R;
    addItemWithTitle_action_keyEquivalent<R = unknown, P0 = unknown, P1 = string, P2 = unknown>(_addItemWithTitle: P0, _action: P1, _keyEquivalent: P2): R;
    insertItemWithTitle_action_keyEquivalent_atIndex<R = unknown, P0 = unknown, P1 = string, P2 = unknown, P3 = number>(_insertItemWithTitle: P0, _action: P1, _keyEquivalent: P2, _atIndex: P3): R;
    addItem<R = void, P0 = unknown>(_addItem: P0): R;
    insertItem_atIndex<R = void, P0 = unknown, P1 = number>(_insertItem: P0, _atIndex: P1): R;
    _menuName<R = unknown>(): R;
    _setMenuName<R = void, P0 = unknown>(__setMenuName: P0): R;
    _trackingInfo<R = unknown>(): R;
    _finishedMakingConnections<R = void>(): R;
    dealloc<R = void>(): R;
    initWithTitle<R = unknown, P0 = unknown>(_initWithTitle: P0): R;
    setAccessibilityContentSiblingBelow<R = void, P0 = unknown>(_setAccessibilityContentSiblingBelow: P0): R;
    accessibilityContentSiblingBelow<R = unknown>(): R;
    setAccessibilityContentSiblingAbove<R = void, P0 = unknown>(_setAccessibilityContentSiblingAbove: P0): R;
    accessibilityContentSiblingAbove<R = unknown>(): R;
    setNextContentSibling<R = void, P0 = unknown>(_setNextContentSibling: P0): R;
    accessibilityNextContentSibling<R = unknown>(): R;
    setPreviousContentSibling<R = void, P0 = unknown>(_setPreviousContentSibling: P0): R;
    accessibilityPreviousContentSibling<R = unknown>(): R;
    setAccessibilityFrameInParentSpace<R = void, P0 = cocoa.CGRect>(_setAccessibilityFrameInParentSpace: P0): R;
    accessibilityFrameInParentSpace<R = cocoa.CGRect>(): R;
    setAccessibilityHeaderGroup<R = void, P0 = unknown>(_setAccessibilityHeaderGroup: P0): R;
    accessibilityHeaderGroup<R = unknown>(): R;
    setAccessibilitySections<R = void, P0 = unknown>(_setAccessibilitySections: P0): R;
    accessibilitySections<R = unknown>(): R;
    setAccessibilityMimicNativeView<R = void, P0 = boolean>(_setAccessibilityMimicNativeView: P0): R;
    isAccessibilityMimicNativeView<R = boolean>(): R;
    setAccessibilityFunctionRowTopLevelElements<R = void, P0 = unknown>(_setAccessibilityFunctionRowTopLevelElements: P0): R;
    accessibilityFunctionRowTopLevelElements<R = unknown>(): R;
    setAccessibilityEnhancedUserInterface<R = void, P0 = boolean>(_setAccessibilityEnhancedUserInterface: P0): R;
    isAccessibilityEnhancedUserInterface<R = boolean>(): R;
    _accessibilityLabel<R = unknown>(): R;
    setAccessibilityCustomChoosers<R = void, P0 = unknown>(_setAccessibilityCustomChoosers: P0): R;
    accessibilityCustomChoosers<R = unknown>(): R;
    setAccessibilityAuditIssues<R = void, P0 = unknown>(_setAccessibilityAuditIssues: P0): R;
    accessibilityAuditIssues<R = unknown>(): R;
    accessibilityResultsForSearchPredicate<R = unknown, P0 = unknown>(_accessibilityResultsForSearchPredicate: P0): R;
    presentControllerAsModalWindow<R = void, P0 = unknown>(_presentControllerAsModalWindow: P0): R;
    _setStoryboard<R = void, P0 = unknown>(__setStoryboard: P0): R;
    storyboard<R = unknown>(): R;
    _recursivelyUpdateKeyEquivalents<R = void>(): R;
    _getKeyEquivalentUniquerCreatingIfNecessary<R = unknown, P0 = boolean>(__getKeyEquivalentUniquerCreatingIfNecessary: P0): R;
    _addMenuItemWithTitle_handler<R = void, P0 = unknown, P1 = cocoa.CDUnknownBlockType>(__addMenuItemWithTitle: P0, _handler: P1): R;
    _recursiveItemWithTarget_action_allowNilTarget<R = unknown, P0 = unknown, P1 = string, P2 = boolean>(__recursiveItemWithTarget: P0, _action: P1, _allowNilTarget: P2): R;
    accessibilitySetOverrideValue_forAttribute<R = boolean, P0 = unknown, P1 = unknown>(_accessibilitySetOverrideValue: P0, _forAttribute: P1): R;
    accessibilitySupportsOverriddenAttributes<R = boolean>(): R;
    accessibilityIsIgnored<R = boolean>(): R;
    identifier<R = cocoa.NSString>(): R;
    setIdentifier<R = void, P0 = cocoa.NSString>(_v: P0): R;
    showsStateColumn<R = boolean>(): R;
    setShowsStateColumn<R = void, P0 = boolean>(_v: P0): R;
    highlightedItem<R = cocoa.NSMenuItem>(): R;
    menuBarHeight<R = number>(): R;
    delegate<R = cocoa.NSMenuDelegate>(): R;
    setDelegate<R = void, P0 = cocoa.NSMenuDelegate>(_v: P0): R;
    userInterfaceLayoutDirection<R = number>(): R;
    setUserInterfaceLayoutDirection<R = void, P0 = number>(_v: P0): R;
    _indentationWidth<R = number>(): R;
    set_indentationWidth<R = void, P0 = number>(_v: P0): R;
    _hasNCStyle<R = boolean>(): R;
    set_hasNCStyle<R = void, P0 = boolean>(_v: P0): R;
    allowsContextMenuPlugIns<R = boolean>(): R;
    setAllowsContextMenuPlugIns<R = void, P0 = boolean>(_v: P0): R;
    font<R = cocoa.NSFont>(): R;
    setFont<R = void, P0 = cocoa.NSFont>(_v: P0): R;
    size<R = cocoa.CGSize>(): R;
    minimumWidth<R = number>(): R;
    setMinimumWidth<R = void, P0 = number>(_v: P0): R;
    autoenablesItems<R = boolean>(): R;
    setAutoenablesItems<R = void, P0 = boolean>(_v: P0): R;
    numberOfItems<R = number>(): R;
    itemArray<R = cocoa.NSArray>(): R;
    setItemArray<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    supermenu<R = cocoa.NSMenu>(): R;
    setSupermenu<R = void, P0 = cocoa.NSMenu>(_v: P0): R;
    title<R = cocoa.NSString>(): R;
    setTitle<R = void, P0 = cocoa.NSString>(_v: P0): R;
    description<R = cocoa.NSString>(): R;
    accessibilityZoomButton<R = unknown>(): R;
    setAccessibilityZoomButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityWindows<R = cocoa.NSArray>(): R;
    setAccessibilityWindows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityWindow<R = unknown>(): R;
    setAccessibilityWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityWarningValue<R = unknown>(): R;
    setAccessibilityWarningValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityVisibleRows<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleColumns<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleChildren<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleCharacterRange<R = cocoa._NSRange>(): R;
    setAccessibilityVisibleCharacterRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityVisibleCells<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleCells<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVerticalUnits<R = number>(): R;
    setAccessibilityVerticalUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityVerticalUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityVerticalUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityVerticalScrollBar<R = unknown>(): R;
    setAccessibilityVerticalScrollBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityValueDescription<R = cocoa.NSString>(): R;
    setAccessibilityValueDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityValue<R = unknown>(): R;
    setAccessibilityValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityUnits<R = number>(): R;
    setAccessibilityUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityURL<R = cocoa.NSURL>(): R;
    setAccessibilityURL<R = void, P0 = cocoa.NSURL>(_v: P0): R;
    accessibilityTopLevelUIElement<R = unknown>(): R;
    setAccessibilityTopLevelUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityToolbarButton<R = unknown>(): R;
    setAccessibilityToolbarButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityTitleUIElement<R = unknown>(): R;
    setAccessibilityTitleUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityTitle<R = cocoa.NSString>(): R;
    setAccessibilityTitle<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityTabs<R = cocoa.NSArray>(): R;
    setAccessibilityTabs<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySubrole<R = cocoa.NSString>(): R;
    setAccessibilitySubrole<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilitySplitters<R = cocoa.NSArray>(): R;
    setAccessibilitySplitters<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySortDirection<R = number>(): R;
    setAccessibilitySortDirection<R = void, P0 = number>(_v: P0): R;
    accessibilityFrame<R = cocoa.CGRect>(): R;
    setAccessibilityFrame<R = void, P0 = cocoa.CGRect>(_v: P0): R;
    accessibilityShownMenu<R = unknown>(): R;
    setAccessibilityShownMenu<R = void, P0 = unknown>(_v: P0): R;
    accessibilitySharedTextUIElements<R = cocoa.NSArray>(): R;
    setAccessibilitySharedTextUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySharedFocusElements<R = cocoa.NSArray>(): R;
    setAccessibilitySharedFocusElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySharedCharacterRange<R = cocoa._NSRange>(): R;
    setAccessibilitySharedCharacterRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityServesAsTitleForUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityServesAsTitleForUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedTextRanges<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedTextRanges<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedTextRange<R = cocoa._NSRange>(): R;
    setAccessibilitySelectedTextRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilitySelectedText<R = cocoa.NSString>(): R;
    setAccessibilitySelectedText<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilitySelectedRows<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedColumns<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedChildren<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedCells<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedCells<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelected<R = boolean>(): R;
    setAccessibilitySelected<R = void, P0 = boolean>(_v: P0): R;
    accessibilitySearchMenu<R = unknown>(): R;
    setAccessibilitySearchMenu<R = void, P0 = unknown>(_v: P0): R;
    accessibilitySearchButton<R = unknown>(): R;
    setAccessibilitySearchButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityRows<R = cocoa.NSArray>(): R;
    setAccessibilityRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityRowIndexRange<R = cocoa._NSRange>(): R;
    setAccessibilityRowIndexRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityRowHeaderUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityRowHeaderUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityRowCount<R = number>(): R;
    setAccessibilityRowCount<R = void, P0 = number>(_v: P0): R;
    accessibilityRoleDescription<R = cocoa.NSString>(): R;
    setAccessibilityRoleDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityRole<R = cocoa.NSString>(): R;
    setAccessibilityRole<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityRequired<R = boolean>(): R;
    setAccessibilityRequired<R = void, P0 = boolean>(_v: P0): R;
    accessibilityProxy<R = unknown>(): R;
    setAccessibilityProxy<R = void, P0 = unknown>(_v: P0): R;
    accessibilityPreviousContents<R = cocoa.NSArray>(): R;
    setAccessibilityPreviousContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityPlaceholderValue<R = cocoa.NSString>(): R;
    setAccessibilityPlaceholderValue<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityParent<R = unknown>(): R;
    setAccessibilityParent<R = void, P0 = unknown>(_v: P0): R;
    accessibilityOverflowButton<R = unknown>(): R;
    setAccessibilityOverflowButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityOrientation<R = number>(): R;
    setAccessibilityOrientation<R = void, P0 = number>(_v: P0): R;
    accessibilityOrderedByRow<R = boolean>(): R;
    setAccessibilityOrderedByRow<R = void, P0 = boolean>(_v: P0): R;
    accessibilityNumberOfCharacters<R = number>(): R;
    setAccessibilityNumberOfCharacters<R = void, P0 = number>(_v: P0): R;
    accessibilityNextContents<R = cocoa.NSArray>(): R;
    setAccessibilityNextContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityModal<R = boolean>(): R;
    setAccessibilityModal<R = void, P0 = boolean>(_v: P0): R;
    accessibilityMinimized<R = boolean>(): R;
    setAccessibilityMinimized<R = void, P0 = boolean>(_v: P0): R;
    accessibilityMinimizeButton<R = unknown>(): R;
    setAccessibilityMinimizeButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMinValue<R = unknown>(): R;
    setAccessibilityMinValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMenuBar<R = unknown>(): R;
    setAccessibilityMenuBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMaxValue<R = unknown>(): R;
    setAccessibilityMaxValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMarkerValues<R = unknown>(): R;
    setAccessibilityMarkerValues<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMarkerUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityMarkerUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityMarkerTypeDescription<R = cocoa.NSString>(): R;
    setAccessibilityMarkerTypeDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityRulerMarkerType<R = number>(): R;
    setAccessibilityRulerMarkerType<R = void, P0 = number>(_v: P0): R;
    accessibilityMarkerGroupUIElement<R = unknown>(): R;
    setAccessibilityMarkerGroupUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMainWindow<R = unknown>(): R;
    setAccessibilityMainWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMain<R = boolean>(): R;
    setAccessibilityMain<R = void, P0 = boolean>(_v: P0): R;
    accessibilityLinkedUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityLinkedUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityLabelValue<R = number>(): R;
    setAccessibilityLabelValue<R = void, P0 = number>(_v: P0): R;
    accessibilityLabelUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityLabelUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityInsertionPointLineNumber<R = number>(): R;
    setAccessibilityInsertionPointLineNumber<R = void, P0 = number>(_v: P0): R;
    accessibilityIndex<R = number>(): R;
    setAccessibilityIndex<R = void, P0 = number>(_v: P0): R;
    accessibilityIncrementButton<R = unknown>(): R;
    setAccessibilityIncrementButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityIdentifier<R = cocoa.NSString>(): R;
    setAccessibilityIdentifier<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityHorizontalUnits<R = number>(): R;
    setAccessibilityHorizontalUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityHorizontalUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityHorizontalUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityHorizontalScrollBar<R = unknown>(): R;
    setAccessibilityHorizontalScrollBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityHidden<R = boolean>(): R;
    setAccessibilityHidden<R = void, P0 = boolean>(_v: P0): R;
    accessibilityHelp<R = cocoa.NSString>(): R;
    setAccessibilityHelp<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityHeader<R = unknown>(): R;
    setAccessibilityHeader<R = void, P0 = unknown>(_v: P0): R;
    accessibilityHandles<R = cocoa.NSArray>(): R;
    setAccessibilityHandles<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityGrowArea<R = unknown>(): R;
    setAccessibilityGrowArea<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFullScreenButton<R = unknown>(): R;
    setAccessibilityFullScreenButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFrontmost<R = boolean>(): R;
    setAccessibilityFrontmost<R = void, P0 = boolean>(_v: P0): R;
    accessibilityFocusedWindow<R = unknown>(): R;
    setAccessibilityFocusedWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityApplicationFocusedUIElement<R = unknown>(): R;
    setAccessibilityApplicationFocusedUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFocused<R = boolean>(): R;
    setAccessibilityFocused<R = void, P0 = boolean>(_v: P0): R;
    accessibilityFilename<R = cocoa.NSString>(): R;
    setAccessibilityFilename<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityExtrasMenuBar<R = unknown>(): R;
    setAccessibilityExtrasMenuBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityExpanded<R = boolean>(): R;
    setAccessibilityExpanded<R = void, P0 = boolean>(_v: P0): R;
    accessibilityEnabled<R = boolean>(): R;
    setAccessibilityEnabled<R = void, P0 = boolean>(_v: P0): R;
    accessibilityEdited<R = boolean>(): R;
    setAccessibilityEdited<R = void, P0 = boolean>(_v: P0): R;
    accessibilityDocument<R = cocoa.NSString>(): R;
    setAccessibilityDocument<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityDisclosureLevel<R = number>(): R;
    setAccessibilityDisclosureLevel<R = void, P0 = number>(_v: P0): R;
    accessibilityDisclosed<R = boolean>(): R;
    setAccessibilityDisclosed<R = void, P0 = boolean>(_v: P0): R;
    accessibilityDisclosedRows<R = unknown>(): R;
    setAccessibilityDisclosedRows<R = void, P0 = unknown>(_v: P0): R;
    accessibilityDisclosedByRow<R = unknown>(): R;
    setAccessibilityDisclosedByRow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityLabel<R = cocoa.NSString>(): R;
    setAccessibilityLabel<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityDefaultButton<R = unknown>(): R;
    setAccessibilityDefaultButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityDecrementButton<R = unknown>(): R;
    setAccessibilityDecrementButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityCustomRotors<R = cocoa.NSArray>(): R;
    setAccessibilityCustomRotors<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityCustomActions<R = cocoa.NSArray>(): R;
    setAccessibilityCustomActions<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityCriticalValue<R = unknown>(): R;
    setAccessibilityCriticalValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityContents<R = cocoa.NSArray>(): R;
    setAccessibilityContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityProtectedContent<R = boolean>(): R;
    setAccessibilityProtectedContent<R = void, P0 = boolean>(_v: P0): R;
    accessibilityColumns<R = cocoa.NSArray>(): R;
    setAccessibilityColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityColumnTitles<R = cocoa.NSArray>(): R;
    setAccessibilityColumnTitles<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityColumnIndexRange<R = cocoa._NSRange>(): R;
    setAccessibilityColumnIndexRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityColumnHeaderUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityColumnHeaderUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityColumnCount<R = number>(): R;
    setAccessibilityColumnCount<R = void, P0 = number>(_v: P0): R;
    accessibilityCloseButton<R = unknown>(): R;
    setAccessibilityCloseButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityClearButton<R = unknown>(): R;
    setAccessibilityClearButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityChildrenInNavigationOrder<R = cocoa.NSArray>(): R;
    setAccessibilityChildrenInNavigationOrder<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityChildren<R = cocoa.NSArray>(): R;
    setAccessibilityChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityCancelButton<R = unknown>(): R;
    setAccessibilityCancelButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityAlternateUIVisible<R = boolean>(): R;
    setAccessibilityAlternateUIVisible<R = void, P0 = boolean>(_v: P0): R;
    accessibilityAllowedValues<R = cocoa.NSArray>(): R;
    setAccessibilityAllowedValues<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityActivationPoint<R = cocoa.CGPoint>(): R;
    setAccessibilityActivationPoint<R = void, P0 = cocoa.CGPoint>(_v: P0): R;
    accessibilityElement<R = boolean>(): R;
    setAccessibilityElement<R = void, P0 = boolean>(_v: P0): R;
    debugDescription<R = cocoa.NSString>(): R;
    hash<R = number>(): R;
    superclass<R = unknown>(): R;
    // + NSMenu(CHMenuAdditions,MenuItem,NSMenu_Blocks):
    showPopUpMenuForEvent_relativeToRect_ofView_deferred_triggerControlViewActionOnZeroItems<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown, P3 = boolean, P4 = boolean>(_showPopUpMenuForEvent: P0, _relativeToRect: P1, _ofView: P2, _deferred: P3, _triggerControlViewActionOnZeroItems: P4): R;
    showPopUpMenuForEvent_relativeToRect_ofView_deferred<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown, P3 = boolean>(_showPopUpMenuForEvent: P0, _relativeToRect: P1, _ofView: P2, _deferred: P3): R;
    showPopUpMenuForEvent_relativeToRect_ofView<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown>(_showPopUpMenuForEvent: P0, _relativeToRect: P1, _ofView: P2): R;
    replaceMenuItem_withMenuItem_ms<R = void, P0 = unknown, P1 = unknown>(_replaceMenuItem: P0, _withMenuItem_ms: P1): R;
    replaceItemWithAction_withMenuItem_ms<R = unknown, P0 = string, P1 = unknown>(_replaceItemWithAction: P0, _withMenuItem_ms: P1): R;
    addItemsFromArray<R = void, P0 = unknown>(_addItemsFromArray: P0): R;
    insertItemsFromArray_atIndex<R = void, P0 = unknown, P1 = number>(_insertItemsFromArray: P0, _atIndex: P1): R;
    addItemWithTitle_font_target_action<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown, P3 = string>(_addItemWithTitle: P0, _font: P1, _target: P2, _action: P3): R;
    addSmallItemWithTitle_target_action<R = unknown, P0 = unknown, P1 = unknown, P2 = string>(_addSmallItemWithTitle: P0, _target: P1, _action: P2): R;
    addSmallItalicItemWithTitle_target_action<R = unknown, P0 = unknown, P1 = unknown, P2 = string>(_addSmallItalicItemWithTitle: P0, _target: P1, _action: P2): R;
    addItemWithTitle_target_action_image<R = unknown, P0 = unknown, P1 = unknown, P2 = string, P3 = unknown>(_addItemWithTitle: P0, _target: P1, _action: P2, _image: P3): R;
    addItemWithTitle_target_action_imageNamed<R = unknown, P0 = unknown, P1 = unknown, P2 = string, P3 = unknown>(_addItemWithTitle: P0, _target: P1, _action: P2, _imageNamed: P3): R;
    addItemWithTitle_target_action_submenu<R = unknown, P0 = unknown, P1 = unknown, P2 = string, P3 = unknown>(_addItemWithTitle: P0, _target: P1, _action: P2, _submenu: P3): R;
    addItemWithTitle_target_action_representedObject<R = unknown, P0 = unknown, P1 = unknown, P2 = string, P3 = unknown>(_addItemWithTitle: P0, _target: P1, _action: P2, _representedObject: P3): R;
    addItemWithTitle_target_action<R = unknown, P0 = unknown, P1 = unknown, P2 = string>(_addItemWithTitle: P0, _target: P1, _action: P2): R;
    addItemWithTitle_small_target_action<R = unknown, P0 = unknown, P1 = boolean, P2 = unknown, P3 = string>(_addItemWithTitle: P0, _small: P1, _target: P2, _action: P3): R;
    addItemWithTitle_action<R = unknown, P0 = unknown, P1 = string>(_addItemWithTitle: P0, _action: P1): R;
    parentMenuItem_bc<R = unknown>(): R;
    isDarkMode_ms<R = boolean>(): R;
    isInMainMenu<R = boolean>(): R;
  }
  namespace classes {
    export interface NSMenu<T = any> extends cocoa.classes.NSObject, cocoa.classes.NSCopyingProtocol, cocoa.classes.NSCodingProtocol, cocoa.classes.NSUserInterfaceItemIdentificationProtocol, cocoa.classes.NSAccessibilityElementProtocol, cocoa.classes.NSAccessibilityProtocol {
      alloc<R = NSMenu>(): R;
      new: <R = NSMenu>() => R;
      _revealedMenuBarHeight<R = number>(): R;
      _drawHelpResultsSeparatorInRect_withClipRect_flags<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGRect, P2 = number>(__drawHelpResultsSeparatorInRect: P0, _withClipRect: P1, _flags: P2): R;
      _drawOverlayForMenuHelpResultsInRect_withClipRect_flags<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGRect, P2 = number>(__drawOverlayForMenuHelpResultsInRect: P0, _withClipRect: P1, _flags: P2): R;
      menuBarHeight<R = number>(): R;
      _restoreTornOffMenus<R = void>(): R;
      _saveTornOffMenus<R = void>(): R;
      _setHelpMenu<R = void, P0 = unknown>(__setHelpMenu: P0): R;
      _helpMenu<R = unknown>(): R;
      _currentTrackingInfo<R = unknown>(): R;
      _menuBarIsDark<R = boolean>(): R;
      isMenuBarVisible<R = boolean>(): R;
      menuBarVisible<R = boolean>(): R;
      setMenuBarVisible<R = void, P0 = boolean>(_setMenuBarVisible: P0): R;
      _setAppleMenuEnabled<R = void, P0 = boolean>(__setAppleMenuEnabled: P0): R;
      popUpContextMenu_withEvent_forView_withFont<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(_popUpContextMenu: P0, _withEvent: P1, _forView: P2, _withFont: P3): R;
      popUpContextMenu_withEvent_forView<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(_popUpContextMenu: P0, _withEvent: P1, _forView: P2): R;
      _contextMenuTarget<R = unknown>(): R;
      _setContextMenuTarget<R = void, P0 = unknown>(__setContextMenuTarget: P0): R;
      _contextMenuEvent<R = unknown>(): R;
      _setContextMenuEvent<R = void, P0 = unknown>(__setContextMenuEvent: P0): R;
      menuTypeForEvent<R = number, P0 = unknown>(_menuTypeForEvent: P0): R;
      _menusWithName<R = unknown, P0 = unknown>(__menusWithName: P0): R;
      menuZone<R = cocoa._NSZone>(): R;
      setMenuZone<R = void, P0 = cocoa._NSZone>(_setMenuZone: P0): R;
      initialize<R = void>(): R;
      standardImportFromDeviceMenuWithOptions<R = unknown, P0 = number>(_standardImportFromDeviceMenuWithOptions: P0): R;
      _sidecarServicesMenuWithTarget_action_options<R = unknown, P0 = unknown, P1 = string, P2 = number>(__sidecarServicesMenuWithTarget: P0, _action: P1, _options: P2): R;
      _sidecarServicesMenuWithOptions<R = unknown, P0 = number>(__sidecarServicesMenuWithOptions: P0): R;
      _captureKeyEquivalentsWithOptions_inMode_finalEvent_status_additionalEventProcessing<R = unknown, P0 = number, P1 = unknown, P2 = unknown, P3 = number, P4 = cocoa.CDUnknownBlockType>(__captureKeyEquivalentsWithOptions: P0, _inMode: P1, _finalEvent: P2, _status: P3, _additionalEventProcessing: P4): R;
      _captureKeyEquivalentsFromEvent_withOptions<R = unknown, P0 = unknown, P1 = number>(__captureKeyEquivalentsFromEvent: P0, _withOptions: P1): R;
      _validateCaptureKeyEquivalentsFromEvent_withOptions<R = boolean, P0 = unknown, P1 = number>(__validateCaptureKeyEquivalentsFromEvent: P0, _withOptions: P1): R;
      _canUseKeyEquivalentForMenuItem<R = boolean, P0 = unknown>(__canUseKeyEquivalentForMenuItem: P0): R;
      _recursivelyUnregisterMenuItem_forKeyEquivalentUniquingInMenu<R = void, P0 = unknown, P1 = unknown>(__recursivelyUnregisterMenuItem: P0, _forKeyEquivalentUniquingInMenu: P1): R;
      _recursivelyRegisterMenuItem_forKeyEquivalentUniquingInMenu<R = void, P0 = unknown, P1 = unknown>(__recursivelyRegisterMenuItem: P0, _forKeyEquivalentUniquingInMenu: P1): R;
      _recursivelyUnregisterMenuForKeyEquivalentUniquing<R = void, P0 = unknown>(__recursivelyUnregisterMenuForKeyEquivalentUniquing: P0): R;
      _recursivelyRegisterMenuForKeyEquivalentUniquing<R = void, P0 = unknown>(__recursivelyRegisterMenuForKeyEquivalentUniquing: P0): R;
      _unregisterMenuItemForKeyEquivalentUniquing<R = void, P0 = unknown>(__unregisterMenuItemForKeyEquivalentUniquing: P0): R;
      _registerMenuItemForKeyEquivalentUniquing<R = void, P0 = unknown>(__registerMenuItemForKeyEquivalentUniquing: P0): R;
      _unregisterOneMenuForKeyEquivalentUniquing<R = void, P0 = unknown>(__unregisterOneMenuForKeyEquivalentUniquing: P0): R;
      _registerOneMenuForKeyEquivalentUniquing<R = void, P0 = unknown>(__registerOneMenuForKeyEquivalentUniquing: P0): R;
      _unregisterMenuForKeyEquivalentUniquing<R = void, P0 = unknown>(__unregisterMenuForKeyEquivalentUniquing: P0): R;
      _registerMenuForKeyEquivalentUniquing<R = void, P0 = unknown>(__registerMenuForKeyEquivalentUniquing: P0): R;
      // + NSMenu(CHMenuAdditions,MenuItem,NSMenu_Blocks):
      menuWithItems<R = unknown, P0 = unknown>(_menuWithItems: P0): R;
    }
  }
}

declare const NSMenu: cocoa.classes.NSMenu;
