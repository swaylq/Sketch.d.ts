/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSOutlineView<T = any> extends NSTableView, NSAccessibilityOutlineProtocol {
    reloadItem_reloadChildren_withInsertAnimation_removeAnimation<R = void, P0 = unknown, P1 = boolean, P2 = number, P3 = number>(_reloadItem: P0, _reloadChildren: P1, _withInsertAnimation: P2, _removeAnimation: P3): R;
    _recursivelyReloadItem_reloadChildren_withInsertAnimation_removeAnimation<R = void, P0 = unknown, P1 = boolean, P2 = number, P3 = number>(__recursivelyReloadItem: P0, _reloadChildren: P1, _withInsertAnimation: P2, _removeAnimation: P3): R;
    moveItemAtIndex_inParent_toIndex_inParent<R = void, P0 = number, P1 = unknown, P2 = number, P3 = unknown>(_moveItemAtIndex: P0, _inParent: P1, _toIndex: P2, _inParent1: P3): R;
    removeItemsAtIndexes_inParent_withAnimation<R = void, P0 = unknown, P1 = unknown, P2 = number>(_removeItemsAtIndexes: P0, _inParent: P1, _withAnimation: P2): R;
    insertItemsAtIndexes_inParent_withAnimation<R = void, P0 = unknown, P1 = unknown, P2 = number>(_insertItemsAtIndexes: P0, _inParent: P1, _withAnimation: P2): R;
    _staticMoveItemAtIndex_inParent_toIndex_inParent<R = void, P0 = number, P1 = unknown, P2 = number, P3 = unknown>(__staticMoveItemAtIndex: P0, _inParent: P1, _toIndex: P2, _inParent1: P3): R;
    _staticRemoveItemsAtIndexes_inParent<R = void, P0 = unknown, P1 = unknown>(__staticRemoveItemsAtIndexes: P0, _inParent: P1): R;
    _staticInsertItemsAtIndexes_inParent<R = void, P0 = unknown, P1 = unknown>(__staticInsertItemsAtIndexes: P0, _inParent: P1): R;
    _moveItemAtIndex_inParentRowEntry_toIndex_inParentRowEntry<R = void, P0 = number, P1 = unknown, P2 = number, P3 = unknown>(__moveItemAtIndex: P0, _inParentRowEntry: P1, _toIndex: P2, _inParentRowEntry1: P3): R;
    _insertItemsAtIndexes_inParentRowEntry_withAnimation<R = void, P0 = unknown, P1 = unknown, P2 = number>(__insertItemsAtIndexes: P0, _inParentRowEntry: P1, _withAnimation: P2): R;
    _removeItemsAtIndexes_inParentRowEntry_withAnimation<R = void, P0 = unknown, P1 = unknown, P2 = number>(__removeItemsAtIndexes: P0, _inParentRowEntry: P1, _withAnimation: P2): R;
    _recursivelyDeleteRowEntryAndAllChildren<R = void, P0 = unknown>(__recursivelyDeleteRowEntryAndAllChildren: P0): R;
    _validateRowEntryArray<R = void>(): R;
    _validateParentRowEntry_reason_indexes<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__validateParentRowEntry: P0, _reason: P1, _indexes: P2): R;
    _throwExceptionForUpdateErrorAtIndexes_kind_ofParentRowEntry<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__throwExceptionForUpdateErrorAtIndexes: P0, _kind: P1, _ofParentRowEntry: P2): R;
    _rowEntryForItem<R = unknown, P0 = unknown>(__rowEntryForItem: P0): R;
    _dropHighlightIndentationForRow_withLevel<R = number, P0 = number, P1 = number>(__dropHighlightIndentationForRow: P0, _withLevel: P1): R;
    _makeNewRowViewForItem<R = unknown, P0 = unknown>(__makeNewRowViewForItem: P0): R;
    _disclosureButtonForRowView<R = unknown, P0 = unknown>(__disclosureButtonForRowView: P0): R;
    _updateDisclosureButtonForRowView_forRow_removeIfNotAvailable_updatePosition_inDidAddRowView<R = void, P0 = unknown, P1 = number, P2 = boolean, P3 = boolean, P4 = boolean>(__updateDisclosureButtonForRowView: P0, _forRow: P1, _removeIfNotAvailable: P2, _updatePosition: P3, _inDidAddRowView: P4): R;
    _removeDisclosureButtonForRowView<R = void, P0 = unknown>(__removeDisclosureButtonForRowView: P0): R;
    _removeDisclosureButtonOtherIdentifierForRowView_withIdentifier<R = void, P0 = unknown, P1 = unknown>(__removeDisclosureButtonOtherIdentifierForRowView: P0, _withIdentifier: P1): R;
    _removeDisclosureButtonForRowView_withIdentifier<R = boolean, P0 = unknown, P1 = unknown>(__removeDisclosureButtonForRowView: P0, _withIdentifier: P1): R;
    _identifierForDisclosureButtonForRowView<R = unknown, P0 = unknown>(__identifierForDisclosureButtonForRowView: P0): R;
    _outlineControlClicked<R = void, P0 = unknown>(__outlineControlClicked: P0): R;
    _makeShowHideOutlineControl<R = unknown>(): R;
    _makeOutlineControl<R = unknown>(): R;
    identifierForRow<R = unknown, P0 = number>(_identifierForRow: P0): R;
    _findParentWithLevel_beginingAtItem_childEncountered<R = unknown, P0 = number, P1 = unknown, P2 = number>(__findParentWithLevel: P0, _beginingAtItem: P1, _childEncountered: P2): R;
    _countDisplayedDescendantsOfItem<R = number, P0 = unknown>(__countDisplayedDescendantsOfItem: P0): R;
    _maxXLocOfOutlineColumn<R = number>(): R;
    _minXLocOfOutlineColumn<R = number>(): R;
    _locOfOutlineColumnAtMin<R = number, P0 = boolean>(__locOfOutlineColumnAtMin: P0): R;
    _itemsFromRowsWithIndexes<R = unknown, P0 = unknown>(__itemsFromRowsWithIndexes: P0): R;
    _collapseAutoExpandedItems<R = void, P0 = unknown>(__collapseAutoExpandedItems: P0): R;
    _cancelAnyScheduledAutoCollapse<R = void>(): R;
    _collapseAllAutoExpandedItems<R = void>(): R;
    _autoExpandItemUnderCursor<R = boolean>(): R;
    _autoExpandItem<R = void, P0 = unknown>(__autoExpandItem: P0): R;
    _scheduleAutoExpandTimerForItem_dragInfo<R = void, P0 = unknown, P1 = unknown>(__scheduleAutoExpandTimerForItem: P0, _dragInfo: P1): R;
    _shouldAutoExpandItem<R = boolean, P0 = unknown>(__shouldAutoExpandItem: P0): R;
    _stopAutoExpandingItemFlash<R = void>(): R;
    _autoExpandFlashOnce<R = void>(): R;
    _startAutoExpandingItemFlash<R = void>(): R;
    _startAutoExpandWithFlash<R = void, P0 = unknown>(__startAutoExpandWithFlash: P0): R;
    _autoExpandItem_afterFlashCount<R = void, P0 = unknown, P1 = number>(__autoExpandItem: P0, _afterFlashCount: P1): R;
    _flashOutlineCell<R = void>(): R;
    _shouldAutoExpandNoExpandableItem<R = boolean, P0 = unknown>(__shouldAutoExpandNoExpandableItem: P0): R;
    _invalidateDropCandidateItem<R = void>(): R;
    _dropCandidateChildIndex<R = number>(): R;
    _dropCandidateItem<R = unknown>(): R;
    _indentationForDropTargetRow<R = number, P0 = number>(__indentationForDropTargetRow: P0): R;
    _shouldHighlightParentRows<R = boolean>(): R;
    _setNeedsDisplayForDropCandidateItem_childIndex_mask<R = void, P0 = unknown, P1 = number, P2 = number>(__setNeedsDisplayForDropCandidateItem: P0, _childIndex: P1, _mask: P2): R;
    _getRow_andParentRow_forDropCandidateItem_childIndex<R = void, P0 = number, P1 = number, P2 = unknown, P3 = number>(__getRow: P0, _andParentRow: P1, _forDropCandidateItem: P2, _childIndex: P3): R;
    _updateDropFeedbackFromPriorItem_childIndex_mask<R = void, P0 = unknown, P1 = number, P2 = number>(__updateDropFeedbackFromPriorItem: P0, _childIndex: P1, _mask: P2): R;
    _shouldDoDragUpdateOfViewBasedRowData<R = boolean>(): R;
    _tryDrop_dropItem_dropChildIndex<R = void, P0 = unknown, P1 = unknown, P2 = number>(__tryDrop: P0, _dropItem: P1, _dropChildIndex: P2): R;
    setDropItem_dropChildIndex<R = void, P0 = unknown, P1 = number>(_setDropItem: P0, _dropChildIndex: P1): R;
    shouldCollapseAutoExpandedItemsForDeposited<R = boolean, P0 = boolean>(_shouldCollapseAutoExpandedItemsForDeposited: P0): R;
    _shouldAttemptDroppingAsChildOfLeafItems<R = boolean>(): R;
    setAutosaveName<R = void, P0 = unknown>(_setAutosaveName: P0): R;
    _writePersistentExpandItems<R = void>(): R;
    _convertPersistentItem<R = unknown, P0 = unknown>(__convertPersistentItem: P0): R;
    _readPersistentExpandItems<R = void>(): R;
    isItemExpanded<R = boolean, P0 = unknown>(_isItemExpanded: P0): R;
    _isItemLoadedAndExpanded<R = boolean, P0 = unknown>(__isItemLoadedAndExpanded: P0): R;
    levelForRow<R = number, P0 = number>(_levelForRow: P0): R;
    levelForItem<R = number, P0 = unknown>(_levelForItem: P0): R;
    parentForItem<R = unknown, P0 = unknown>(_parentForItem: P0): R;
    childIndexForItem<R = number, P0 = unknown>(_childIndexForItem: P0): R;
    rowForItem<R = number, P0 = unknown>(_rowForItem: P0): R;
    _loadItemsIfNeeded<R = void>(): R;
    itemAtRow<R = unknown, P0 = number>(_itemAtRow: P0): R;
    _rowEntryForRow_requiredRowEntryLoadMask<R = unknown, P0 = number, P1 = number>(__rowEntryForRow: P0, _requiredRowEntryLoadMask: P1): R;
    _rowEntryForChild_ofParent_requiredRowEntryLoadMask<R = unknown, P0 = number, P1 = unknown, P2 = number>(__rowEntryForChild: P0, _ofParent: P1, _requiredRowEntryLoadMask: P2): R;
    _lazyRowEntryForItem_requiredRowEntryLoadMask<R = unknown, P0 = unknown, P1 = number>(__lazyRowEntryForItem: P0, _requiredRowEntryLoadMask: P1): R;
    _rowEntryExistsForItem<R = boolean, P0 = unknown>(__rowEntryExistsForItem: P0): R;
    _rowEntryForItem_requiredRowEntryLoadMask<R = unknown, P0 = unknown, P1 = number>(__rowEntryForItem: P0, _requiredRowEntryLoadMask: P1): R;
    _redisplayAndResizeFromRow<R = void, P0 = number>(__redisplayAndResizeFromRow: P0): R;
    _outlineMouseExited<R = void, P0 = unknown>(__outlineMouseExited: P0): R;
    _outlineMouseEntered<R = void, P0 = unknown>(__outlineMouseEntered: P0): R;
    _outlineTrackingRowForEvent<R = number, P0 = unknown>(__outlineTrackingRowForEvent: P0): R;
    _shouldUseTrackingAreasForOutlineCell<R = boolean>(): R;
    _addOutlineCellTrackingAreas<R = void>(): R;
    _setOutlineCellTrackingAreaRow<R = void, P0 = number>(__setOutlineCellTrackingAreaRow: P0): R;
    _setOutlineButtonVisible_onRow<R = void, P0 = boolean, P1 = number>(__setOutlineButtonVisible: P0, _onRow: P1): R;
    frameOfOutlineCellAtRow<R = CGRect, P0 = number>(_frameOfOutlineCellAtRow: P0): R;
    _frameOfOutlineCellAtRow<R = CGRect, P0 = number>(__frameOfOutlineCellAtRow: P0): R;
    _frameOfSourceListGroupOutlineCellRow<R = CGRect, P0 = number>(__frameOfSourceListGroupOutlineCellRow: P0): R;
    _outlineColumnIndex<R = number>(): R;
    _shouldShowOutlineCellForRow<R = boolean, P0 = number>(__shouldShowOutlineCellForRow: P0): R;
    _delegateShouldShowOutlineCellForItem<R = boolean, P0 = unknown>(__delegateShouldShowOutlineCellForItem: P0): R;
    shouldShowOutlineCellInlineForRow<R = boolean, P0 = number>(_shouldShowOutlineCellInlineForRow: P0): R;
    _indentationForRow_withLevel_isSourceListGroupRow<R = number, P0 = number, P1 = number, P2 = boolean>(__indentationForRow: P0, _withLevel: P1, _isSourceListGroupRow: P2): R;
    _outlineCellIndentation<R = number>(): R;
    _canUseUpdatedIdentation<R = boolean>(): R;
    setSelectionHighlightStyle<R = void, P0 = number>(_setSelectionHighlightStyle: P0): R;
    _drawOutlineCellAtRow<R = void, P0 = number>(__drawOutlineCellAtRow: P0): R;
    _trackingOutlineCellForRow<R = unknown, P0 = number>(__trackingOutlineCellForRow: P0): R;
    _preparedOutlineCellForRow<R = unknown, P0 = number>(__preparedOutlineCellForRow: P0): R;
    _trackingOutlineCell<R = unknown>(): R;
    _setTrackingOutlineCell<R = void, P0 = unknown>(__setTrackingOutlineCell: P0): R;
    _outlineCell<R = unknown>(): R;
    _setOutlineCell<R = void, P0 = unknown>(__setOutlineCell: P0): R;
    _ensureTextOutlineCell<R = void>(): R;
    _makeTextOutlineCell<R = unknown>(): R;
    _notifyDelegateOfStateChangeForCell<R = void, P0 = unknown>(__notifyDelegateOfStateChangeForCell: P0): R;
    _setupStateForOutlineCell_atRow<R = void, P0 = unknown, P1 = number>(__setupStateForOutlineCell: P0, _atRow: P1): R;
    _outlineCellBackgroundStyleForRow<R = number, P0 = number>(__outlineCellBackgroundStyleForRow: P0): R;
    _debugDrawRowNumberInCell_withFrame_forRow<R = void, P0 = unknown, P1 = CGRect, P2 = number>(__debugDrawRowNumberInCell: P0, _withFrame: P1, _forRow: P2): R;
    _alternateAutoExpandImageForOutlineCell_inRow_withFrame<R = unknown, P0 = unknown, P1 = number, P2 = CGRect>(__alternateAutoExpandImageForOutlineCell: P0, _inRow: P1, _withFrame: P2): R;
    _sendDelegateWillDisplayOutlineCell_inOutlineTableColumnAtRow<R = void, P0 = unknown, P1 = number>(__sendDelegateWillDisplayOutlineCell: P0, _inOutlineTableColumnAtRow: P1): R;
    _shouldCallWillDisplayOutlineCell<R = boolean>(): R;
    _delegateWillDisplayOutlineCell_forColumn_row<R = void, P0 = unknown, P1 = unknown, P2 = number>(__delegateWillDisplayOutlineCell: P0, _forColumn: P1, _row: P2): R;
    _dataSourceNumberOfChildrenOfItem<R = number, P0 = unknown>(__dataSourceNumberOfChildrenOfItem: P0): R;
    _nonStaticNumberOfChildrenOfItem<R = number, P0 = unknown>(__nonStaticNumberOfChildrenOfItem: P0): R;
    _staticNumberOfChildrenOfItem<R = number, P0 = unknown>(__staticNumberOfChildrenOfItem: P0): R;
    _staticLoadChildrenForItem_itemData<R = void, P0 = unknown, P1 = unknown>(__staticLoadChildrenForItem: P0, _itemData: P1): R;
    _makeAndCacheStaticDataForItem<R = unknown, P0 = unknown>(__makeAndCacheStaticDataForItem: P0): R;
    setUsesStaticContents<R = void, P0 = boolean>(_setUsesStaticContents: P0): R;
    _setStaticItems<R = void, P0 = unknown>(__setStaticItems: P0): R;
    _staticItems<R = unknown>(): R;
    _nonStaticDataSourceChild_ofItem<R = unknown, P0 = number, P1 = unknown>(__nonStaticDataSourceChild: P0, _ofItem: P1): R;
    _staticDataSourceChild_ofItem<R = unknown, P0 = number, P1 = unknown>(__staticDataSourceChild: P0, _ofItem: P1): R;
    _staticItemDataChild_ofItemData<R = unknown, P0 = number, P1 = unknown>(__staticItemDataChild: P0, _ofItemData: P1): R;
    _staticDataForItem<R = unknown, P0 = unknown>(__staticDataForItem: P0): R;
    child_ofItem<R = unknown, P0 = number, P1 = unknown>(_child: P0, _ofItem: P1): R;
    numberOfChildrenOfItem<R = number, P0 = unknown>(_numberOfChildrenOfItem: P0): R;
    _dataSourceChild_ofItem<R = unknown, P0 = number, P1 = unknown>(__dataSourceChild: P0, _ofItem: P1): R;
    _nonStaticDataSourceIsItemExpandable<R = boolean, P0 = unknown>(__nonStaticDataSourceIsItemExpandable: P0): R;
    _staticDataSourceIsItemExpandable<R = boolean, P0 = unknown>(__staticDataSourceIsItemExpandable: P0): R;
    _dataSourceIsItemExpandable<R = boolean, P0 = unknown>(__dataSourceIsItemExpandable: P0): R;
    _printDataSourceWarning<R = void>(): R;
    mouseTracker_didStopTrackingWithEvent<R = boolean, P0 = unknown, P1 = unknown>(_mouseTracker: P0, _didStopTrackingWithEvent: P1): R;
    mouseTracker_shouldContinueTrackingWithEvent<R = boolean, P0 = unknown, P1 = unknown>(_mouseTracker: P0, _shouldContinueTrackingWithEvent: P1): R;
    mouseTracker_shouldStartTrackingWithEvent<R = boolean, P0 = unknown, P1 = unknown>(_mouseTracker: P0, _shouldStartTrackingWithEvent: P1): R;
    _shouldIndentBackgroundRect<R = boolean>(): R;
    _canUseWhiteDisclosureTriangles<R = boolean>(): R;
    _handleRightArrowKeyWithChildren<R = void, P0 = boolean>(__handleRightArrowKeyWithChildren: P0): R;
    _handleLeftArrowKeyWithChildren<R = void, P0 = boolean>(__handleLeftArrowKeyWithChildren: P0): R;
    _newSelectedRowEntriesArrayIncludingExpandable_includingUnexpandable_withCurrentExpandState<R = __CFArray, P0 = boolean, P1 = boolean, P2 = boolean>(__newSelectedRowEntriesArrayIncludingExpandable: P0, _includingUnexpandable: P1, _withCurrentExpandState: P2): R;
    _doUserExpandOrCollapseOfItem_isExpand_optionKeyWasDown<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__doUserExpandOrCollapseOfItem: P0, _isExpand: P1, _optionKeyWasDown: P2): R;
    _dropOverdrawBeforeAnimation<R = void>(): R;
    _doExpandAnimation_forRow<R = void, P0 = boolean, P1 = number>(__doExpandAnimation: P0, _forRow: P1): R;
    _shouldDoExpandAnimationForRow<R = boolean, P0 = number>(__shouldDoExpandAnimationForRow: P0): R;
    _highlightOutlineCell_highlight_withFrame_inView<R = void, P0 = unknown, P1 = boolean, P2 = CGRect, P3 = unknown>(__highlightOutlineCell: P0, _highlight: P1, _withFrame: P2, _inView: P3): R;
    _drawOutlineCell_withFrame_inView<R = void, P0 = unknown, P1 = CGRect, P2 = unknown>(__drawOutlineCell: P0, _withFrame: P1, _inView: P2): R;
    _isEditingRowAChildOfRowAtPoint<R = boolean, P0 = CGPoint>(__isEditingRowAChildOfRowAtPoint: P0): R;
    _clickedInExpansionTriangle<R = boolean, P0 = CGPoint>(__clickedInExpansionTriangle: P0): R;
    numberOfRows<R = number>(): R;
    _setAllowAnimationsToYes<R = void>(): R;
    _postItemDidCollapseNotification<R = void, P0 = unknown>(__postItemDidCollapseNotification: P0): R;
    _postItemDidExpandNotification<R = void, P0 = unknown>(__postItemDidExpandNotification: P0): R;
    _postItemWillCollapseNotification<R = void, P0 = unknown>(__postItemWillCollapseNotification: P0): R;
    _postItemWillExpandNotification<R = void, P0 = unknown>(__postItemWillExpandNotification: P0): R;
    reloadItem_reloadChildren<R = void, P0 = unknown, P1 = boolean>(_reloadItem: P0, _reloadChildren: P1): R;
    _staticRemoveAllChildrenForItemEntry<R = void, P0 = unknown>(__staticRemoveAllChildrenForItemEntry: P0): R;
    _updateDisclosureButtonAtRow<R = void, P0 = number>(__updateDisclosureButtonAtRow: P0): R;
    reloadItem<R = void, P0 = unknown>(_reloadItem: P0): R;
    _resizeOutlineColumn<R = void>(): R;
    _calcOutlineColumnWidth<R = void>(): R;
    _originalOutlineColumnWidth<R = number>(): R;
    _adjustSelectionForItemEntry_numberOfRows_adjustFieldEditorIfNecessary<R = void, P0 = unknown, P1 = number, P2 = boolean>(__adjustSelectionForItemEntry: P0, _numberOfRows: P1, _adjustFieldEditorIfNecessary: P2): R;
    _sourceListGroupRowBottomSpacing<R = number>(): R;
    _scrollFieldEditorToVisible<R = void, P0 = unknown>(__scrollFieldEditorToVisible: P0): R;
    _adjustEditedCellLocation<R = void>(): R;
    _endEditingIfEditedCellIsChildOfItemEntry<R = void, P0 = unknown>(__endEditingIfEditedCellIsChildOfItemEntry: P0): R;
    _collapseItem_collapseChildren_clearExpandState<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__collapseItem: P0, _collapseChildren: P1, _clearExpandState: P2): R;
    _collapseRootEntry_clearExpandState<R = void, P0 = boolean, P1 = boolean>(__collapseRootEntry: P0, _clearExpandState: P1): R;
    collapseItem_collapseChildren<R = void, P0 = unknown, P1 = boolean>(_collapseItem: P0, _collapseChildren: P1): R;
    collapseItem<R = void, P0 = unknown>(_collapseItem: P0): R;
    _batchCollapseItemsWithItemEntries_collapseChildren<R = void, P0 = __CFArray, P1 = boolean>(__batchCollapseItemsWithItemEntries: P0, _collapseChildren: P1): R;
    _batchCollapseItemsWithItemEntries_collapseChildren_clearExpandState<R = void, P0 = __CFArray, P1 = boolean, P2 = boolean>(__batchCollapseItemsWithItemEntries: P0, _collapseChildren: P1, _clearExpandState: P2): R;
    _collapseItemEntry_collapseChildren_clearExpandState<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__collapseItemEntry: P0, _collapseChildren: P1, _clearExpandState: P2): R;
    _recursiveCollapseItemEntry_collapseChildren_clearExpandState<R = void, P0 = unknown, P1 = boolean, P2 = boolean>(__recursiveCollapseItemEntry: P0, _collapseChildren: P1, _clearExpandState: P2): R;
    expandItem_expandChildren<R = void, P0 = unknown, P1 = boolean>(_expandItem: P0, _expandChildren: P1): R;
    _shouldAnimateExpandCollapse<R = boolean>(): R;
    _setAnimateExpandAndCollapse<R = void, P0 = boolean>(__setAnimateExpandAndCollapse: P0): R;
    _setupAnimationsIfNeeded<R = void>(): R;
    _shouldAnimateChanges<R = boolean>(): R;
    expandItem<R = void, P0 = unknown>(_expandItem: P0): R;
    _batchExpandItemsWithItemEntries_expandChildren<R = void, P0 = __CFArray, P1 = boolean>(__batchExpandItemsWithItemEntries: P0, _expandChildren: P1): R;
    _expandItemEntry_expandChildren<R = void, P0 = unknown, P1 = boolean>(__expandItemEntry: P0, _expandChildren: P1): R;
    _staticItemWasExpanded<R = boolean, P0 = unknown>(__staticItemWasExpanded: P0): R;
    _staticSetItem_isExpanded<R = void, P0 = unknown, P1 = boolean>(__staticSetItem: P0, _isExpanded: P1): R;
    _restoreExpandedChildrenForItem<R = void, P0 = unknown>(__restoreExpandedChildrenForItem: P0): R;
    _expandItemEntry_expandChildren_startLevel<R = void, P0 = unknown, P1 = boolean, P2 = number>(__expandItemEntry: P0, _expandChildren: P1, _startLevel: P2): R;
    _expandAnimation<R = number>(): R;
    _collapseAnimation<R = number>(): R;
    _expandItemEntryChildren_atStartLevel_expandChildren_andInvalidate<R = void, P0 = unknown, P1 = number, P2 = boolean, P3 = boolean>(__expandItemEntryChildren: P0, _atStartLevel: P1, _expandChildren: P2, _andInvalidate: P3): R;
    _numVisibleChildrenForEntry<R = number, P0 = unknown>(__numVisibleChildrenForEntry: P0): R;
    _shouldCollapseItem<R = boolean, P0 = unknown>(__shouldCollapseItem: P0): R;
    _shouldExpandItem<R = boolean, P0 = unknown>(__shouldExpandItem: P0): R;
    _shouldContinueExpandAtLevel_beganAtLevel<R = boolean, P0 = number, P1 = number>(__shouldContinueExpandAtLevel: P0, _beganAtLevel: P1): R;
    _redisplayAfterExpansionChangeFromRow_withOriginalRowCount<R = void, P0 = number, P1 = number>(__redisplayAfterExpansionChangeFromRow: P0, _withOriginalRowCount: P1): R;
    isExpandable<R = boolean, P0 = unknown>(_isExpandable: P0): R;
    _initializeStaticRowViews<R = void>(): R;
    _commonInit<R = void>(): R;
    _disclosureTriangleButtonImageSorceID<R = unknown>(): R;
    autosaveExpandedItems<R = boolean>(): R;
    setAutosaveExpandedItems<R = void, P0 = boolean>(_v: P0): R;
    delegate<R = NSOutlineViewDelegate>(): R;
    setDelegate<R = void, P0 = NSOutlineViewDelegate>(_v: P0): R;
    dataSource<R = NSOutlineViewDataSource>(): R;
    setDataSource<R = void, P0 = NSOutlineViewDataSource>(_v: P0): R;
    autoresizesOutlineColumn<R = boolean>(): R;
    setAutoresizesOutlineColumn<R = void, P0 = boolean>(_v: P0): R;
    outlineTableColumn<R = NSTableColumn>(): R;
    setOutlineTableColumn<R = void, P0 = NSTableColumn>(_v: P0): R;
    indentationMarkerFollowsCell<R = boolean>(): R;
    setIndentationMarkerFollowsCell<R = void, P0 = boolean>(_v: P0): R;
    indentationPerLevel<R = number>(): R;
    setIndentationPerLevel<R = void, P0 = number>(_v: P0): R;
    stronglyReferencesItems<R = boolean>(): R;
    setStronglyReferencesItems<R = void, P0 = boolean>(_v: P0): R;
    userInterfaceLayoutDirection<R = number>(): R;
    setUserInterfaceLayoutDirection<R = void, P0 = number>(_v: P0): R;
    debugDescription<R = NSString>(): R;
    description<R = NSString>(): R;
    hash<R = number>(): R;
    superclass<R = unknown>(): R;
    // + NSOutlineView(BCLayerList,Chocolat):
    collapseAllItems<R = void>(): R;
    expandAllItems<R = void>(): R;
    restoreSimpleExpandedState<R = void>(): R;
    saveSimpleExpandedState<R = void>(): R;
    ms_titleForRow<R = unknown, P0 = number>(_ms_titleForRow: P0): R;
    ms_rowForTitle<R = number, P0 = unknown>(_ms_rowForTitle: P0): R;
    setSimpleExpandedState<R = void, P0 = unknown>(_setSimpleExpandedState: P0): R;
    simpleExpandedState<R = unknown>(): R;
    floatingGroupRowView<R = NSTableRowView>(): R;
    floatingGroupRow<R = number>(): R;
  }
  namespace classes {
    export interface NSOutlineView<T = any> extends NSTableView, NSAccessibilityOutlineProtocol {
      alloc<R = NSOutlineView>(): R;
      new: <R = NSOutlineView>() => R;
      _shouldRequireAutoCollapseOutlineAfterDropsDefault<R = boolean>(): R;
      _shouldAllowAutoCollapseItemsDuringDragsDefault<R = boolean>(): R;
      _shouldAllowAutoExpandItemsDuringDragsDefault<R = boolean>(): R;
      _delayedFreeRowEntryFreeList<R = void>(): R;
      // + NSOutlineView(BCLayerList,Chocolat):
      
    }
  }
}

declare const NSOutlineView: cocoa.classes.NSOutlineView;
