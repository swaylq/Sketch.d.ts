/// <reference no-default-lib="true" />

declare namespace cocoa {
  export interface NSView<T = any> extends cocoa.NSResponder, cocoa.NSAppearanceCustomizationInternalProtocol, cocoa.NSAnimatablePropertyContainerProtocol, cocoa.NSUserInterfaceItemIdentificationProtocol, cocoa.NSDraggingDestinationProtocol, cocoa.NSAppearanceCustomizationProtocol, cocoa.NSAccessibilityElementProtocol, cocoa.NSAccessibilityProtocol {
    _isFirstResponder<R = boolean>(): R;
    _nearestAncestorOfClass<R = unknown, P0 = unknown>(__nearestAncestorOfClass: P0): R;
    colorSpace<R = unknown>(): R;
    _backingScaleFactorForDrawing<R = number>(): R;
    backingScaleFactor<R = number>(): R;
    viewDidChangeBackingProperties<R = void, P0 = unknown>(_viewDidChangeBackingProperties: P0): R;
    _scrollRectToVisible_fromView<R = boolean, P0 = cocoa.CGRect, P1 = unknown>(__scrollRectToVisible: P0, _fromView: P1): R;
    _scrollPoint_fromView<R = void, P0 = cocoa.CGPoint, P1 = unknown>(__scrollPoint: P0, _fromView: P1): R;
    shouldBeArchived<R = boolean>(): R;
    setShouldBeArchived<R = void, P0 = boolean>(_setShouldBeArchived: P0): R;
    _renderedContentRect<R = cocoa.CGRect>(): R;
    prepareContentInRect<R = void, P0 = cocoa.CGRect>(_prepareContentInRect: P0): R;
    _didEndScrolling<R = void>(): R;
    _isScrolling<R = boolean>(): R;
    _willBeginScrolling<R = void>(): R;
    _removeIdleTimer<R = void>(): R;
    _installPrefetchIdleTimerIfNecessary<R = void>(): R;
    _doIdlePrefetch<R = boolean>(): R;
    _recursiveSendViewDidChangeAppearance<R = void, P0 = unknown>(__recursiveSendViewDidChangeAppearance: P0): R;
    _viewDidChangeAppearance<R = void, P0 = unknown>(__viewDidChangeAppearance: P0): R;
    effectiveAppearanceDidChange<R = void>(): R;
    viewDidChangeEffectiveAppearance<R = void>(): R;
    _notePreferredAppearanceDidChange<R = void>(): R;
    _kitAppearance<R = unknown>(): R;
    _internalSetAppearance<R = void, P0 = unknown>(__internalSetAppearance: P0): R;
    rectForSmartMagnificationAtPoint_inRect<R = cocoa.CGRect, P0 = cocoa.CGPoint, P1 = cocoa.CGRect>(_rectForSmartMagnificationAtPoint: P0, _inRect: P1): R;
    setWantsBestResolutionOpenGLSurface<R = void, P0 = boolean>(_setWantsBestResolutionOpenGLSurface: P0): R;
    wantsBestResolutionOpenGLSurface<R = boolean>(): R;
    _updateOpenGLViewport<R = void>(): R;
    setUserInterfaceItemIdentifier<R = void, P0 = unknown>(_setUserInterfaceItemIdentifier: P0): R;
    userInterfaceItemIdentifier<R = unknown>(): R;
    prepareForReuse<R = void>(): R;
    _clearHasBeenCommittedIfNeededOrForced<R = void, P0 = boolean>(__clearHasBeenCommittedIfNeededOrForced: P0): R;
    makeBackingLayer<R = unknown>(): R;
    setValue_forKeyPath<R = void, P0 = unknown, P1 = unknown>(_setValue: P0, _forKeyPath: P1): R;
    updateLayer<R = void>(): R;
    _classToCheckForWantsUpdateLayer<R = unknown>(): R;
    setIgnoreHitTest<R = void, P0 = boolean>(_setIgnoreHitTest: P0): R;
    ignoreHitTest<R = boolean>(): R;
    updateLayerHandler<R = cocoa.CDUnknownBlockType>(): R;
    setUpdateLayerHandler<R = void, P0 = cocoa.CDUnknownBlockType>(_setUpdateLayerHandler: P0): R;
    _didRemoveLayer<R = void>(): R;
    buildLayerTreeWithOwnLayerRequirement_someAncestorWantsLayer<R = unknown, P0 = boolean, P1 = boolean>(_buildLayerTreeWithOwnLayerRequirement: P0, _someAncestorWantsLayer: P1): R;
    buildLayerTree<R = void>(): R;
    _autoscrollForDraggingInfo_timeDelta<R = void, P0 = unknown, P1 = number>(__autoscrollForDraggingInfo: P0, _timeDelta: P1): R;
    _shouldAutoscrollForDraggingInfo<R = boolean, P0 = unknown>(__shouldAutoscrollForDraggingInfo: P0): R;
    _windowChangedKeyState<R = void>(): R;
    _contextMenuTargetForEvent<R = unknown, P0 = unknown>(__contextMenuTargetForEvent: P0): R;
    _showMenuForEvent<R = boolean, P0 = unknown>(__showMenuForEvent: P0): R;
    willSendMenuNeedsUpdate_withEvent<R = void, P0 = unknown, P1 = unknown>(_willSendMenuNeedsUpdate: P0, _withEvent: P1): R;
    didCloseMenu_withEvent<R = void, P0 = unknown, P1 = unknown>(_didCloseMenu: P0, _withEvent: P1): R;
    willOpenMenu_withEvent<R = void, P0 = unknown, P1 = unknown>(_willOpenMenu: P0, _withEvent: P1): R;
    prepareForMenu_withEvent<R = void, P0 = unknown, P1 = unknown>(_prepareForMenu: P0, _withEvent: P1): R;
    prepareMenu_withEvent<R = void, P0 = unknown, P1 = unknown>(_prepareMenu: P0, _withEvent: P1): R;
    menuForEvent<R = unknown, P0 = unknown>(_menuForEvent: P0): R;
    menu<R = unknown>(): R;
    setMenu<R = void, P0 = unknown>(_setMenu: P0): R;
    _isUserInterfaceLayoutDirectionExplicitlySet<R = boolean>(): R;
    _finishedMakingConnections<R = void>(): R;
    removeAllToolTips<R = void>(): R;
    removeToolTip<R = void, P0 = number>(_removeToolTip: P0): R;
    addToolTipRect_owner_userData<R = number, P0 = cocoa.CGRect, P1 = unknown, P2 = void>(_addToolTipRect: P0, _owner: P1, _userData: P2): R;
    _hasToolTip<R = boolean>(): R;
    _setHasToolTip<R = void, P0 = boolean>(__setHasToolTip: P0): R;
    view_customToolTip_fadeOutAllowedForToolTipWithDisplayInfo<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(_view: P0, _customToolTip: P1, _fadeOutAllowedForToolTipWithDisplayInfo: P2): R;
    view_customToolTip_frameForToolTipWithDisplayInfo<R = cocoa.CGRect, P0 = unknown, P1 = number, P2 = unknown>(_view: P0, _customToolTip: P1, _frameForToolTipWithDisplayInfo: P2): R;
    _drawExpansionToolTipInView_usingCell<R = void, P0 = unknown, P1 = unknown>(__drawExpansionToolTipInView: P0, _usingCell: P1): R;
    view_customToolTip_drawInView_displayInfo<R = void, P0 = unknown, P1 = number, P2 = unknown, P3 = unknown>(_view: P0, _customToolTip: P1, _drawInView: P2, _displayInfo: P3): R;
    _toolTipRectForCell_withFrame<R = cocoa.CGRect, P0 = unknown, P1 = cocoa.CGRect>(__toolTipRectForCell: P0, _withFrame: P1): R;
    _addRevealoverIfNecessaryForCell_cellRect<R = void, P0 = unknown, P1 = cocoa.CGRect>(__addRevealoverIfNecessaryForCell: P0, _cellRect: P1): R;
    _addToolTipRect_displayDelegate_displayInfo<R = number, P0 = cocoa.CGRect, P1 = unknown, P2 = unknown>(__addToolTipRect: P0, _displayDelegate: P1, _displayInfo: P2): R;
    _revealoverInfoForCell_cellRect<R = unknown, P0 = unknown, P1 = cocoa.CGRect>(__revealoverInfoForCell: P0, _cellRect: P1): R;
    _canShowExpansionTooltips<R = boolean>(): R;
    _toolTipManagerWillRecomputeToolTipsByRemoving_adding<R = void, P0 = boolean, P1 = boolean>(__toolTipManagerWillRecomputeToolTipsByRemoving: P0, _adding: P1): R;
    _invalidateAllRevealovers<R = void>(): R;
    _removeAllRevealovers<R = void>(): R;
    _recursiveWindowDidEnableToolTipCreationAndDisplay<R = void>(): R;
    _shouldComputeRevealovers<R = boolean>(): R;
    _wantsRevealovers<R = boolean>(): R;
    _setWantsRevealovers<R = void, P0 = boolean>(__setWantsRevealovers: P0): R;
    _setRevealoversDirty<R = void, P0 = boolean>(__setRevealoversDirty: P0): R;
    _delayedEnableRevealoverComputationAfterScrollWheel<R = void, P0 = unknown>(__delayedEnableRevealoverComputationAfterScrollWheel: P0): R;
    _dynamicToolTipManager<R = unknown>(): R;
    canBecomeKeyView<R = boolean>(): R;
    previousValidKeyView<R = unknown>(): R;
    nextValidKeyView<R = unknown>(): R;
    _omitFalsePositiveKeyViewCandidates<R = void, P0 = unknown>(__omitFalsePositiveKeyViewCandidates: P0): R;
    _recursiveGatherAllKeyViewCandidatesInArray<R = void, P0 = unknown>(__recursiveGatherAllKeyViewCandidatesInArray: P0): R;
    _isKeyLoopGroup<R = boolean>(): R;
    _recursiveBreakKeyViewLoop<R = void>(): R;
    _removeFromKeyViewLoop<R = void>(): R;
    _removePreviousPointersToMe<R = void>(): R;
    _removeNextPointersToMe<R = void>(): R;
    previousKeyView<R = unknown>(): R;
    nextKeyView<R = unknown>(): R;
    setNextKeyView<R = void, P0 = unknown>(_setNextKeyView: P0): R;
    _primitiveSetNextKeyView<R = void, P0 = unknown>(__primitiveSetNextKeyView: P0): R;
    _primitiveSetPreviousKeyView<R = void, P0 = unknown>(__primitiveSetPreviousKeyView: P0): R;
    _isAncestorOf<R = boolean, P0 = unknown>(__isAncestorOf: P0): R;
    _isAncestorOfViewIdenticalTo<R = boolean, P0 = void>(__isAncestorOfViewIdenticalTo: P0): R;
    _setIgnoreForKeyViewLoop<R = void, P0 = boolean>(__setIgnoreForKeyViewLoop: P0): R;
    _ignoreForKeyViewLoop<R = boolean>(): R;
    _concludeDefaultKeyLoopComputation<R = void>(): R;
    _prepareForDefaultKeyLoopComputation<R = void>(): R;
    _findLastViewInKeyViewLoop<R = unknown>(): R;
    _findLastViewInKeyViewLoopStartingAtView<R = unknown, P0 = unknown>(__findLastViewInKeyViewLoopStartingAtView: P0): R;
    _editingFirstResponderIfIsASubview<R = unknown>(): R;
    _ensureSubviewNextKeyViewsAreSubviews<R = void>(): R;
    _recursiveEnsureSubviewNextKeyViewsAreSubviewsOf<R = void, P0 = unknown>(__recursiveEnsureSubviewNextKeyViewsAreSubviewsOf: P0): R;
    _setDefaultKeyViewLoop<R = void>(): R;
    _recursiveSetDefaultKeyViewLoop<R = unknown>(): R;
    _primitiveSetDefaultNextKeyView<R = void, P0 = unknown>(__primitiveSetDefaultNextKeyView: P0): R;
    compareGeometry<R = number, P0 = unknown>(_compareGeometry: P0): R;
    _postBoundsChangeNotification<R = void>(): R;
    shouldDrawColor<R = boolean>(): R;
    updateTrackingAreas<R = void>(): R;
    removeTrackingArea<R = void, P0 = unknown>(_removeTrackingArea: P0): R;
    addTrackingArea<R = void, P0 = unknown>(_addTrackingArea: P0): R;
    removeTrackingRect<R = void, P0 = number>(_removeTrackingRect: P0): R;
    _removeTrackingRectTag<R = void, P0 = number>(__removeTrackingRectTag: P0): R;
    addTrackingRect_owner_userData_assumeInside<R = number, P0 = cocoa.CGRect, P1 = unknown, P2 = void, P3 = boolean>(_addTrackingRect: P0, _owner: P1, _userData: P2, _assumeInside: P3): R;
    _resetCursorRects<R = unknown>(): R;
    resetCursorRects<R = void>(): R;
    discardCursorRects<R = void>(): R;
    removeCursorRect_cursor<R = void, P0 = cocoa.CGRect, P1 = unknown>(_removeCursorRect: P0, _cursor: P1): R;
    addCursorRect_cursor<R = void, P0 = cocoa.CGRect, P1 = unknown>(_addCursorRect: P0, _cursor: P1): R;
    _drawView<R = boolean, P0 = unknown>(__drawView: P0): R;
    _updateDrawDelegateForAlphaValue<R = void>(): R;
    _drawDelegate<R = unknown>(): R;
    _setDrawDelegate<R = void, P0 = unknown>(__setDrawDelegate: P0): R;
    _shouldBeTreatedAsInkEventInInactiveWindow<R = boolean, P0 = unknown>(__shouldBeTreatedAsInkEventInInactiveWindow: P0): R;
    shouldDelayWindowOrderingForEvent<R = boolean, P0 = unknown>(_shouldDelayWindowOrderingForEvent: P0): R;
    acceptsFirstMouse<R = boolean, P0 = unknown>(_acceptsFirstMouse: P0): R;
    _performKeyEquivalent_conditionally<R = boolean, P0 = unknown, P1 = boolean>(__performKeyEquivalent: P0, _conditionally: P1): R;
    _startingWindowForSendAction<R = unknown, P0 = string>(__startingWindowForSendAction: P0): R;
    _recursiveFindDefaultButtonCell<R = unknown>(): R;
    viewWithTag<R = unknown, P0 = number>(_viewWithTag: P0): R;
    mouse_inRect<R = boolean, P0 = cocoa.CGPoint, P1 = cocoa.CGRect>(_mouse: P0, _inRect: P1): R;
    _hitTestToBlockWindowResizing_forResizeDirection<R = unknown, P0 = cocoa.CGPoint, P1 = number>(__hitTestToBlockWindowResizing: P0, _forResizeDirection: P1): R;
    hitTest<R = unknown, P0 = cocoa.CGPoint>(_hitTest: P0): R;
    worksWhenModal<R = boolean>(): R;
    setNextResponder<R = void, P0 = unknown>(_setNextResponder: P0): R;
    translateRectsNeedingDisplayInRect_by<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGSize>(_translateRectsNeedingDisplayInRect: P0, _by: P1): R;
    scrollRect_by<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGSize>(_scrollRect: P0, _by: P1): R;
    invalidate<R = void, P0 = cocoa.CGRect>(_invalidate: P0): R;
    adjustScroll<R = cocoa.CGRect, P0 = cocoa.CGRect>(_adjustScroll: P0): R;
    autoscroll<R = boolean, P0 = unknown>(_autoscroll: P0): R;
    scrollRectToVisible<R = boolean, P0 = cocoa.CGRect>(_scrollRectToVisible: P0): R;
    scrollRectToVisible_fromView<R = boolean, P0 = cocoa.CGRect, P1 = unknown>(_scrollRectToVisible: P0, _fromView: P1): R;
    scrollPoint<R = void, P0 = cocoa.CGPoint>(_scrollPoint: P0): R;
    scrollPoint_fromView<R = void, P0 = cocoa.CGPoint, P1 = unknown>(_scrollPoint: P0, _fromView: P1): R;
    imageInRect<R = unknown, P0 = cocoa.CGRect>(_imageInRect: P0): R;
    cacheDisplayInRect_toBitmapImageRep_includeSubviews<R = void, P0 = cocoa.CGRect, P1 = unknown, P2 = boolean>(_cacheDisplayInRect: P0, _toBitmapImageRep: P1, _includeSubviews: P2): R;
    cacheDisplayInRect_toBitmapImageRep<R = void, P0 = cocoa.CGRect, P1 = unknown>(_cacheDisplayInRect: P0, _toBitmapImageRep: P1): R;
    _betterCacheDisplayInRect_toBitmapImageRep<R = void, P0 = cocoa.CGRect, P1 = unknown>(__betterCacheDisplayInRect: P0, _toBitmapImageRep: P1): R;
    bitmapImageRepForCachingDisplayInRect<R = unknown, P0 = cocoa.CGRect>(_bitmapImageRepForCachingDisplayInRect: P0): R;
    _bitmapImageRepForCachingDisplayInRect_colorSpace<R = unknown, P0 = cocoa.CGRect, P1 = unknown>(__bitmapImageRepForCachingDisplayInRect: P0, _colorSpace: P1): R;
    _bitmapImageRepForCachingDisplayInRect_toRect_colorSpace<R = unknown, P0 = cocoa.CGRect, P1 = cocoa.CGRect, P2 = unknown>(__bitmapImageRepForCachingDisplayInRect: P0, _toRect: P1, _colorSpace: P2): R;
    needsToDrawRect<R = boolean, P0 = cocoa.CGRect>(_needsToDrawRect: P0): R;
    getRectsBeingDrawn_count<R = void, P0 = cocoa.CGRect, P1 = number>(_getRectsBeingDrawn: P0, _count: P1): R;
    drawRect<R = void, P0 = cocoa.CGRect>(_drawRect: P0): R;
    viewWillDraw<R = void>(): R;
    setTranslatesAutoresizingMaskIntoConstraints<R = void, P0 = boolean>(_setTranslatesAutoresizingMaskIntoConstraints: P0): R;
    translatesAutoresizingMaskIntoConstraints<R = boolean>(): R;
    setUsesConstraintsInsteadOfAutoresizing<R = void, P0 = boolean>(_setUsesConstraintsInsteadOfAutoresizing: P0): R;
    usesConstraintsInsteadOfAutoresizing<R = boolean>(): R;
    displayRectIgnoringOpacity_inContext<R = void, P0 = cocoa.CGRect, P1 = unknown>(_displayRectIgnoringOpacity: P0, _inContext: P1): R;
    _buildLayerTreeFromRoot<R = void>(): R;
    _useCARenderInContext<R = boolean>(): R;
    displayRectIgnoringOpacity<R = void, P0 = cocoa.CGRect>(_displayRectIgnoringOpacity: P0): R;
    displayIfNeededInRectIgnoringOpacity<R = void, P0 = cocoa.CGRect>(_displayIfNeededInRectIgnoringOpacity: P0): R;
    displayIgnoringOpacity<R = void>(): R;
    displayIfNeededIgnoringOpacity<R = void>(): R;
    displayRect<R = void, P0 = cocoa.CGRect>(_displayRect: P0): R;
    displayIfNeededInRect<R = void, P0 = cocoa.CGRect>(_displayIfNeededInRect: P0): R;
    display<R = void>(): R;
    displayIfNeeded<R = void>(): R;
    setNeedsDisplayInRect<R = void, P0 = cocoa.CGRect>(_setNeedsDisplayInRect: P0): R;
    _setAncestorLayerNeedsDisplayInRect<R = void, P0 = cocoa.CGRect>(__setAncestorLayerNeedsDisplayInRect: P0): R;
    _shouldDirtyTheWindowOnLayerInvalidation<R = boolean>(): R;
    _legacySetNeedsDisplayInRect<R = void, P0 = cocoa.CGRect>(__legacySetNeedsDisplayInRect: P0): R;
    _regionInvalidatedDuringDisplay<R = unknown>(): R;
    _setRegionInvalidatedDuringDisplay<R = void, P0 = unknown>(__setRegionInvalidatedDuringDisplay: P0): R;
    _makeDirtyRegionIvar<R = void>(): R;
    _dirtyRegionIvar<R = unknown>(): R;
    _alignmentBounds<R = cocoa.CGRect>(): R;
    _alignmentFrame<R = cocoa.CGRect>(): R;
    _boundsForAlignmentRect<R = cocoa.CGRect, P0 = cocoa.CGRect>(__boundsForAlignmentRect: P0): R;
    _alignmentRectForBounds<R = cocoa.CGRect, P0 = cocoa.CGRect>(__alignmentRectForBounds: P0): R;
    frameForAlignmentRect<R = cocoa.CGRect, P0 = cocoa.CGRect>(_frameForAlignmentRect: P0): R;
    alignmentRectForFrame<R = cocoa.CGRect, P0 = cocoa.CGRect>(_alignmentRectForFrame: P0): R;
    alignmentRectInsets<R = cocoa.NSEdgeInsets>(): R;
    lastBaselineOffsetFromBottom<R = number>(): R;
    firstBaselineOffsetFromTop<R = number>(): R;
    baselineOffsetFromBottom<R = number>(): R;
    _setLayoutIsClean<R = void, P0 = boolean>(__setLayoutIsClean: P0): R;
    setNeedsLayout<R = void, P0 = boolean>(_setNeedsLayout: P0): R;
    _informContainerThatSubviewsNeedLayout<R = void>(): R;
    needsLayout<R = boolean>(): R;
    _layoutSubtreeIfNeededAndAllowTemporaryEngine<R = void, P0 = boolean>(__layoutSubtreeIfNeededAndAllowTemporaryEngine: P0): R;
    _updateConstraintsForLayoutCheckingDirtyBits_creatingEngine<R = boolean, P0 = boolean, P1 = boolean>(__updateConstraintsForLayoutCheckingDirtyBits: P0, _creatingEngine: P1): R;
    _layoutSubtreeIfNeededNoEngineCreation<R = void>(): R;
    layoutSubtreeIfNeeded<R = void>(): R;
    _logViewsThatNeedLayoutOrUpdateConstraints<R = void>(): R;
    _collectDescendantsNeedingLayout<R = void, P0 = unknown>(__collectDescendantsNeedingLayout: P0): R;
    _collectDescendantsNeedingUpdateConstraints<R = void, P0 = unknown>(__collectDescendantsNeedingUpdateConstraints: P0): R;
    _layoutSubtreeWithOldSize<R = void, P0 = cocoa.CGSize>(__layoutSubtreeWithOldSize: P0): R;
    _doLayout<R = void>(): R;
    _layoutDescendsToSubviewsOnAllFrameSizeChanges<R = boolean>(): R;
    _updateLayoutDependentMetricsIfNeeded<R = void>(): R;
    _layoutAtSubtreeLevelIfNeeded<R = void>(): R;
    _layoutAtWindowLevelIfNeeded<R = void>(): R;
    _requestExtraUpdateConstraints<R = void>(): R;
    setNeedsUpdateConstraints<R = void, P0 = boolean>(_setNeedsUpdateConstraints: P0): R;
    _informContainerThatSubviewsNeedUpdateConstraints<R = void>(): R;
    _updateConstraintsFinished<R = void>(): R;
    _collectedViewsWaitingForConstraintsFinished<R = unknown>(): R;
    _requestUpdateConstraintsFinishedForView<R = void, P0 = unknown>(__requestUpdateConstraintsFinishedForView: P0): R;
    needsUpdateConstraints<R = boolean>(): R;
    updateConstraintsForSubtreeIfNeeded<R = void>(): R;
    _updateConstraintsForSubtreeIfNeededCollectingViewsWithInvalidBaselines<R = void, P0 = unknown>(__updateConstraintsForSubtreeIfNeededCollectingViewsWithInvalidBaselines: P0): R;
    updateConstraints<R = void>(): R;
    _regionForOpaqueDescendants_forMove_forUnderTitlebar<R = cocoa.CGSRegionObject, P0 = cocoa.CGRect, P1 = boolean, P2 = boolean>(__regionForOpaqueDescendants: P0, _forMove: P1, _forUnderTitlebar: P2): R;
    _regionForOpaqueDescendants_forMove<R = cocoa.CGSRegionObject, P0 = cocoa.CGRect, P1 = boolean>(__regionForOpaqueDescendants: P0, _forMove: P1): R;
    _shouldDetermineOpaqueRegionForMoves<R = boolean>(): R;
    setGesturesEnabled<R = void, P0 = boolean>(_setGesturesEnabled: P0): R;
    gesturesEnabled<R = boolean>(): R;
    gestureRecognizerShouldBegin<R = boolean, P0 = unknown>(_gestureRecognizerShouldBegin: P0): R;
    removeAllGestureRecognizers<R = void>(): R;
    removeGestureRecognizer<R = void, P0 = unknown>(_removeGestureRecognizer: P0): R;
    addGestureRecognizer<R = void, P0 = unknown>(_addGestureRecognizer: P0): R;
    setGestureRecognizers<R = void, P0 = unknown>(_setGestureRecognizers: P0): R;
    gestureRecognizers<R = unknown>(): R;
    _gestureRecognizers<R = unknown>(): R;
    setAllowedTouchTypes<R = void, P0 = number>(_setAllowedTouchTypes: P0): R;
    allowedTouchTypes<R = number>(): R;
    _propagateDirtyRectsToOpaqueAncestors<R = void>(): R;
    _recursiveTickleNeedsDisplay<R = void>(): R;
    _oldDisplayRectIgnoringOpacity_isVisibleRect_rectIsVisibleRectForView<R = void, P0 = cocoa.CGRect, P1 = boolean, P2 = unknown>(__oldDisplayRectIgnoringOpacity: P0, _isVisibleRect: P1, _rectIsVisibleRectForView: P2): R;
    _displayRectIgnoringOpacity_isVisibleRect_rectIsVisibleRectForView<R = void, P0 = cocoa.CGRect, P1 = boolean, P2 = unknown>(__displayRectIgnoringOpacity: P0, _isVisibleRect: P1, _rectIsVisibleRectForView: P2): R;
    _sendSurfaceSyncNotificationAndFlushSurfacesWithRegionToDisplay<R = void, P0 = unknown>(__sendSurfaceSyncNotificationAndFlushSurfacesWithRegionToDisplay: P0): R;
    _syncAndDisplaySurfaceIfNecessary<R = void, P0 = unknown>(__syncAndDisplaySurfaceIfNecessary: P0): R;
    drawOverlayRect<R = void, P0 = cocoa.CGRect>(_drawOverlayRect: P0): R;
    overlayBounds<R = cocoa.CGRect>(): R;
    _recursiveDisplayRectIfNeededIgnoringOpacity_isVisibleRect_rectIsVisibleRectForView_topView<R = void, P0 = cocoa.CGRect, P1 = boolean, P2 = unknown, P3 = boolean>(__recursiveDisplayRectIfNeededIgnoringOpacity: P0, _isVisibleRect: P1, _rectIsVisibleRectForView: P2, _topView: P3): R;
    _dirtyAutomaticInclusiveLayersForRectsBeingDrawn<R = void>(): R;
    _drawOverlayRectSet<R = void, P0 = unknown>(__drawOverlayRectSet: P0): R;
    _propagateDownNeedsDisplayInRect<R = void, P0 = cocoa.CGRect>(__propagateDownNeedsDisplayInRect: P0): R;
    _recursiveDisplayAllDirtyWithLockFocus_visRect<R = void, P0 = boolean, P1 = cocoa.CGRect>(__recursiveDisplayAllDirtyWithLockFocus: P0, _visRect: P1): R;
    _reallyCanDrawConcurrently<R = boolean>(): R;
    _dirtyAutomaticInclusiveLayersInRect<R = void, P0 = cocoa.CGRect>(__dirtyAutomaticInclusiveLayersInRect: P0): R;
    _recurseSublayersLookingForViewsWithDirtyRect<R = void, P0 = cocoa.CGRect>(__recurseSublayersLookingForViewsWithDirtyRect: P0): R;
    _recursiveMarkInclusiveLayerDirtyInRect<R = void, P0 = cocoa.CGRect>(__recursiveMarkInclusiveLayerDirtyInRect: P0): R;
    _setHasAutoSetWantsLayer_inclusive<R = void, P0 = boolean, P1 = boolean>(__setHasAutoSetWantsLayer: P0, _inclusive: P1): R;
    _didChangeAutoSetWantsLayer<R = void, P0 = boolean>(__didChangeAutoSetWantsLayer: P0): R;
    _hasAutoSetWantsLayer<R = boolean>(): R;
    _displayingAllDirty<R = boolean>(): R;
    _dirtyRect<R = cocoa.CGRect>(): R;
    _setDirtyRectIvar<R = void, P0 = cocoa.CGRect>(__setDirtyRectIvar: P0): R;
    _dirtyRectIvar<R = cocoa.CGRect>(): R;
    _drawRect_clip<R = void, P0 = cocoa.CGRect, P1 = boolean>(__drawRect: P0, _clip: P1): R;
    _drawRectIfEmptyWhenSubviewsCoverDirtyRect<R = boolean, P0 = cocoa.CGRect>(__drawRectIfEmptyWhenSubviewsCoverDirtyRect: P0): R;
    _drawRectIfEmpty<R = boolean>(): R;
    _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary<R = unknown, P0 = unknown>(__getNextResizeEventInvalidatingLiveResizeCacheIfNecessary: P0): R;
    _getNextResizeEventFromMask_invalidatingLiveResizeCacheIfNecessary<R = unknown, P0 = number, P1 = unknown>(__getNextResizeEventFromMask: P0, _invalidatingLiveResizeCacheIfNecessary: P1): R;
    _endLiveResize<R = void>(): R;
    _startLiveResize<R = void>(): R;
    _startLiveResizeCacheOK<R = void, P0 = boolean>(__startLiveResizeCacheOK: P0): R;
    _endLiveResizeAsTopLevel<R = void>(): R;
    _startLiveResizeAsTopLevel<R = void>(): R;
    _setLiveResize<R = void, P0 = boolean>(__setLiveResize: P0): R;
    _inLiveResize<R = boolean>(): R;
    viewDidEndLiveResize<R = void>(): R;
    viewWillStartLiveResize<R = void>(): R;
    _interactiveBounds<R = cocoa.CGRect>(): R;
    _visibleRectInWindowDisregardingHiddenViews<R = cocoa.CGRect>(): R;
    _visibleRectIgnoringViewsAbove<R = cocoa.CGRect, P0 = unknown>(__visibleRectIgnoringViewsAbove: P0): R;
    _invalidateFocus<R = void>(): R;
    _invalidateGStatesForTree<R = unknown>(): R;
    unlockFocus<R = void>(): R;
    lockFocusIfCanDrawInContext<R = boolean, P0 = unknown>(_lockFocusIfCanDrawInContext: P0): R;
    lockFocusIfCanDraw<R = boolean>(): R;
    _contextForLockFocus<R = unknown, P0 = boolean>(__contextForLockFocus: P0): R;
    lockFocus<R = void>(): R;
    _focusFromView_withContext<R = boolean, P0 = unknown, P1 = unknown>(__focusFromView: P0, _withContext: P1): R;
    _gatherFocusStateInto_upTo_withContext<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown>(__gatherFocusStateInto: P0, _upTo: P1, _withContext: P2): R;
    _focusInto_withClip<R = unknown, P0 = unknown, P1 = boolean>(__focusInto: P0, _withClip: P1): R;
    renewGState<R = void>(): R;
    setUpGState<R = void>(): R;
    releaseGState<R = void>(): R;
    allocateGState<R = void>(): R;
    gState<R = number>(): R;
    convertRectFromBase<R = cocoa.CGRect, P0 = cocoa.CGRect>(_convertRectFromBase: P0): R;
    convertRectToBase<R = cocoa.CGRect, P0 = cocoa.CGRect>(_convertRectToBase: P0): R;
    convertSizeFromBase<R = cocoa.CGSize, P0 = cocoa.CGSize>(_convertSizeFromBase: P0): R;
    convertSizeToBase<R = cocoa.CGSize, P0 = cocoa.CGSize>(_convertSizeToBase: P0): R;
    convertPointFromBase<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(_convertPointFromBase: P0): R;
    convertPointToBase<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(_convertPointToBase: P0): R;
    _baseScaleFactor<R = number>(): R;
    convertRectFromLayer<R = cocoa.CGRect, P0 = cocoa.CGRect>(_convertRectFromLayer: P0): R;
    convertRectToLayer<R = cocoa.CGRect, P0 = cocoa.CGRect>(_convertRectToLayer: P0): R;
    convertSizeFromLayer<R = cocoa.CGSize, P0 = cocoa.CGSize>(_convertSizeFromLayer: P0): R;
    convertSizeToLayer<R = cocoa.CGSize, P0 = cocoa.CGSize>(_convertSizeToLayer: P0): R;
    convertPointFromLayer<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(_convertPointFromLayer: P0): R;
    convertPointToLayer<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(_convertPointToLayer: P0): R;
    _convertRectFromIntegralizationSpace<R = cocoa.CGRect, P0 = cocoa.CGRect>(__convertRectFromIntegralizationSpace: P0): R;
    _convertRectToIntegralizationSpace<R = cocoa.CGRect, P0 = cocoa.CGRect>(__convertRectToIntegralizationSpace: P0): R;
    _convertSizeFromIntegralizationSpace<R = cocoa.CGSize, P0 = cocoa.CGSize>(__convertSizeFromIntegralizationSpace: P0): R;
    _convertSizeToIntegralizationSpace<R = cocoa.CGSize, P0 = cocoa.CGSize>(__convertSizeToIntegralizationSpace: P0): R;
    _convertPointFromIntegralizationSpace<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(__convertPointFromIntegralizationSpace: P0): R;
    _convertPointToIntegralizationSpace<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(__convertPointToIntegralizationSpace: P0): R;
    convertRectFromBacking<R = cocoa.CGRect, P0 = cocoa.CGRect>(_convertRectFromBacking: P0): R;
    convertRectToBacking<R = cocoa.CGRect, P0 = cocoa.CGRect>(_convertRectToBacking: P0): R;
    convertSizeFromBacking<R = cocoa.CGSize, P0 = cocoa.CGSize>(_convertSizeFromBacking: P0): R;
    convertSizeToBacking<R = cocoa.CGSize, P0 = cocoa.CGSize>(_convertSizeToBacking: P0): R;
    convertPointFromBacking<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(_convertPointFromBacking: P0): R;
    convertPointToBacking<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(_convertPointToBacking: P0): R;
    _primitiveConvertRectFromBacking_useIntegralizationSpace<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = boolean>(__primitiveConvertRectFromBacking: P0, _useIntegralizationSpace: P1): R;
    _primitiveConvertRectToBacking_useIntegralizationSpace<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = boolean>(__primitiveConvertRectToBacking: P0, _useIntegralizationSpace: P1): R;
    _primitiveConvertSizeFromBacking_useIntegralizationSpace<R = cocoa.CGSize, P0 = cocoa.CGSize, P1 = boolean>(__primitiveConvertSizeFromBacking: P0, _useIntegralizationSpace: P1): R;
    _primitiveConvertSizeToBacking_useIntegralizationSpace<R = cocoa.CGSize, P0 = cocoa.CGSize, P1 = boolean>(__primitiveConvertSizeToBacking: P0, _useIntegralizationSpace: P1): R;
    _primitiveConvertPointFromBacking_useIntegralizationSpace<R = cocoa.CGPoint, P0 = cocoa.CGPoint, P1 = boolean>(__primitiveConvertPointFromBacking: P0, _useIntegralizationSpace: P1): R;
    _primitiveConvertPointToBacking_useIntegralizationSpace<R = cocoa.CGPoint, P0 = cocoa.CGPoint, P1 = boolean>(__primitiveConvertPointToBacking: P0, _useIntegralizationSpace: P1): R;
    _backingTransform<R = cocoa.CGAffineTransform>(): R;
    _transformToBackingUsingIntegralizationSpace<R = cocoa.CGAffineTransform, P0 = boolean>(__transformToBackingUsingIntegralizationSpace: P0): R;
    _effectiveShouldUsePointIntegralizationForLayout<R = boolean>(): R;
    _nsib_setUsesPointIntegralizationForLayout<R = void, P0 = boolean>(__nsib_setUsesPointIntegralizationForLayout: P0): R;
    _nsib_usesPointIntegralizationForLayout<R = boolean>(): R;
    _transformFromView<R = cocoa.CGAffineTransform, P0 = unknown>(__transformFromView: P0): R;
    _transformToView<R = cocoa.CGAffineTransform, P0 = unknown>(__transformToView: P0): R;
    _effectiveLayerBoundsForTransforms<R = cocoa.CGRect>(): R;
    _integralizationSpaceAlignedRect_options<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = number>(__integralizationSpaceAlignedRect: P0, _options: P1): R;
    backingAlignedRect_options<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = number>(_backingAlignedRect: P0, _options: P1): R;
    _primitiveBackingAlignedRect_options_useIntegralizationSpace<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = number, P2 = boolean>(__primitiveBackingAlignedRect: P0, _options: P1, _useIntegralizationSpace: P2): R;
    _isPixelAlignedInWindow<R = boolean>(): R;
    _crackSize<R = unknown, P0 = cocoa.CGSize>(__crackSize: P0): R;
    _crackPoint<R = unknown, P0 = cocoa.CGPoint>(__crackPoint: P0): R;
    _crackRect<R = unknown, P0 = cocoa.CGRect>(__crackRect: P0): R;
    centerScanRect<R = cocoa.CGRect, P0 = cocoa.CGRect>(_centerScanRect: P0): R;
    _convertRect_toAncestor<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = unknown>(__convertRect: P0, _toAncestor: P1): R;
    _convertRect_fromAncestor<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = unknown>(__convertRect: P0, _fromAncestor: P1): R;
    convertRect_toView<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = unknown>(_convertRect: P0, _toView: P1): R;
    convertRect_fromView<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = unknown>(_convertRect: P0, _fromView: P1): R;
    convertSize_toView<R = cocoa.CGSize, P0 = cocoa.CGSize, P1 = unknown>(_convertSize: P0, _toView: P1): R;
    convertSize_fromView<R = cocoa.CGSize, P0 = cocoa.CGSize, P1 = unknown>(_convertSize: P0, _fromView: P1): R;
    _convertPoint_toAncestor<R = cocoa.CGPoint, P0 = cocoa.CGPoint, P1 = unknown>(__convertPoint: P0, _toAncestor: P1): R;
    _convertPoint_fromAncestor<R = cocoa.CGPoint, P0 = cocoa.CGPoint, P1 = unknown>(__convertPoint: P0, _fromAncestor: P1): R;
    convertPoint_toView<R = cocoa.CGPoint, P0 = cocoa.CGPoint, P1 = unknown>(_convertPoint: P0, _toView: P1): R;
    convertPoint_fromView<R = cocoa.CGPoint, P0 = cocoa.CGPoint, P1 = unknown>(_convertPoint: P0, _fromView: P1): R;
    _convertRectToSuperview<R = cocoa.CGRect, P0 = cocoa.CGRect>(__convertRectToSuperview: P0): R;
    _convertRectFromSuperview_test<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = boolean>(__convertRectFromSuperview: P0, _test: P1): R;
    _convertPointToSuperview<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(__convertPointToSuperview: P0): R;
    _convertPointFromSuperview_test<R = boolean, P0 = cocoa.CGPoint, P1 = boolean>(__convertPointFromSuperview: P0, _test: P1): R;
    _computeBounds<R = void>(): R;
    _makeAndStoreDrawMatrix<R = unknown>(): R;
    _getDrawMatrix<R = unknown>(): R;
    compositingOperation<R = number>(): R;
    setCompositingOperation<R = void, P0 = number>(_setCompositingOperation: P0): R;
    setOpaque<R = void, P0 = boolean>(_setOpaque: P0): R;
    _setRotatedOrScaledFromBase<R = void, P0 = boolean>(__setRotatedOrScaledFromBase: P0): R;
    _setRotatedFromBase<R = void, P0 = boolean>(__setRotatedFromBase: P0): R;
    setFlipped<R = void, P0 = boolean>(_setFlipped: P0): R;
    rotateByAngle<R = void, P0 = number>(_rotateByAngle: P0): R;
    scaleUnitSquareToSize<R = void, P0 = cocoa.CGSize>(_scaleUnitSquareToSize: P0): R;
    translateOriginToPoint<R = void, P0 = cocoa.CGPoint>(_translateOriginToPoint: P0): R;
    setBoundsSize<R = void, P0 = cocoa.CGSize>(_setBoundsSize: P0): R;
    setBoundsOrigin<R = void, P0 = cocoa.CGPoint>(_setBoundsOrigin: P0): R;
    boundsSize<R = cocoa.CGSize>(): R;
    boundsOrigin<R = cocoa.CGPoint>(): R;
    _didMagnify<R = void>(): R;
    _didEndMagnifying<R = void>(): R;
    _isMagnifying<R = boolean>(): R;
    _willBeginMagnifying<R = void>(): R;
    _scrollViewDidScrollBounds<R = void>(): R;
    _pullInExtraTilesForOverdraw<R = boolean>(): R;
    _updateSuggestedContentRectForVisibleRectChange<R = void>(): R;
    _updateSuggestedContentRect<R = void>(): R;
    _updateSuggestedContentRectToValue<R = void, P0 = cocoa.CGRect>(__updateSuggestedContentRectToValue: P0): R;
    _prepareContentInRectIfNeeded<R = void, P0 = cocoa.CGRect>(__prepareContentInRectIfNeeded: P0): R;
    _invalidatePreparedContentRect<R = void>(): R;
    _performWorkOnTilesFromRect_renderedContentRect_maximumRect_scrollVelocity_handler<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGRect, P2 = cocoa.CGRect, P3 = cocoa.CGPoint, P4 = cocoa.CDUnknownBlockType>(__performWorkOnTilesFromRect: P0, _renderedContentRect: P1, _maximumRect: P2, _scrollVelocity: P3, _handler: P4): R;
    _expandAndConstrainRect_byAmount<R = cocoa.CGRect, P0 = cocoa.CGRect, P1 = cocoa.CGSize>(__expandAndConstrainRect: P0, _byAmount: P1): R;
    _wantsToPrefetchContent<R = boolean>(): R;
    _wantsPrepareContentRect<R = boolean>(): R;
    _currentScrollVelocity<R = cocoa.CGPoint>(): R;
    _minimumFrameSize<R = cocoa.CGSize>(): R;
    frameSize<R = cocoa.CGSize>(): R;
    frameOrigin<R = cocoa.CGPoint>(): R;
    setFrameTransform<R = void, P0 = cocoa.CGAffineTransform>(_setFrameTransform: P0): R;
    frameTransform<R = cocoa.CGAffineTransform>(): R;
    setFrameSize<R = void, P0 = cocoa.CGSize>(_setFrameSize: P0): R;
    _resetThePreparedContentRectToTheVisibleRect<R = void>(): R;
    _resetThePreparedContentRectKeepingAsMuchOverdrawAsPossible<R = void>(): R;
    _needsLayoutForAnimation<R = boolean>(): R;
    _hasDrawMatrix<R = boolean>(): R;
    setFrameOrigin<R = void, P0 = cocoa.CGPoint>(_setFrameOrigin: P0): R;
    getRectsExposedDuringLiveResize_count<R = void, P0 = cocoa.CGRect, P1 = number>(_getRectsExposedDuringLiveResize: P0, _count: P1): R;
    _canCopyOnScroll<R = boolean>(): R;
    _autoSizeView<R = void, P0 = boolean>(__autoSizeView: P0): R;
    resizeWithOldSuperviewSize<R = void, P0 = cocoa.CGSize>(_resizeWithOldSuperviewSize: P0): R;
    enableLayoutFlushing<R = void>(): R;
    disableLayoutFlushing<R = void>(): R;
    _verifyConstraintsForCurrentFrame<R = void>(): R;
    resizeSubviewsWithOldSize<R = void, P0 = cocoa.CGSize>(_resizeSubviewsWithOldSize: P0): R;
    layout<R = void>(): R;
    nsis_rawAlignmentRect<R = cocoa.CGRect>(): R;
    nsis_unroundedFrame<R = cocoa.CGRect>(): R;
    nsis_frame<R = cocoa.CGRect>(): R;
    _layoutFrame<R = cocoa.CGRect>(): R;
    _maybeCheckForAmbiguityForItem<R = void, P0 = unknown>(__maybeCheckForAmbiguityForItem: P0): R;
    nsis_frameInEngine_forLayoutGuide_withRounding<R = cocoa.CGRect, P0 = unknown, P1 = unknown, P2 = boolean>(_nsis_frameInEngine: P0, _forLayoutGuide: P1, _withRounding: P2): R;
    _allowRoundingToChangeSize<R = boolean>(): R;
    _postFrameChangeNotification<R = void>(): R;
    _bindingAdaptor<R = unknown>(): R;
    _setBindingAdaptor<R = void, P0 = unknown>(__setBindingAdaptor: P0): R;
    _subviews<R = unknown>(): R;
    _removeSubview<R = void, P0 = unknown>(__removeSubview: P0): R;
    _addSubview<R = void, P0 = unknown>(__addSubview: P0): R;
    _setSuperview<R = void, P0 = unknown>(__setSuperview: P0): R;
    _rootLayerBackWindowIfNeeded<R = void>(): R;
    _insertMissingSubviewLayers<R = void>(): R;
    _removeLayerFromSuperlayer<R = void>(): R;
    replaceSubview_with<R = void, P0 = unknown, P1 = unknown>(_replaceSubview: P0, _with: P1): R;
    replaceSubview_with_options_completionHandler<R = void, P0 = unknown, P1 = unknown, P2 = number, P3 = cocoa.CDUnknownBlockType>(_replaceSubview: P0, _with: P1, _options: P2, _completionHandler: P3): R;
    _doSlideAnimation_fromView_toView<R = void, P0 = number, P1 = unknown, P2 = unknown>(__doSlideAnimation: P0, _fromView: P1, _toView: P2): R;
    _setupSlideAnimation_fromView_toView<R = void, P0 = number, P1 = unknown, P2 = unknown>(__setupSlideAnimation: P0, _fromView: P1, _toView: P2): R;
    _doCrossFadeFromView_toView<R = void, P0 = unknown, P1 = unknown>(__doCrossFadeFromView: P0, _toView: P1): R;
    _setupCrossFadeFromView_toView<R = void, P0 = unknown, P1 = unknown>(__setupCrossFadeFromView: P0, _toView: P1): R;
    _replaceSubview_with_rememberAndResetEditingFirstResponder_abortEditingIfNecessary<R = void, P0 = unknown, P1 = unknown, P2 = boolean, P3 = boolean>(__replaceSubview: P0, _with: P1, _rememberAndResetEditingFirstResponder: P2, _abortEditingIfNecessary: P3): R;
    _effectiveSemanticContext<R = number>(): R;
    _setSemanticContext<R = void, P0 = number>(__setSemanticContext: P0): R;
    _semanticContext<R = number>(): R;
    _recursiveUpdateSemanticContextExplicitSomewhereInChain<R = void, P0 = boolean>(__recursiveUpdateSemanticContextExplicitSomewhereInChain: P0): R;
    _semanticContextExplicitSomewhereInChain<R = boolean>(): R;
    _clearRememberedEditingFirstResponder<R = void>(): R;
    _makeRememberedOrNewEditingSubviewBecomeFirstResponder<R = void>(): R;
    _validRememberedEditingFirstResponder<R = unknown>(): R;
    _markRememberedEditingFirstResponderIfIsASubview<R = void>(): R;
    removeFromSuperviewWithoutNeedingDisplay<R = void>(): R;
    removeFromSuperview<R = void>(): R;
    _endEditingIfFirstResponderIsASubview<R = void>(): R;
    _abortEditingIfFirstResponderIsASubview<R = void>(): R;
    actionForLayer_forKey<R = unknown, P0 = unknown, P1 = unknown>(_actionForLayer: P0, _forKey: P1): R;
    _animatorClass<R = unknown>(): R;
    _updateLayerBackedness<R = void>(): R;
    _hasAutoCanDrawSubviewsIntoLayer<R = boolean>(): R;
    _hasCanDrawSubviewsIntoLayerAncestor<R = boolean>(): R;
    _hasCanDrawSubviewsIntoLayerOrAncestor<R = boolean>(): R;
    _setHidden<R = void, P0 = boolean>(__setHidden: P0): R;
    viewDidUnhide<R = void>(): R;
    viewDidHide<R = void>(): R;
    _recursiveLostHiddenAncestor<R = void>(): R;
    _recursiveViewDidDisappearBecauseHidden<R = void>(): R;
    _recursiveViewWillDisappearBecauseHidden<R = void>(): R;
    _recursiveViewDidAppearBecauseUnhidden<R = void>(): R;
    _recursiveViewWillAppearBecauseUnhidden<R = void>(): R;
    _recursiveOrderFrontSurfacesForNonHiddenViews<R = void>(): R;
    _orderFrontSurfacesIfNotHidden<R = void>(): R;
    _enableTrackingRectsIfNotHidden<R = void>(): R;
    _recursiveGainedHiddenAncestor<R = void>(): R;
    _disableTrackingRectsIfHidden<R = void>(): R;
    _orderOutTheSurfaceIfHidden<R = void>(): R;
    _recursiveGainedHiddenAncestorDuringUnarchiving<R = void>(): R;
    _setBackgroundStyleForSubtree<R = void, P0 = number>(__setBackgroundStyleForSubtree: P0): R;
    viewDidMoveToSuperview<R = void>(): R;
    viewWillMoveToSuperview<R = void, P0 = unknown>(_viewWillMoveToSuperview: P0): R;
    viewDidMoveToWindow<R = void>(): R;
    viewWillMoveToWindow<R = void, P0 = unknown>(_viewWillMoveToWindow: P0): R;
    sortSubviewsUsingFunction_context<R = void, P0 = cocoa.CDUnknownFunctionPointerType, P1 = void>(_sortSubviewsUsingFunction: P0, _context: P1): R;
    addSubview_positioned_relativeTo<R = void, P0 = unknown, P1 = number, P2 = unknown>(_addSubview: P0, _positioned: P1, _relativeTo: P2): R;
    _copySubviewsArray<R = void>(): R;
    addSubview<R = void, P0 = unknown>(_addSubview: P0): R;
    willRemoveSubview<R = void, P0 = unknown>(_willRemoveSubview: P0): R;
    didAddSubview<R = void, P0 = unknown>(_didAddSubview: P0): R;
    _updateLayerContentsGravityFromView<R = void>(): R;
    _updateLayerCornerRadiusFromView<R = void>(): R;
    _updateLayerBackgroundColorFromView<R = void>(): R;
    _updateLayerMasksToBoundsFromView<R = void>(): R;
    _setAutomaticFocusRingDisabled<R = void, P0 = boolean>(__setAutomaticFocusRingDisabled: P0): R;
    _automaticFocusRingDisabled<R = boolean>(): R;
    _enclosingScrollViewIfDocumentView<R = unknown>(): R;
    _willDrawFocusRingAroundEnclosingScrollView<R = boolean>(): R;
    _hasLegacyExternalFocusRingThatWasNormallyDrawnManually<R = boolean>(): R;
    _showingFocusRingAroundEnclosingScrollView<R = boolean, P0 = unknown>(__showingFocusRingAroundEnclosingScrollView: P0): R;
    _drawScrollViewFocusRing_clipRect_needsFullDisplay<R = void, P0 = unknown, P1 = cocoa.CGRect, P2 = boolean>(__drawScrollViewFocusRing: P0, _clipRect: P1, _needsFullDisplay: P2): R;
    noteFocusRingMaskChanged<R = void>(): R;
    focusRingMaskBounds<R = cocoa.CGRect>(): R;
    drawFocusRingMask<R = void>(): R;
    focusRingType<R = number>(): R;
    setFocusRingType<R = void, P0 = number>(_setFocusRingType: P0): R;
    setKeyboardFocusRingNeedsDisplayInRect<R = void, P0 = cocoa.CGRect>(_setKeyboardFocusRingNeedsDisplayInRect: P0): R;
    _setKeyboardFocusRingNeedsDisplayInRect_force<R = void, P0 = cocoa.CGRect, P1 = boolean>(__setKeyboardFocusRingNeedsDisplayInRect: P0, _force: P1): R;
    _drawFocusRingDebugAroundRect<R = void, P0 = cocoa.CGRect>(__drawFocusRingDebugAroundRect: P0): R;
    _setKeyboardFocusRingNeedsDisplayAroundPerimeter<R = void>(): R;
    _clipViewAncestor<R = unknown>(): R;
    ancestorSharedWithView<R = unknown, P0 = unknown>(_ancestorSharedWithView: P0): R;
    isDescendantOf<R = boolean, P0 = unknown>(_isDescendantOf: P0): R;
    _setWindow<R = void, P0 = unknown>(__setWindow: P0): R;
    _accessibilityUIElementSpecifier<R = unknown>(): R;
    _removeLayerIfOwnedByAppKit<R = void>(): R;
    _shouldDoLayerPerformanceUpdates<R = boolean>(): R;
    _setShouldDoLayerPerformanceUpdates<R = void, P0 = boolean>(__setShouldDoLayerPerformanceUpdates: P0): R;
    _needsLayoutEngine<R = boolean>(): R;
    _setUpViewBackingSurface<R = unknown>(): R;
    _addToOrphanList<R = void>(): R;
    _finalize<R = void>(): R;
    _releaseBindingAdaptor<R = void>(): R;
    _allowsContextMenus<R = boolean>(): R;
    didChangeValueForKey<R = void, P0 = unknown>(_didChangeValueForKey: P0): R;
    _commonAwake<R = void>(): R;
    _checkForOverriddenIsFlipped<R = void>(): R;
    _autoDrawConcurrently<R = boolean>(): R;
    _recursiveGainedDescendantThatOverridesNeedsDisplay<R = void>(): R;
    initWithFrame<R = unknown, P0 = cocoa.CGRect>(_initWithFrame: P0): R;
    _defaultLayerContentsRedrawPolicy<R = number>(): R;
    _focusRingVisibleRect<R = cocoa.CGRect>(): R;
    _recursiveDisplaySelfAndDescendantsInRect<R = void, P0 = cocoa.CGRect>(__recursiveDisplaySelfAndDescendantsInRect: P0): R;
    _recursiveDisplayDescendantsInRect<R = void, P0 = cocoa.CGRect>(__recursiveDisplayDescendantsInRect: P0): R;
    _drawnByAncestor<R = boolean>(): R;
    _drawsOwnDescendants<R = boolean>(): R;
    _setDrawsOwnDescendants<R = void, P0 = boolean>(__setDrawsOwnDescendants: P0): R;
    _performAnimatedAction<R = void, P0 = cocoa.CDUnknownBlockType>(__performAnimatedAction: P0): R;
    setAllowsVibrancy<R = void, P0 = boolean>(_setAllowsVibrancy: P0): R;
    _isLayingOut<R = boolean>(): R;
    _visibleDescendants<R = unknown>(): R;
    _usingAlternateHighlightColorForCell_withFrame<R = boolean, P0 = unknown, P1 = cocoa.CGRect>(__usingAlternateHighlightColorForCell: P0, _withFrame: P1): R;
    _highlightColorForCell<R = unknown, P0 = unknown>(__highlightColorForCell: P0): R;
    _sortSubviewsUsingComparator<R = void, P0 = cocoa.CDUnknownBlockType>(__sortSubviewsUsingComparator: P0): R;
    _subtreeDescriptionForTouchBarLogging<R = unknown>(): R;
    _subtreeDescriptionForTouchBarLoggingWithDepth<R = unknown, P0 = number>(__subtreeDescriptionForTouchBarLoggingWithDepth: P0): R;
    _descriptionForTouchBarLogging<R = unknown>(): R;
    _lfld_description<R = unknown>(): R;
    _lfld_minimalDescription<R = unknown>(): R;
    _lfld_addVariableChangeRecordForVariable_inLayoutEngine<R = void, P0 = unknown, P1 = unknown>(__lfld_addVariableChangeRecordForVariable: P0, _inLayoutEngine: P1): R;
    _lfld_addSetNeedsLayoutCallStack<R = void, P0 = unknown>(__lfld_addSetNeedsLayoutCallStack: P0): R;
    _lfld_addGeometryChangeRecordWithPropertyName_value<R = void, P0 = unknown, P1 = unknown>(__lfld_addGeometryChangeRecordWithPropertyName: P0, _value: P1): R;
    _lfld_discardLastCurrentLayoutMethodName<R = void>(): R;
    _lfld_pushCurrentLayoutMethodName<R = void, P0 = unknown>(__lfld_pushCurrentLayoutMethodName: P0): R;
    _lfld_resetCount<R = void>(): R;
    _lfld_prepareToResetCountIfNecessary<R = void>(): R;
    _lfld_incrementCount<R = void>(): R;
    _isContainedInMenu<R = boolean>(): R;
    _enclosingMenuItem<R = unknown>(): R;
    _debug_showKeyboardUILoop<R = void>(): R;
    _drawMetricsOverlays<R = void>(): R;
    _updateLayerMetricsOverlays<R = void>(): R;
    _showAllDrawingDrawRect<R = void, P0 = cocoa.CGRect>(__showAllDrawingDrawRect: P0): R;
    loggingDescription<R = unknown>(): R;
    _subtreeDescriptionForLogging<R = unknown, P0 = boolean>(__subtreeDescriptionForLogging: P0): R;
    _subtreeDescription<R = unknown>(): R;
    _subtreeDescriptionWithDepth_forLogging<R = unknown, P0 = number, P1 = boolean>(__subtreeDescriptionWithDepth: P0, _forLogging: P1): R;
    _briefDescriptionForLogging<R = unknown, P0 = boolean>(__briefDescriptionForLogging: P0): R;
    _briefDescription<R = unknown>(): R;
    _layerTreeDescription<R = unknown>(): R;
    _setOpenGLContext<R = void, P0 = unknown>(__setOpenGLContext: P0): R;
    _openGLContext<R = unknown>(): R;
    _openGLContextForCurrentLayerBackingState<R = unknown>(): R;
    _setSurfaceBackedOpenGLContext<R = void, P0 = unknown>(__setSurfaceBackedOpenGLContext: P0): R;
    _surfaceBackedOpenGLContext<R = unknown>(): R;
    _setLayerBackedOpenGLContext<R = void, P0 = unknown>(__setLayerBackedOpenGLContext: P0): R;
    _layerBackedOpenGLContext<R = unknown>(): R;
    convertRectFromOpenGLSurface<R = cocoa.CGRect, P0 = cocoa.CGRect>(_convertRectFromOpenGLSurface: P0): R;
    convertRectToOpenGLSurface<R = cocoa.CGRect, P0 = cocoa.CGRect>(_convertRectToOpenGLSurface: P0): R;
    convertSizeFromOpenGLSurface<R = cocoa.CGSize, P0 = cocoa.CGSize>(_convertSizeFromOpenGLSurface: P0): R;
    convertSizeToOpenGLSurface<R = cocoa.CGSize, P0 = cocoa.CGSize>(_convertSizeToOpenGLSurface: P0): R;
    convertPointFromOpenGLSurface<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(_convertPointFromOpenGLSurface: P0): R;
    convertPointToOpenGLSurface<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(_convertPointToOpenGLSurface: P0): R;
    openGLSurfaceSize<R = cocoa.CGSize>(): R;
    _removeVibrantBlendingMimicBackdropOrProxyLayerIfNeeded<R = void>(): R;
    _updateVibrantBlendingMimicBackdropOrProxyLayerWithBlendMode<R = void, P0 = number>(__updateVibrantBlendingMimicBackdropOrProxyLayerWithBlendMode: P0): R;
    _setNeedsUpdateMimicBackdropLevel<R = void>(): R;
    _isDiagonallyRotatedOrScaledFromBase<R = boolean>(): R;
    _buttonOfClass_action<R = unknown, P0 = unknown, P1 = string>(__buttonOfClass: P0, _action: P1): R;
    heartBeat<R = void, P0 = unknown>(_heartBeat: P0): R;
    _recursiveThawLayersAfterTransplant<R = void>(): R;
    _recursiveFreezeLayersBeforeTransplant<R = void>(): R;
    _CAViewFlags<R = number>(): R;
    _createLayer<R = unknown>(): R;
    canSmoothFontsInLayer<R = boolean>(): R;
    shouldSetFontSmoothingBackgroundColor<R = boolean>(): R;
    _safeSubviewEnumerationWithHandler<R = void, P0 = cocoa.CDUnknownBlockType>(__safeSubviewEnumerationWithHandler: P0): R;
    lockFocusIfCanDrawInFrame_flipped_clip<R = boolean, P0 = cocoa.CGRect, P1 = boolean, P2 = boolean>(_lockFocusIfCanDrawInFrame: P0, _flipped: P1, _clip: P2): R;
    _setNeedsPostponedSurfaceSync<R = void>(): R;
    _clearPostponedSurfaceSync<R = void>(): R;
    _syncSurfaceIfPostponed<R = void>(): R;
    _updateInheritedSurfaceColorSpace<R = boolean>(): R;
    _updateSurfaceResolution<R = void>(): R;
    _setEffectiveSurfaceColorSpace<R = void, P0 = unknown>(__setEffectiveSurfaceColorSpace: P0): R;
    _surfaceResized<R = void, P0 = unknown>(__surfaceResized: P0): R;
    _surfaceMoved<R = void, P0 = unknown>(__surfaceMoved: P0): R;
    _surfaceBounds<R = cocoa.CGRect>(): R;
    _viewSurfaceDidComeBack<R = void, P0 = unknown>(__viewSurfaceDidComeBack: P0): R;
    _viewSurfaceWillGoAway<R = void, P0 = unknown>(__viewSurfaceWillGoAway: P0): R;
    _desiredSurfaceResolution<R = number>(): R;
    _surfaceInheritsWindowOpaqueShape<R = boolean>(): R;
    _setSurfaceBacked<R = void, P0 = boolean>(__setSurfaceBacked: P0): R;
    _isSurfaceBacked<R = boolean>(): R;
    _allowDynamicContentSizeChangesWhileScrolling<R = boolean>(): R;
    _dismissGestureRecognizers<R = void>(): R;
    _revertGestureRecognizerPressureConfigurationForEvent<R = unknown, P0 = unknown>(__revertGestureRecognizerPressureConfigurationForEvent: P0): R;
    _synchronizeEffectivePressureConfiguration<R = void>(): R;
    _pressureConfigurationTrackingAreaCreateIfNeeded<R = unknown, P0 = boolean>(__pressureConfigurationTrackingAreaCreateIfNeeded: P0): R;
    _windowDidOrderOffScreen<R = void>(): R;
    _windowWillOrderOffScreen<R = void>(): R;
    _windowDidOrderOnScreen<R = void>(): R;
    _windowWillOrderOnScreen<R = void>(): R;
    _shouldAutoFlattenLayerTree<R = boolean>(): R;
    geometryInWindowDidChange<R = void>(): R;
    disableGeometryInWindowDidChangeNotification<R = void>(): R;
    enableGeometryInWindowDidChangeNotification<R = void>(): R;
    setCornerRadius<R = void, P0 = number>(_setCornerRadius: P0): R;
    cornerRadius<R = number>(): R;
    setClipsToBounds<R = void, P0 = boolean>(_setClipsToBounds: P0): R;
    clipsToBounds<R = boolean>(): R;
    _backgroundColorForFontSmoothing<R = unknown>(): R;
    setBackgroundColor<R = void, P0 = unknown>(_setBackgroundColor: P0): R;
    backgroundColor<R = unknown>(): R;
    _resetSupportsDirectLayerContentsCache<R = void>(): R;
    _setSupportsDirectLayerContentsCache<R = void, P0 = boolean>(__setSupportsDirectLayerContentsCache: P0): R;
    _supportsDirectLayerContentsCache<R = number>(): R;
    _hasRectangularFocusRingAroundFrame<R = boolean>(): R;
    _NSView_isWebClipView<R = boolean>(): R;
    _setLayerNeedsDisplayInViewRect<R = void, P0 = cocoa.CGRect>(__setLayerNeedsDisplayInViewRect: P0): R;
    _rootmostLayerTreeHostAncestor<R = unknown>(): R;
    activeDrawingRect<R = cocoa.CGRect>(): R;
    _recursive_displayRectIgnoringOpacity_inContext_shouldChangeFontReferenceColor_stopAtLayerBackedViews<R = void, P0 = boolean, P1 = cocoa.CGRect, P2 = unknown, P3 = boolean, P4 = boolean>(__recursive: P0, _displayRectIgnoringOpacity: P1, _inContext: P2, _shouldChangeFontReferenceColor: P3, _stopAtLayerBackedViews: P4): R;
    _updateSurfaceWhenInAnInclusiveLayer<R = void>(): R;
    _disableNeedsDisplayInRectNotifications<R = void>(): R;
    _enableNeedsDisplayInRectNotifications<R = void>(): R;
    _setupFontSmoothingForLayerDrawingIntoContext_previousColor_previousFlag<R = boolean, P0 = cocoa.CGContext, P1 = cocoa.CGColor, P2 = string>(__setupFontSmoothingForLayerDrawingIntoContext: P0, _previousColor: P1, _previousFlag: P2): R;
    _setupFocusStateForDrawing<R = void>(): R;
    _renderLayerInContext<R = void, P0 = unknown>(__renderLayerInContext: P0): R;
    _autoscrollScreenEdgeFactorFromPoint<R = number, P0 = cocoa.CGPoint>(__autoscrollScreenEdgeFactorFromPoint: P0): R;
    _shouldAutoscrollForEvent<R = boolean, P0 = unknown>(__shouldAutoscrollForEvent: P0): R;
    _autoscrollAmountForWindowPoint<R = cocoa.CGPoint, P0 = cocoa.CGPoint>(__autoscrollAmountForWindowPoint: P0): R;
    _autoscrollAmountForTouch<R = cocoa.CGPoint, P0 = unknown>(__autoscrollAmountForTouch: P0): R;
    _autoscrollAmountForEvent<R = cocoa.CGPoint, P0 = unknown>(__autoscrollAmountForEvent: P0): R;
    _removeTrackingRects_count<R = void, P0 = number, P1 = number>(__removeTrackingRects: P0, _count: P1): R;
    _needsDisplayInRect<R = boolean, P0 = cocoa.CGRect>(__needsDisplayInRect: P0): R;
    _updateVibrancyIfNeededForHiddenStateChange<R = void>(): R;
    _updateDragRegionForHiddenStateChange<R = void>(): R;
    _setHidden_setNeedsDisplay<R = void, P0 = boolean, P1 = boolean>(__setHidden: P0, _setNeedsDisplay: P1): R;
    _updateAllLayerPropertiesFromView<R = void>(): R;
    _appkitManagesLayer<R = boolean>(): R;
    _createLayerAndInitialize<R = void>(): R;
    _updateVibrancy<R = void>(): R;
    _needsVibrancy<R = boolean>(): R;
    _wantsLayerBasedVibrancy<R = boolean>(): R;
    _invalidateEffectiveVibrantBlendingStyle<R = void>(): R;
    _removeVibrantBlendingCACompositingFilterIfNeeded<R = void>(): R;
    _updateVibrantBlendingCACompositingFilterWithBlendMode<R = void, P0 = number>(__updateVibrantBlendingCACompositingFilterWithBlendMode: P0): R;
    _vibrancyBlendMode<R = number>(): R;
    _updateLayerGeometryFromView<R = void>(): R;
    _updateInclusiveLayerSublayerViewPositions<R = void>(): R;
    _useCoreAnimationFrameOriginChanges<R = boolean>(): R;
    _useCoreAnimationFrameChanges<R = boolean>(): R;
    _handleFrameChangeForSubview<R = void, P0 = unknown>(__handleFrameChangeForSubview: P0): R;
    _handleBoundsChangeForSubview<R = void, P0 = unknown>(__handleBoundsChangeForSubview: P0): R;
    _compositeHiddenViewHighlight<R = void>(): R;
    _appearanceSensitiveIsOpaque<R = boolean>(): R;
    _opaqueRectForWindowMoveWhenInTitlebar<R = cocoa.CGRect>(): R;
    _opaqueRect<R = cocoa.CGRect>(): R;
    _impactsWindowMoving<R = boolean>(): R;
    _setImpactsWindowMoving<R = void, P0 = boolean>(__setImpactsWindowMoving: P0): R;
    _dirtyRegion<R = unknown>(): R;
    _needsRedisplayOnFrameChange<R = boolean>(): R;
    _recursiveSetNeedsDisplay<R = void, P0 = boolean>(__recursiveSetNeedsDisplay: P0): R;
    _effectiveFocusRingType<R = number>(): R;
    _getDirtyRects_clippedToRect_count_boundingBox<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGRect, P2 = number, P3 = cocoa.CGRect>(__getDirtyRects: P0, _clippedToRect: P1, _count: P2, _boundingBox: P3): R;
    _clearDirtyRectsForTree<R = void>(): R;
    _clearDirtyRectsForLockedTree<R = void>(): R;
    _reallyNeedsDisplayForBounds<R = boolean>(): R;
    _invalidateViewAreasThatOverlapRect_inFrontOfSubview<R = void, P0 = cocoa.CGRect, P1 = unknown>(__invalidateViewAreasThatOverlapRect: P0, _inFrontOfSubview: P1): R;
    _mayHaveVisibleDescendantsThatOverlapRect_inFrontOfSubview<R = boolean, P0 = cocoa.CGRect, P1 = unknown>(__mayHaveVisibleDescendantsThatOverlapRect: P0, _inFrontOfSubview: P1): R;
    _enumerateVisibleDescendantsThatOverlapRect_inFrontOfSubview_recurseUp_usingBlock<R = boolean, P0 = cocoa.CGRect, P1 = unknown, P2 = boolean, P3 = cocoa.CDUnknownBlockType>(__enumerateVisibleDescendantsThatOverlapRect: P0, _inFrontOfSubview: P1, _recurseUp: P2, _usingBlock: P3): R;
    _ancestorForStartOfDisplayRecursion<R = unknown>(): R;
    _shouldPrintByCallingDrawRect<R = boolean>(): R;
    _updateTrackingAreasWithInvalidCursorRects<R = void, P0 = boolean>(__updateTrackingAreasWithInvalidCursorRects: P0): R;
    _updateTrackingAreas<R = void>(): R;
    _updateTrackingLocation<R = void, P0 = unknown>(__updateTrackingLocation: P0): R;
    _uninstallRemovedTrackingAreas<R = void>(): R;
    _uninstallTrackingAreas<R = void>(): R;
    _uninstallTrackingArea<R = void, P0 = unknown>(__uninstallTrackingArea: P0): R;
    _installTrackingAreas<R = void, P0 = unknown>(__installTrackingAreas: P0): R;
    _installTrackingArea<R = void, P0 = unknown>(__installTrackingArea: P0): R;
    _enableTrackingArea<R = void, P0 = unknown>(__enableTrackingArea: P0): R;
    _disableTrackingArea<R = void, P0 = unknown>(__disableTrackingArea: P0): R;
    _invalidateCursorRects<R = void>(): R;
    _setTrackingAreasDirty<R = void, P0 = number>(__setTrackingAreasDirty: P0): R;
    _recursiveSetTrackingAreasDirty<R = void, P0 = number>(__recursiveSetTrackingAreasDirty: P0): R;
    _trackingAreasDirty<R = number>(): R;
    _addTrackingRect_owner_userData_assumeInside_useTrackingNum<R = number, P0 = cocoa.CGRect, P1 = unknown, P2 = void, P3 = boolean, P4 = number>(__addTrackingRect: P0, _owner: P1, _userData: P2, _assumeInside: P3, _useTrackingNum: P4): R;
    _enableOrDisableTrackingAreas<R = void>(): R;
    _enableOrDisableTrackingArea<R = void, P0 = unknown>(__enableOrDisableTrackingArea: P0): R;
    _shouldUseTrackingAreasForToolTips<R = boolean>(): R;
    _uncachedShouldUseTrackingAreasForToolTips<R = boolean>(): R;
    _addTrackingRects_owner_userDataList_assumeInsideList_trackingNums_count<R = void, P0 = cocoa.CGRect, P1 = unknown, P2 = void, P3 = string, P4 = number, P5 = number>(__addTrackingRects: P0, _owner: P1, _userDataList: P2, _assumeInsideList: P3, _trackingNums: P4, _count: P5): R;
    _addTrackingTag<R = void, P0 = number>(__addTrackingTag: P0): R;
    _subviewsExcludingHiddenViews<R = unknown>(): R;
    _trimRegionInvalidatedDuringDisplayToRectsJustDrawn<R = void>(): R;
    _mergeRegionInvalidatedDuringDisplayIntoDirtyRegion<R = void>(): R;
    _clearDirtyRectsForTreeInRect<R = void, P0 = cocoa.CGRect>(__clearDirtyRectsForTreeInRect: P0): R;
    _performAnimated_actions<R = void, P0 = boolean, P1 = cocoa.CDUnknownBlockType>(__performAnimated: P0, _actions: P1): R;
    _frameAnimationCount<R = number>(): R;
    _endAnimatingFrame<R = void>(): R;
    _beginAnimatingFrame<R = void>(): R;
    _setDontSuppressLayerAnimation<R = void, P0 = boolean>(__setDontSuppressLayerAnimation: P0): R;
    _dontSuppressLayerAnimation<R = boolean>(): R;
    _setAnimatingFrameSize<R = void, P0 = boolean>(__setAnimatingFrameSize: P0): R;
    _animatingFrameSize<R = boolean>(): R;
    _updateDrawsNothing<R = void>(): R;
    _drawsNothing<R = boolean>(): R;
    _endLiveAnimation<R = void>(): R;
    _startLiveAnimation<R = void>(): R;
    _setWindowNeedsDisplayInViewsDrawableRect<R = void>(): R;
    _allocAuxiliary<R = void>(): R;
    _gainedDescendantThatCanDrawConcurrently<R = void>(): R;
    _copySubviewsInOrderOfDisplay<R = unknown>(): R;
    _attemptConcurrentViewDrawingForSelfAndDescendants<R = boolean>(): R;
    _sendViewWillDraw<R = void>(): R;
    _viewDying<R = boolean>(): R;
    _descendantsPassingTest<R = unknown, P0 = cocoa.CDUnknownBlockType>(__descendantsPassingTest: P0): R;
    _isInclusiveLayerBacked<R = boolean>(): R;
    _isLayerBacked<R = boolean>(): R;
    _setDrawsWithTintWhenHidden<R = void, P0 = boolean>(__setDrawsWithTintWhenHidden: P0): R;
    _drawsWithTintWhenHidden<R = boolean>(): R;
    _needsDisplayOnClipPathChange<R = boolean>(): R;
    hideActiveFirstResponderIndication<R = void>(): R;
    showActiveFirstResponderIndication<R = void>(): R;
    designatedFocusRingView<R = unknown>(): R;
    _clipViewShouldClipFocusRing<R = boolean>(): R;
    _focusRingClipAncestor<R = unknown>(): R;
    _focusRingBleedRegion<R = unknown>(): R;
    _clipViewAncestorDidScroll<R = void, P0 = unknown>(__clipViewAncestorDidScroll: P0): R;
    _clipViewAncestorWillScroll<R = void, P0 = unknown>(__clipViewAncestorWillScroll: P0): R;
    _setHIViewIsDrawing<R = void, P0 = boolean>(__setHIViewIsDrawing: P0): R;
    _drawingByHIView<R = boolean>(): R;
    _boundToHIView<R = boolean>(): R;
    _setUsesSpecialArchiving<R = void, P0 = boolean>(__setUsesSpecialArchiving: P0): R;
    showDefinitionForAttributedString_atPoint<R = void, P0 = unknown, P1 = cocoa.CGPoint>(_showDefinitionForAttributedString: P0, _atPoint: P1): R;
    showDefinitionForAttributedString_range_options_baselineOriginProvider<R = void, P0 = unknown, P1 = cocoa._NSRange, P2 = unknown, P3 = cocoa.CDUnknownBlockType>(_showDefinitionForAttributedString: P0, _range: P1, _options: P2, _baselineOriginProvider: P3): R;
    _insetVisibleRect<R = cocoa.CGRect>(): R;
    _didMeasureMinSizeForFullscreen<R = void>(): R;
    _willMeasureMinSizeForFullscreen<R = void>(): R;
    _singleCell<R = unknown>(): R;
    accessibilityAuditContrast<R = unknown>(): R;
    accessibilityAuditPotentialChildren<R = unknown>(): R;
    deepestAccessibilityDescendants<R = unknown>(): R;
    visibleAccessibleOrLeafSubviews<R = unknown>(): R;
    _isLeafNodeWithPotentialAccessibilityChildren<R = boolean>(): R;
    _classSetToIgnoreForAuditing<R = unknown>(): R;
    _ignoreAudit<R = boolean>(): R;
    accessibilityAuditLabel<R = unknown>(): R;
    accessibilityAuditHierarchy<R = unknown>(): R;
    accessibilityAuditParent<R = unknown>(): R;
    accessibilityAuditIssuesAttribute<R = unknown>(): R;
    accessibilityVisibleArea<R = number>(): R;
    accessibilitySectionsAttribute<R = unknown>(): R;
    accessibilityShouldSendNotification<R = boolean, P0 = unknown>(_accessibilityShouldSendNotification: P0): R;
    _accessibilityEnclosingTableRow<R = unknown>(): R;
    _accessibilityIsTableViewDescendant<R = boolean>(): R;
    _accessibilityEnclosingTableView<R = unknown>(): R;
    accessibilityVerticalUnitDescriptionAttribute<R = unknown>(): R;
    accessibilityHorizontalUnitDescriptionAttribute<R = unknown>(): R;
    accessibilityPopUpMenuClosed_accessibilityParent<R = void, P0 = unknown, P1 = unknown>(_accessibilityPopUpMenuClosed: P0, _accessibilityParent: P1): R;
    accessibilityPopUpMenuCreated_returningAccessibilityParent<R = void, P0 = unknown, P1 = unknown>(_accessibilityPopUpMenuCreated: P0, _returningAccessibilityParent: P1): R;
    accessibilityPopUpMenuCreated_forSubview_returningAccessibilityParent<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(_accessibilityPopUpMenuCreated: P0, _forSubview: P1, _returningAccessibilityParent: P2): R;
    accessibilityPopUpMenuParent<R = unknown, P0 = unknown>(_accessibilityPopUpMenuParent: P0): R;
    accessibilitySupportsOverriddenAttributes<R = boolean>(): R;
    accessibilityShouldUseUniqueId<R = boolean>(): R;
    accessibilityFocusedUIElement<R = unknown>(): R;
    accessibilityHitTest<R = unknown, P0 = cocoa.CGPoint>(_accessibilityHitTest: P0): R;
    _accessibilityBasicHitTest<R = unknown, P0 = cocoa.CGPoint>(__accessibilityBasicHitTest: P0): R;
    accessibilityIsIgnored<R = boolean>(): R;
    _accessibilityShowMenu<R = void, P0 = unknown>(__accessibilityShowMenu: P0): R;
    accessibilityWindowPointForShowMenu<R = cocoa.CGPoint>(): R;
    accessibilityPerformAction<R = void, P0 = unknown>(_accessibilityPerformAction: P0): R;
    accessibilityActionDescription<R = unknown, P0 = unknown>(_accessibilityActionDescription: P0): R;
    accessibilityActionNames<R = unknown>(): R;
    accessibilitySetValue_forAttribute<R = void, P0 = unknown, P1 = unknown>(_accessibilitySetValue: P0, _forAttribute: P1): R;
    accessibilityIsAttributeSettable<R = boolean, P0 = unknown>(_accessibilityIsAttributeSettable: P0): R;
    accessibilityAttributeValue<R = unknown, P0 = unknown>(_accessibilityAttributeValue: P0): R;
    accessibilityIsSizeAttributeSettable<R = boolean>(): R;
    accessibilitySizeAttribute<R = unknown>(): R;
    accessibilityIsPositionAttributeSettable<R = boolean>(): R;
    accessibilityPositionAttribute<R = unknown>(): R;
    accessibilityIsTopLevelUIElementAttributeSettable<R = boolean>(): R;
    accessibilityTopLevelUIElementAttribute<R = unknown>(): R;
    accessibilityIsWindowAttributeSettable<R = boolean>(): R;
    accessibilityWindowAttribute<R = unknown>(): R;
    accessibilityIsChildrenAttributeSettable<R = boolean>(): R;
    accessibilityChildrenAttribute<R = unknown>(): R;
    accessibilityChildrenInNavigationOrderAttribute<R = unknown>(): R;
    accessibilitySetFocusedAttribute<R = void, P0 = unknown>(_accessibilitySetFocusedAttribute: P0): R;
    accessibilityIsFocusedAttributeSettable<R = boolean>(): R;
    accessibilityFocusedAttribute<R = unknown>(): R;
    accessibilityIsParentAttributeSettable<R = boolean>(): R;
    accessibilityParentAttribute<R = unknown>(): R;
    _accessibilityParentForSubview<R = unknown, P0 = unknown>(__accessibilityParentForSubview: P0): R;
    accessibilityIsHelpAttributeSettable<R = boolean>(): R;
    accessibilityHelpAttribute<R = unknown>(): R;
    accessibilityIsRoleDescriptionAttributeSettable<R = boolean>(): R;
    accessibilityRoleDescriptionAttribute<R = unknown>(): R;
    accessibilityIsRoleAttributeSettable<R = boolean>(): R;
    accessibilityRoleAttribute<R = unknown>(): R;
    accessibilityAttributeNames<R = unknown>(): R;
    _wantsHeartBeat<R = boolean>(): R;
    _desiredLayerBounds<R = cocoa.CGRect>(): R;
    _screenAtPoint<R = unknown, P0 = cocoa.CGPoint>(__screenAtPoint: P0): R;
    _forceUpdateLayerTreeRenderer<R = void>(): R;
    _setLayerTreeRenderer<R = void, P0 = cocoa._CAView>(__setLayerTreeRenderer: P0): R;
    _layerTreeRenderer<R = cocoa._CAView>(): R;
    _drawRectAsLayerTree<R = void, P0 = cocoa.CGRect>(__drawRectAsLayerTree: P0): R;
    _recommendedDrawableSize<R = cocoa.CGSize>(): R;
    _registerForDraggedTypes_later<R = void, P0 = unknown, P1 = boolean>(__registerForDraggedTypes: P0, _later: P1): R;
    dragPromisedFilesOfTypes_fromRect_source_slideBack_event<R = boolean, P0 = unknown, P1 = cocoa.CGRect, P2 = unknown, P3 = boolean, P4 = unknown>(_dragPromisedFilesOfTypes: P0, _fromRect: P1, _source: P2, _slideBack: P3, _event: P4): R;
    dragFile_fromRect_slideBack_event<R = boolean, P0 = unknown, P1 = cocoa.CGRect, P2 = boolean, P3 = unknown>(_dragFile: P0, _fromRect: P1, _slideBack: P2, _event: P3): R;
    _treeHasDragTypes<R = boolean>(): R;
    _hitTest_dragTypes<R = unknown, P0 = cocoa.CGPoint, P1 = unknown>(__hitTest: P0, _dragTypes: P1): R;
    dragImage_at_offset_event_pasteboard_source_slideBack<R = void, P0 = unknown, P1 = cocoa.CGPoint, P2 = cocoa.CGSize, P3 = unknown, P4 = unknown, P5 = unknown, P6 = boolean>(_dragImage: P0, _at: P1, _offset: P2, _event: P3, _pasteboard: P4, _source: P5, _slideBack: P6): R;
    beginDraggingSessionWithItems_event_source<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown>(_beginDraggingSessionWithItems: P0, _event: P1, _source: P2): R;
    _dragTypes<R = unknown>(): R;
    unregisterDraggedTypes<R = void>(): R;
    registerForDraggedTypes<R = void, P0 = unknown>(_registerForDraggedTypes: P0): R;
    pageFooter<R = unknown>(): R;
    pageHeader<R = unknown>(): R;
    _pageHeaderAndFooterTextAttributes<R = unknown>(): R;
    drawPageBorderWithSize<R = void, P0 = cocoa.CGSize>(_drawPageBorderWithSize: P0): R;
    _getPageHeaderRect_pageFooterRect_forBorderSize<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGRect, P2 = cocoa.CGSize>(__getPageHeaderRect: P0, _pageFooterRect: P1, _forBorderSize: P2): R;
    drawSheetBorderWithSize<R = void, P0 = cocoa.CGSize>(_drawSheetBorderWithSize: P0): R;
    locationOfPrintRect<R = cocoa.CGPoint, P0 = cocoa.CGRect>(_locationOfPrintRect: P0): R;
    adjustPageHeightNew_top_bottom_limit<R = void, P0 = number, P1 = number, P2 = number, P3 = number>(_adjustPageHeightNew: P0, _top: P1, _bottom: P2, _limit: P3): R;
    adjustPageWidthNew_left_right_limit<R = void, P0 = number, P1 = number, P2 = number, P3 = number>(_adjustPageWidthNew: P0, _left: P1, _right: P2, _limit: P3): R;
    _calcHeightsWithMargin_operation<R = void, P0 = cocoa.CGSize, P1 = unknown>(__calcHeightsWithMargin: P0, _operation: P1): R;
    _calcWidthsWithMargin_operation<R = void, P0 = cocoa.CGSize, P1 = unknown>(__calcWidthsWithMargin: P0, _operation: P1): R;
    _calcMarginSize_operation<R = number, P0 = cocoa.CGSize, P1 = unknown>(__calcMarginSize: P0, _operation: P1): R;
    _provideTotalScaleFactorForPrintOperation<R = number, P0 = unknown>(__provideTotalScaleFactorForPrintOperation: P0): R;
    _knowsPagesFirst_last<R = boolean, P0 = number, P1 = number>(__knowsPagesFirst: P0, _last: P1): R;
    knowsPagesFirst_last<R = boolean, P0 = number, P1 = number>(_knowsPagesFirst: P0, _last: P1): R;
    printJobTitle<R = unknown>(): R;
    drawLayer_inContext<R = void, P0 = unknown, P1 = cocoa.CGContext>(_drawLayer: P0, _inContext: P1): R;
    _layoutSublayersOfLayer<R = void, P0 = unknown>(__layoutSublayersOfLayer: P0): R;
    _drawViewBackingLayer_inContext_drawingHandler<R = void, P0 = unknown, P1 = cocoa.CGContext, P2 = cocoa.CDUnknownBlockType>(__drawViewBackingLayer: P0, _inContext: P1, _drawingHandler: P2): R;
    _viewDidDrawInLayer_inContext<R = void, P0 = unknown, P1 = cocoa.CGContext>(__viewDidDrawInLayer: P0, _inContext: P1): R;
    _updateLayerCanDrawConcurrentlyFromView<R = void>(): R;
    _updateLayerOpacityFromView<R = void>(): R;
    _updateLayerMaskFromView<R = void>(): R;
    _updateLayerCompositingFilterFromView<R = void>(): R;
    _updateLayerBackgroundFiltersFromView<R = void>(): R;
    _updateLayerFiltersFromView<R = void>(): R;
    _updateLayerHiddenFromView<R = void>(): R;
    _updateLayerShadowFromView<R = void>(): R;
    _updateGeometryFlippedOnSelfAndSubviews<R = void>(): R;
    _updateGeometryFlippedOnLayer<R = void>(): R;
    _parentSuperviewWithLayer<R = unknown>(): R;
    _updateContentsGravityBasedOnFlippedChange<R = void>(): R;
    _layerCoordinatesEqualViewCoordinates<R = boolean>(): R;
    _dumpLayer<R = unknown>(): R;
    _dumpLayerToFilename<R = void, P0 = string>(__dumpLayerToFilename: P0): R;
    endDocument<R = void>(): R;
    endPage<R = void>(): R;
    beginPageInRect_atPlacement<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGPoint>(_beginPageInRect: P0, _atPlacement: P1): R;
    beginDocument<R = void>(): R;
    widthAdjustLimit<R = number>(): R;
    heightAdjustLimit<R = number>(): R;
    rectForPage<R = cocoa.CGRect, P0 = number>(_rectForPage: P0): R;
    knowsPageRange<R = boolean, P0 = cocoa._NSRange>(_knowsPageRange: P0): R;
    print<R = void, P0 = unknown>(_print: P0): R;
    dataWithEPSInsideRect<R = unknown, P0 = cocoa.CGRect>(_dataWithEPSInsideRect: P0): R;
    writeEPSInsideRect_toPasteboard<R = void, P0 = cocoa.CGRect, P1 = unknown>(_writeEPSInsideRect: P0, _toPasteboard: P1): R;
    dataWithPDFInsideRect<R = unknown, P0 = cocoa.CGRect>(_dataWithPDFInsideRect: P0): R;
    writePDFInsideRect_toPasteboard<R = void, P0 = cocoa.CGRect, P1 = unknown>(_writePDFInsideRect: P0, _toPasteboard: P1): R;
    _printForCurrentOperation<R = boolean>(): R;
    _copyForCurrentOperation<R = boolean>(): R;
    _previewCurrentPageForPrintOperation<R = void, P0 = unknown>(__previewCurrentPageForPrintOperation: P0): R;
    _renderCurrentPageForPrintOperation<R = void, P0 = unknown>(__renderCurrentPageForPrintOperation: P0): R;
    endTrailer<R = void>(): R;
    beginTrailer<R = void>(): R;
    endPageSetup<R = void>(): R;
    addToPageSetup<R = void>(): R;
    beginPageSetupRect_placement<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGPoint>(_beginPageSetupRect: P0, _placement: P1): R;
    beginPage_label_bBox_fonts<R = void, P0 = number, P1 = unknown, P2 = cocoa.CGRect, P3 = unknown>(_beginPage: P0, _label: P1, _bBox: P2, _fonts: P3): R;
    endSetup<R = void>(): R;
    beginSetup<R = void>(): R;
    endPrologue<R = void>(): R;
    endHeaderComments<R = void>(): R;
    beginPrologueBBox_creationDate_createdBy_fonts_forWhom_pages_title<R = void, P0 = cocoa.CGRect, P1 = unknown, P2 = unknown, P3 = unknown, P4 = unknown, P5 = number, P6 = unknown>(_beginPrologueBBox: P0, _creationDate: P1, _createdBy: P2, _fonts: P3, _forWhom: P4, _pages: P5, _title: P6): R;
    exitFullScreenModeWithOptions<R = void, P0 = unknown>(_exitFullScreenModeWithOptions: P0): R;
    enterFullScreenMode_withOptions<R = boolean, P0 = unknown, P1 = unknown>(_enterFullScreenMode: P0, _withOptions: P1): R;
    _allowImplicitInclusiveLayeringForResponsiveScrolling<R = boolean>(): R;
    _canSubtreeUseInclusiveLayersAutomatically<R = boolean>(): R;
    _setHiddenForReuse<R = void, P0 = boolean>(__setHiddenForReuse: P0): R;
    _isHiddenForReuse<R = boolean>(): R;
    _invalidatePreferredAttributes<R = void>(): R;
    _arePreferredAttributesValid<R = boolean>(): R;
    preferredLayoutAttributesFittingAttributes<R = unknown, P0 = unknown>(_preferredLayoutAttributesFittingAttributes: P0): R;
    _preferredLayoutAttributesFittingAttributes<R = unknown, P0 = unknown>(__preferredLayoutAttributesFittingAttributes: P0): R;
    _markAsDequeued<R = void>(): R;
    _wasDequeued<R = boolean>(): R;
    _setCollectionViewReusableViewFlags<R = void, P0 = number>(__setCollectionViewReusableViewFlags: P0): R;
    _collectionViewReusableViewFlags<R = number>(): R;
    _setCollectionViewLayoutAttributes<R = void, P0 = unknown>(__setCollectionViewLayoutAttributes: P0): R;
    _setBaseCollectionViewLayoutAttributes<R = void, P0 = unknown>(__setBaseCollectionViewLayoutAttributes: P0): R;
    _collectionViewLayoutAttributes<R = unknown>(): R;
    _setReuseIdentifier<R = void, P0 = unknown>(__setReuseIdentifier: P0): R;
    reuseIdentifier<R = unknown>(): R;
    _generateDraggingImageComponentWithKey_withMainDragView<R = unknown, P0 = unknown, P1 = unknown>(__generateDraggingImageComponentWithKey: P0, _withMainDragView: P1): R;
    _visibleRectExcludingTitlebarInCoordinateSystemForView<R = cocoa.CGRect, P0 = unknown>(__visibleRectExcludingTitlebarInCoordinateSystemForView: P0): R;
    _depthFirstCompare<R = number, P0 = unknown>(__depthFirstCompare: P0): R;
    _hasActiveDragTypes<R = boolean>(): R;
    _alignmentBoundsForPopover<R = cocoa.CGRect>(): R;
    _visibleRectForPopover<R = cocoa.CGRect>(): R;
    ns_containerWidgetType<R = unknown>(): R;
    _removeIBGeneratedPrototypingConstraints<R = void>(): R;
    invalidateIntrinsicContentSizeForCell<R = void, P0 = unknown>(_invalidateIntrinsicContentSizeForCell: P0): R;
    fittingSize<R = cocoa.CGSize>(): R;
    _populateEngineWithConstraintsForViewSubtree_forComputingFittingSizeOfView<R = void, P0 = unknown, P1 = unknown>(__populateEngineWithConstraintsForViewSubtree: P0, _forComputingFittingSizeOfView: P1): R;
    _rootView<R = unknown>(): R;
    _autolayoutTrace<R = unknown>(): R;
    _recursiveAutolayoutTraceAtLevel<R = unknown, P0 = number>(__recursiveAutolayoutTraceAtLevel: P0): R;
    _descriptionForLayoutTrace<R = unknown>(): R;
    _layoutDebuggingIdentifier<R = unknown>(): R;
    _findControlWithStringValuePrefix<R = unknown, P0 = unknown>(__findControlWithStringValuePrefix: P0): R;
    _findViewPassingTest<R = unknown, P0 = cocoa.CDUnknownBlockType>(__findViewPassingTest: P0): R;
    exerciseAmbiguityInLayout<R = void>(): R;
    _descendantWithAmbiguousLayout<R = unknown>(): R;
    hasAmbiguousLayout<R = boolean>(): R;
    _layoutVariablesWithAmbiguousValue<R = unknown>(): R;
    constraintsAffectingLayoutForOrientation<R = unknown, P0 = number>(_constraintsAffectingLayoutForOrientation: P0): R;
    constraintsAffectingLayoutForOrientation_ofItem<R = unknown, P0 = number, P1 = unknown>(_constraintsAffectingLayoutForOrientation: P0, _ofItem: P1): R;
    invalidateIntrinsicContentSize<R = void>(): R;
    _intrinsicContentSizeInvalidatedForChildView<R = void, P0 = unknown>(__intrinsicContentSizeInvalidatedForChildView: P0): R;
    _setBaselineOffsetFromBottomMayBeReferenced<R = void, P0 = boolean>(__setBaselineOffsetFromBottomMayBeReferenced: P0): R;
    _generateContentSizeConstraints<R = unknown>(): R;
    _updateContentSizeConstraints<R = void>(): R;
    _intrinsicContentFrameSize<R = cocoa.CGSize>(): R;
    intrinsicContentSize<R = cocoa.CGSize>(): R;
    _setContentSizeConstraints<R = void, P0 = unknown>(__setContentSizeConstraints: P0): R;
    _contentSizeConstraints<R = unknown>(): R;
    setContentCompressionResistancePriority_forOrientation<R = void, P0 = number, P1 = number>(_setContentCompressionResistancePriority: P0, _forOrientation: P1): R;
    contentCompressionResistancePriorityForOrientation<R = number, P0 = number>(_contentCompressionResistancePriorityForOrientation: P0): R;
    _defaultContentCompressionResistancePriorities<R = cocoa.CGSize>(): R;
    _setContentCompressionResistancePriorities<R = void, P0 = cocoa.CGSize>(__setContentCompressionResistancePriorities: P0): R;
    _contentCompressionResistancePriorities<R = cocoa.CGSize>(): R;
    _setPrimitiveContentCompressionResistancePrioritiesValue<R = void, P0 = unknown>(__setPrimitiveContentCompressionResistancePrioritiesValue: P0): R;
    _primitiveContentCompressionResistancePrioritiesValue<R = unknown>(): R;
    setContentHuggingPriority_forOrientation<R = void, P0 = number, P1 = number>(_setContentHuggingPriority: P0, _forOrientation: P1): R;
    contentHuggingPriorityForOrientation<R = number, P0 = number>(_contentHuggingPriorityForOrientation: P0): R;
    _defaultContentHuggingPriorities<R = cocoa.CGSize>(): R;
    _contentHuggingDefault_isUsuallyFixedHeight<R = boolean>(): R;
    _contentHuggingDefault_isUsuallyFixedWidth<R = boolean>(): R;
    _setContentHuggingPriorities<R = void, P0 = cocoa.CGSize>(__setContentHuggingPriorities: P0): R;
    _contentHuggingPriorities<R = cocoa.CGSize>(): R;
    _setPrimitiveContentHuggingPrioritiesValue<R = void, P0 = unknown>(__setPrimitiveContentHuggingPrioritiesValue: P0): R;
    _primitiveContentHuggingPrioritiesValue<R = unknown>(): R;
    _updateSimpleAutoresizingConstraintsInPlace_forAutoresizingMask<R = void, P0 = unknown, P1 = number>(__updateSimpleAutoresizingConstraintsInPlace: P0, _forAutoresizingMask: P1): R;
    _constraintsEquivalentToAutoresizingMask<R = unknown>(): R;
    _calculateSubviewAlignmentFrame_superviewAlignmentBounds_forAutoresizingMask<R = void, P0 = cocoa.CGRect, P1 = cocoa.CGRect, P2 = number>(__calculateSubviewAlignmentFrame: P0, _superviewAlignmentBounds: P1, _forAutoresizingMask: P2): R;
    nsli_autoresizingMask<R = number>(): R;
    _effectiveAutoresizingMask<R = number>(): R;
    _allowAutoresizingMaskFixupDueToSuperOverridingResizeSubviews<R = boolean>(): R;
    _shouldFixupChildAutoresizingMaskOnResizeSubviewsOverride<R = boolean>(): R;
    _invalidateEngineHostConstraints<R = void>(): R;
    _updateEngineHostConstraints<R = void>(): R;
    _updateEngineHostPreferredSizeConstraintsIfNeeded<R = void>(): R;
    _calculateEngineHostPreferredSize<R = cocoa.CGSize>(): R;
    _wantsPreferredSizeConstraintsWhenEngineHosting<R = boolean>(): R;
    _engineHostingPreferredSizeConstraintsNeedUpdating<R = boolean>(): R;
    _invalidateEngineHostingPreferredSizeConstraints<R = void>(): R;
    _setAllowsEngineHostPreferredSizeConstraints<R = void, P0 = boolean>(__setAllowsEngineHostPreferredSizeConstraints: P0): R;
    _allowsEngineHostPreferredSizeConstraints<R = boolean>(): R;
    _updateExistingEngineHostConstraints<R = void>(): R;
    _makeEngineHostConstraints<R = unknown>(): R;
    _updateAutoresizingConstraints<R = void>(): R;
    _invalidateAutoresizingConstraints<R = void>(): R;
    _effectiveAutoresizingMask_autoresizesSubviewsChanged<R = void>(): R;
    _constraints_viewGeometryDidChange<R = void>(): R;
    _constraints_subviewDidChangeSuperview<R = void, P0 = unknown>(__constraints_subviewDidChangeSuperview: P0): R;
    _constraints_subviewWillChangeSuperview<R = void, P0 = unknown>(__constraints_subviewWillChangeSuperview: P0): R;
    _engineHostConstraints<R = unknown>(): R;
    _setEngineHostConstraints<R = void, P0 = unknown>(__setEngineHostConstraints: P0): R;
    _autoresizingConstraints<R = unknown>(): R;
    solutionDidChangeInEngine<R = void, P0 = unknown>(_solutionDidChangeInEngine: P0): R;
    engine_willBreakConstraint_dueToMutuallyExclusiveConstraints<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(_engine: P0, _willBreakConstraint: P1, _dueToMutuallyExclusiveConstraints: P2): R;
    engine_markerForConstraintToBreakAmongConstraints<R = unknown, P0 = unknown, P1 = unknown>(_engine: P0, _markerForConstraintToBreakAmongConstraints: P1): R;
    constraintsDidChangeInEngine<R = void, P0 = unknown>(_constraintsDidChangeInEngine: P0): R;
    constraintForIdentifier<R = unknown, P0 = unknown>(_constraintForIdentifier: P0): R;
    removeConstraints<R = void, P0 = unknown>(_removeConstraints: P0): R;
    removeConstraint<R = void, P0 = unknown>(_removeConstraint: P0): R;
    addConstraints<R = void, P0 = unknown>(_addConstraints: P0): R;
    addConstraint<R = void, P0 = unknown>(_addConstraint: P0): R;
    _tryToAddConstraint_mutuallyExclusiveConstraints<R = boolean, P0 = unknown, P1 = unknown>(__tryToAddConstraint: P0, _mutuallyExclusiveConstraints: P1): R;
    _tryToAddConstraint_integralizationAdjustment_mutuallyExclusiveConstraints<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(__tryToAddConstraint: P0, _integralizationAdjustment: P1, _mutuallyExclusiveConstraints: P2): R;
    _tryToAddConstraint_roundingAdjustment_mutuallyExclusiveConstraints<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(__tryToAddConstraint: P0, _roundingAdjustment: P1, _mutuallyExclusiveConstraints: P2): R;
    _referencingConstraints<R = unknown>(): R;
    _constraintsReferencingItem<R = unknown, P0 = unknown>(__constraintsReferencingItem: P0): R;
    constraints<R = unknown>(): R;
    _layoutEngine_willRemoveLayoutConstraint<R = void, P0 = unknown>(__layoutEngine_willRemoveLayoutConstraint: P0): R;
    _layoutEngine_didAddLayoutConstraint_integralizationAdjustment_mutuallyExclusiveConstraints<R = boolean, P0 = unknown, P1 = number, P2 = unknown>(__layoutEngine_didAddLayoutConstraint: P0, _integralizationAdjustment: P1, _mutuallyExclusiveConstraints: P2): R;
    _withAutomaticEngineOptimizationDisabled<R = void, P0 = cocoa.CDUnknownBlockType>(__withAutomaticEngineOptimizationDisabled: P0): R;
    _discardEngine<R = void, P0 = unknown>(__discardEngine: P0): R;
    _layoutEngine_windowDidChange<R = void>(): R;
    _snipConstraintsToAnchor<R = void, P0 = unknown>(__snipConstraintsToAnchor: P0): R;
    _constraints_snipDangliesWithForce<R = void, P0 = boolean>(__constraints_snipDangliesWithForce: P0): R;
    _setPotentiallyHasDanglyConstraints<R = void, P0 = boolean>(__setPotentiallyHasDanglyConstraints: P0): R;
    _potentiallyHasDanglyConstraints<R = boolean>(): R;
    _engineHostingView<R = unknown>(): R;
    _setHostsAutolayoutEngine<R = void, P0 = boolean>(__setHostsAutolayoutEngine: P0): R;
    _usesEngineHostingConstraints<R = boolean>(): R;
    _hostsAutolayoutEngine<R = boolean>(): R;
    _encapsulatesSubtreeLayout<R = boolean>(): R;
    _tryToEncapsulateSubtreeLayout<R = boolean>(): R;
    _wantsToHostAutolayoutEngine<R = boolean>(): R;
    _setWantsToHostAutolayoutEngine<R = void, P0 = boolean>(__setWantsToHostAutolayoutEngine: P0): R;
    _viewWillBePiercedByConstraint<R = void, P0 = unknown>(__viewWillBePiercedByConstraint: P0): R;
    _isResizingFromLayout<R = boolean>(): R;
    _updateConstraintsAtWindowLevelIfNeeded<R = void>(): R;
    _layoutEngine<R = unknown>(): R;
    _setLayoutEngine<R = void, P0 = unknown>(__setLayoutEngine: P0): R;
    _parentalLayoutEngineDidChangeTo<R = void, P0 = unknown>(__parentalLayoutEngineDidChangeTo: P0): R;
    _parentalLayoutEngine<R = unknown>(): R;
    _engageAutolayout<R = void>(): R;
    _rebuildLayoutFromScratch<R = void>(): R;
    _adjustLayoutForResolutionChangeToRetina<R = void, P0 = boolean>(__adjustLayoutForResolutionChangeToRetina: P0): R;
    nsli_layoutEngine<R = unknown>(): R;
    _updateHostedAutolayoutEngineForPossiblyNewEngineScalingCoefficients<R = void>(): R;
    _didChangeHostsAutolayoutEngineTo<R = void, P0 = boolean>(__didChangeHostsAutolayoutEngineTo: P0): R;
    _willChangeHostsAutolayoutEngineTo<R = void, P0 = boolean>(__willChangeHostsAutolayoutEngineTo: P0): R;
    _hostedLayoutEngineOverride<R = unknown>(): R;
    _replacementConstraintForConstraint_whenReplacingView_withView<R = unknown, P0 = unknown, P1 = unknown, P2 = unknown>(__replacementConstraintForConstraint: P0, _whenReplacingView: P1, _withView: P2): R;
    _constraintsArray<R = unknown>(): R;
    _nonTAMICConstraints<R = unknown>(): R;
    _effectiveBackingScaleFactorForLayout<R = number>(): R;
    _subview_valueOfVariable_didChangeInEngine<R = void, P0 = unknown, P1 = unknown, P2 = unknown>(__subview: P0, _valueOfVariable: P1, _didChangeInEngine: P2): R;
    nsli_swapContainerForOutgoingConstraint_toIncomingConstraint<R = void, P0 = unknown, P1 = unknown>(_nsli_swapContainerForOutgoingConstraint: P0, _toIncomingConstraint: P1): R;
    nsis_valueOfVariable_didChangeInEngine<R = void, P0 = unknown, P1 = unknown>(_nsis_valueOfVariable: P0, _didChangeInEngine: P1): R;
    nsis_valueOfVariableIsUserObservable<R = boolean, P0 = unknown>(_nsis_valueOfVariableIsUserObservable: P0): R;
    nsis_shouldIntegralizeVariable<R = boolean, P0 = unknown>(_nsis_shouldIntegralizeVariable: P0): R;
    nsis_orientationHintForVariable<R = number, P0 = unknown>(_nsis_orientationHintForVariable: P0): R;
    nsis_descriptionOfVariable<R = unknown, P0 = unknown>(_nsis_descriptionOfVariable: P0): R;
    _heightVariable<R = unknown>(): R;
    _widthVariable<R = unknown>(): R;
    _minYVariable<R = unknown>(): R;
    _minXVariable<R = unknown>(): R;
    nsli_boundsHeightVariable<R = unknown>(): R;
    nsli_boundsWidthVariable<R = unknown>(): R;
    nsli_heightVariable<R = unknown>(): R;
    nsli_widthVariable<R = unknown>(): R;
    nsli_minYVariable<R = unknown>(): R;
    nsli_minXVariable<R = unknown>(): R;
    nsli_setPiercingToken<R = void, P0 = number>(_nsli_setPiercingToken: P0): R;
    nsli_piercingToken<R = number>(): R;
    nsli_canHostIndependentVariableAnchor<R = boolean>(): R;
    nsli_isCollectingConstraintChangesForLaterCoordinatedFlush<R = boolean, P0 = unknown>(_nsli_isCollectingConstraintChangesForLaterCoordinatedFlush: P0): R;
    nsli_lowersExpressionRelativeToConstraintContainer<R = boolean>(): R;
    nsli_lowerAttribute_intoExpression_withCoefficient_container<R = boolean, P0 = number, P1 = unknown, P2 = number, P3 = unknown>(_nsli_lowerAttribute: P0, _intoExpression: P1, _withCoefficient: P2, _container: P3): R;
    nsli_lowerAttribute_intoExpression_withCoefficient_forConstraint<R = boolean, P0 = number, P1 = unknown, P2 = number, P3 = unknown>(_nsli_lowerAttribute: P0, _intoExpression: P1, _withCoefficient: P2, _forConstraint: P3): R;
    nsli_lowerAttribute_intoExpression_withCoefficient_forConstraint_onBehalfOfLayoutGuide<R = boolean, P0 = number, P1 = unknown, P2 = number, P3 = unknown, P4 = unknown>(_nsli_lowerAttribute: P0, _intoExpression: P1, _withCoefficient: P2, _forConstraint: P3, _onBehalfOfLayoutGuide: P4): R;
    nsli_convertSizeFromEngineSpace<R = cocoa.CGSize, P0 = cocoa.CGSize>(_nsli_convertSizeFromEngineSpace: P0): R;
    nsli_convertSizeToEngineSpace<R = cocoa.CGSize, P0 = cocoa.CGSize>(_nsli_convertSizeToEngineSpace: P0): R;
    _preferredAutolayoutEngineToUserScalingCoefficients<R = cocoa.CGSize>(): R;
    nsli_engineToUserScalingCoefficients<R = cocoa.CGSize>(): R;
    nsli_engineToUserScalingCoefficientsInEngine<R = cocoa.CGSize, P0 = unknown>(_nsli_engineToUserScalingCoefficientsInEngine: P0): R;
    nsli_descriptionIncludesPointer<R = boolean>(): R;
    nsli_description<R = unknown>(): R;
    _layoutDescriptionIfDifferentFromDefault<R = unknown>(): R;
    _defaultLayoutDescription<R = unknown>(): R;
    nsli_resolvedValue_forSymbolicConstant_inConstraint_error<R = boolean, P0 = number, P1 = unknown, P2 = unknown, P3 = unknown>(_nsli_resolvedValue: P0, _forSymbolicConstant: P1, _inConstraint: P2, _error: P3): R;
    nsli_installedConstraints<R = unknown>(): R;
    nsli_removeConstraint<R = boolean, P0 = unknown>(_nsli_removeConstraint: P0): R;
    nsli_addConstraint_mutuallyExclusiveConstraints<R = void, P0 = unknown, P1 = unknown>(_nsli_addConstraint: P0, _mutuallyExclusiveConstraints: P1): R;
    nsli_addConstraint<R = void, P0 = unknown>(_nsli_addConstraint: P0): R;
    nsli_isFlipped<R = boolean>(): R;
    nsli_isRTL<R = boolean>(): R;
    nsli_itemDescribingLayoutDirectionForConstraint_toItem<R = unknown, P0 = unknown, P1 = unknown>(_nsli_itemDescribingLayoutDirectionForConstraint: P0, _toItem: P1): R;
    nsli_ancestorSharedWithItem<R = unknown, P0 = unknown>(_nsli_ancestorSharedWithItem: P0): R;
    nsli_superitem<R = unknown>(): R;
    nsli_layoutAnchorForAttribute<R = unknown, P0 = number>(_nsli_layoutAnchorForAttribute: P0): R;
    centerYAnchor<R = unknown>(): R;
    centerXAnchor<R = unknown>(): R;
    lastBaselineAnchor<R = unknown>(): R;
    firstBaselineAnchor<R = unknown>(): R;
    heightAnchor<R = unknown>(): R;
    widthAnchor<R = unknown>(): R;
    bottomAnchor<R = unknown>(): R;
    topAnchor<R = unknown>(): R;
    rightAnchor<R = unknown>(): R;
    leftAnchor<R = unknown>(): R;
    trailingAnchor<R = unknown>(): R;
    leadingAnchor<R = unknown>(): R;
    removeLayoutGuide<R = void, P0 = unknown>(_removeLayoutGuide: P0): R;
    addLayoutGuide<R = void, P0 = unknown>(_addLayoutGuide: P0): R;
    recursiveConstraintIdentifierDescription<R = unknown>(): R;
    _populateRecursiveConstraintIdentifiersWithMapping<R = void, P0 = unknown>(__populateRecursiveConstraintIdentifiersWithMapping: P0): R;
    recursiveConstraintDescription<R = unknown>(): R;
    _recursiveSubConstraintsCountIncludeEncapsulated<R = number, P0 = boolean>(__recursiveSubConstraintsCountIncludeEncapsulated: P0): R;
    _recursiveConstraintsWithDepth<R = unknown, P0 = number>(__recursiveConstraintsWithDepth: P0): R;
    nsli_layoutRect<R = unknown>(): R;
    layoutRect<R = unknown>(): R;
    _setupViewLayoutInvalidatorIfNecessary<R = void>(): R;
    invalidateConstraints<R = void>(): R;
    _removeChildRuleNode<R = void, P0 = unknown>(__removeChildRuleNode: P0): R;
    _addChildRuleNode<R = void, P0 = unknown>(__addChildRuleNode: P0): R;
    _childRuleNodes<R = unknown>(): R;
    _updateDeclaredRules<R = void>(): R;
    declaredLayoutRules<R = unknown>(): R;
    _updateDeclaredConstraints<R = void>(): R;
    _complainAboutImproperDeclaredConstraintInvalidation<R = void>(): R;
    _noteDeclaredConstraintWasManuallyRemoved<R = void, P0 = unknown>(__noteDeclaredConstraintWasManuallyRemoved: P0): R;
    _declaredConstraints<R = unknown>(): R;
    _setDeclaredConstraints<R = void, P0 = unknown>(__setDeclaredConstraints: P0): R;
    declaredLayoutConstraints<R = unknown>(): R;
    fontSmoothingBackgroundColorForTextLayer<R = unknown, P0 = unknown>(_fontSmoothingBackgroundColorForTextLayer: P0): R;
    textLayerCanUseLinearMaskOverlay<R = boolean, P0 = unknown>(_textLayerCanUseLinearMaskOverlay: P0): R;
    textLayerShouldDoSubpixelAntialiasing<R = boolean, P0 = unknown>(_textLayerShouldDoSubpixelAntialiasing: P0): R;
    removeConstraintWithIdentifier<R = void, P0 = unknown>(_removeConstraintWithIdentifier: P0): R;
    accessibilityParent<R = unknown>(): R;
    setAccessibilityParent<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFrame<R = cocoa.CGRect>(): R;
    setAccessibilityFrame<R = void, P0 = cocoa.CGRect>(_v: P0): R;
    preparedContentRect<R = cocoa.CGRect>(): R;
    setPreparedContentRect<R = void, P0 = cocoa.CGRect>(_v: P0): R;
    effectiveAppearance<R = cocoa.NSAppearance>(): R;
    _preferredAppearance<R = cocoa.NSAppearance>(): R;
    _usesNonVibrantAppearance<R = boolean>(): R;
    set_usesNonVibrantAppearance<R = void, P0 = boolean>(_v: P0): R;
    appearance<R = cocoa.NSAppearance>(): R;
    setAppearance<R = void, P0 = cocoa.NSAppearance>(_v: P0): R;
    identifier<R = cocoa.NSString>(): R;
    setIdentifier<R = void, P0 = cocoa.NSString>(_v: P0): R;
    wantsUpdateLayer<R = boolean>(): R;
    canDrawSubviewsIntoLayer<R = boolean>(): R;
    setCanDrawSubviewsIntoLayer<R = void, P0 = boolean>(_v: P0): R;
    layer<R = cocoa.CALayer>(): R;
    setLayer<R = void, P0 = cocoa.CALayer>(_v: P0): R;
    inputContext<R = cocoa.NSTextInputContext>(): R;
    userInterfaceLayoutDirection<R = number>(): R;
    setUserInterfaceLayoutDirection<R = void, P0 = number>(_v: P0): R;
    toolTip<R = cocoa.NSString>(): R;
    setToolTip<R = void, P0 = cocoa.NSString>(_v: P0): R;
    postsBoundsChangedNotifications<R = boolean>(): R;
    setPostsBoundsChangedNotifications<R = void, P0 = boolean>(_v: P0): R;
    enclosingScrollView<R = cocoa.NSScrollView>(): R;
    trackingAreas<R = cocoa.NSArray>(): R;
    needsPanelToBecomeKey<R = boolean>(): R;
    tag<R = number>(): R;
    wantsDefaultClipping<R = boolean>(): R;
    needsDisplay<R = boolean>(): R;
    setNeedsDisplay<R = void, P0 = boolean>(_v: P0): R;
    wantsRestingTouches<R = boolean>(): R;
    setWantsRestingTouches<R = void, P0 = boolean>(_v: P0): R;
    acceptsTouchEvents<R = boolean>(): R;
    setAcceptsTouchEvents<R = void, P0 = boolean>(_v: P0): R;
    mouseDownCanMoveWindow<R = boolean>(): R;
    inLiveResize<R = boolean>(): R;
    visibleRect<R = cocoa.CGRect>(): R;
    canDraw<R = boolean>(): R;
    canDrawConcurrently<R = boolean>(): R;
    setCanDrawConcurrently<R = void, P0 = boolean>(_v: P0): R;
    shadow<R = cocoa.NSShadow>(): R;
    setShadow<R = void, P0 = cocoa.NSShadow>(_v: P0): R;
    layerUsesCoreImageFilters<R = boolean>(): R;
    setLayerUsesCoreImageFilters<R = void, P0 = boolean>(_v: P0): R;
    contentFilters<R = cocoa.NSArray>(): R;
    setContentFilters<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    compositingFilter<R = cocoa.CIFilter>(): R;
    setCompositingFilter<R = void, P0 = cocoa.CIFilter>(_v: P0): R;
    backgroundFilters<R = cocoa.NSArray>(): R;
    setBackgroundFilters<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    alphaValue<R = number>(): R;
    setAlphaValue<R = void, P0 = number>(_v: P0): R;
    opaque<R = boolean>(): R;
    rotatedOrScaledFromBase<R = boolean>(): R;
    rotatedFromBase<R = boolean>(): R;
    flipped<R = boolean>(): R;
    boundsRotation<R = number>(): R;
    setBoundsRotation<R = void, P0 = number>(_v: P0): R;
    bounds<R = cocoa.CGRect>(): R;
    setBounds<R = void, P0 = cocoa.CGRect>(_v: P0): R;
    frameRotation<R = number>(): R;
    setFrameRotation<R = void, P0 = number>(_v: P0): R;
    frame<R = cocoa.CGRect>(): R;
    setFrame<R = void, P0 = cocoa.CGRect>(_v: P0): R;
    frameCenterRotation<R = number>(): R;
    setFrameCenterRotation<R = void, P0 = number>(_v: P0): R;
    rectPreservedDuringLiveResize<R = cocoa.CGRect>(): R;
    preservesContentDuringLiveResize<R = boolean>(): R;
    autoresizingMask<R = number>(): R;
    setAutoresizingMask<R = void, P0 = number>(_v: P0): R;
    autoresizesSubviews<R = boolean>(): R;
    setAutoresizesSubviews<R = void, P0 = boolean>(_v: P0): R;
    postsFrameChangedNotifications<R = boolean>(): R;
    setPostsFrameChangedNotifications<R = void, P0 = boolean>(_v: P0): R;
    animations<R = cocoa.NSDictionary>(): R;
    setAnimations<R = void, P0 = cocoa.NSDictionary>(_v: P0): R;
    wantsLayer<R = boolean>(): R;
    setWantsLayer<R = void, P0 = boolean>(_v: P0): R;
    layerContentsPlacement<R = number>(): R;
    setLayerContentsPlacement<R = void, P0 = number>(_v: P0): R;
    layerContentsRedrawPolicy<R = number>(): R;
    setLayerContentsRedrawPolicy<R = void, P0 = number>(_v: P0): R;
    hiddenOrHasHiddenAncestor<R = boolean>(): R;
    hidden<R = boolean>(): R;
    setHidden<R = void, P0 = boolean>(_v: P0): R;
    subviews<R = cocoa.NSArray>(): R;
    setSubviews<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    opaqueAncestor<R = cocoa.NSView>(): R;
    superview<R = cocoa.NSView>(): R;
    window<R = cocoa.NSWindow>(): R;
    allowsVibrancy<R = boolean>(): R;
    _managesOpenGLDrawable<R = boolean>(): R;
    drawingFindIndicator<R = boolean>(): R;
    _lfld_variableChangeRecords<R = cocoa.NSMutableArray>(): R;
    _lfld_setNeedsLayoutCallStacks<R = cocoa.NSMutableSet>(): R;
    _lfld_geometryChangeRecords<R = cocoa.NSMutableArray>(): R;
    _lfld_currentLayoutMethodName<R = cocoa.NSString>(): R;
    _lfld_count<R = number>(): R;
    enclosingMenuItem<R = cocoa.NSMenuItem>(): R;
    pressureConfiguration<R = cocoa.NSPressureConfiguration>(): R;
    setPressureConfiguration<R = void, P0 = cocoa.NSPressureConfiguration>(_v: P0): R;
    wantsExtendedDynamicRangeOpenGLSurface<R = boolean>(): R;
    setWantsExtendedDynamicRangeOpenGLSurface<R = void, P0 = boolean>(_v: P0): R;
    _proxyLayer<R = cocoa.CAProxyLayer>(): R;
    set_proxyLayer<R = void, P0 = cocoa.CAProxyLayer>(_v: P0): R;
    _windowBackdrop<R = cocoa.NSCGSWindowBackdrop>(): R;
    set_windowBackdrop<R = void, P0 = cocoa.NSCGSWindowBackdrop>(_v: P0): R;
    fontSmoothingBackgroundColor<R = cocoa.NSColor>(): R;
    setFontSmoothingBackgroundColor<R = void, P0 = cocoa.NSColor>(_v: P0): R;
    _surface<R = cocoa.NSSurface>(): R;
    set_surface<R = void, P0 = cocoa.NSSurface>(_v: P0): R;
    _vibrantBlendingStyleForSubtree<R = number>(): R;
    set_vibrantBlendingStyleForSubtree<R = void, P0 = number>(_v: P0): R;
    _clipPath<R = cocoa.NSBezierPath>(): R;
    set_clipPath<R = void, P0 = cocoa.NSBezierPath>(_v: P0): R;
    _surfaceColorSpace<R = cocoa.NSColorSpace>(): R;
    set_surfaceColorSpace<R = void, P0 = cocoa.NSColorSpace>(_v: P0): R;
    _viewController<R = cocoa.NSViewController>(): R;
    set_viewController<R = void, P0 = cocoa.NSViewController>(_v: P0): R;
    _presentationState<R = number>(): R;
    touchBarHitTestInsets<R = cocoa.NSEdgeInsets>(): R;
    registeredDraggedTypes<R = cocoa.NSArray>(): R;
    inFullScreenMode<R = boolean>(): R;
    _wantsUnderTitlebarView<R = boolean>(): R;
    functionRow<R = cocoa.NSFunctionRow>(): R;
    candidateListTouchBarItem<R = cocoa.NSCandidateListTouchBarItem>(): R;
    inTouchBar<R = boolean>(): R;
    layoutGuides<R = cocoa.NSArray>(): R;
    alignmentLayoutRect<R = cocoa.NSLayoutRect>(): R;
    _effectiveAppearanceParent<R = cocoa.NSAppearanceCustomization>(): R;
    accessibilityActivationPoint<R = cocoa.CGPoint>(): R;
    setAccessibilityActivationPoint<R = void, P0 = cocoa.CGPoint>(_v: P0): R;
    accessibilityAllowedValues<R = cocoa.NSArray>(): R;
    setAccessibilityAllowedValues<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityAlternateUIVisible<R = boolean>(): R;
    setAccessibilityAlternateUIVisible<R = void, P0 = boolean>(_v: P0): R;
    accessibilityApplicationFocusedUIElement<R = unknown>(): R;
    setAccessibilityApplicationFocusedUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityCancelButton<R = unknown>(): R;
    setAccessibilityCancelButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityChildren<R = cocoa.NSArray>(): R;
    setAccessibilityChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityChildrenInNavigationOrder<R = cocoa.NSArray>(): R;
    setAccessibilityChildrenInNavigationOrder<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityClearButton<R = unknown>(): R;
    setAccessibilityClearButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityCloseButton<R = unknown>(): R;
    setAccessibilityCloseButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityColumnCount<R = number>(): R;
    setAccessibilityColumnCount<R = void, P0 = number>(_v: P0): R;
    accessibilityColumnHeaderUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityColumnHeaderUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityColumnIndexRange<R = cocoa._NSRange>(): R;
    setAccessibilityColumnIndexRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityColumnTitles<R = cocoa.NSArray>(): R;
    setAccessibilityColumnTitles<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityColumns<R = cocoa.NSArray>(): R;
    setAccessibilityColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityContents<R = cocoa.NSArray>(): R;
    setAccessibilityContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityCriticalValue<R = unknown>(): R;
    setAccessibilityCriticalValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityCustomActions<R = cocoa.NSArray>(): R;
    setAccessibilityCustomActions<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityCustomRotors<R = cocoa.NSArray>(): R;
    setAccessibilityCustomRotors<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityDecrementButton<R = unknown>(): R;
    setAccessibilityDecrementButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityDefaultButton<R = unknown>(): R;
    setAccessibilityDefaultButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityDisclosed<R = boolean>(): R;
    setAccessibilityDisclosed<R = void, P0 = boolean>(_v: P0): R;
    accessibilityDisclosedByRow<R = unknown>(): R;
    setAccessibilityDisclosedByRow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityDisclosedRows<R = unknown>(): R;
    setAccessibilityDisclosedRows<R = void, P0 = unknown>(_v: P0): R;
    accessibilityDisclosureLevel<R = number>(): R;
    setAccessibilityDisclosureLevel<R = void, P0 = number>(_v: P0): R;
    accessibilityDocument<R = cocoa.NSString>(): R;
    setAccessibilityDocument<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityEdited<R = boolean>(): R;
    setAccessibilityEdited<R = void, P0 = boolean>(_v: P0): R;
    accessibilityElement<R = boolean>(): R;
    setAccessibilityElement<R = void, P0 = boolean>(_v: P0): R;
    accessibilityEnabled<R = boolean>(): R;
    setAccessibilityEnabled<R = void, P0 = boolean>(_v: P0): R;
    accessibilityExpanded<R = boolean>(): R;
    setAccessibilityExpanded<R = void, P0 = boolean>(_v: P0): R;
    accessibilityExtrasMenuBar<R = unknown>(): R;
    setAccessibilityExtrasMenuBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFilename<R = cocoa.NSString>(): R;
    setAccessibilityFilename<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityFocused<R = boolean>(): R;
    setAccessibilityFocused<R = void, P0 = boolean>(_v: P0): R;
    accessibilityFocusedWindow<R = unknown>(): R;
    setAccessibilityFocusedWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityFrontmost<R = boolean>(): R;
    setAccessibilityFrontmost<R = void, P0 = boolean>(_v: P0): R;
    accessibilityFullScreenButton<R = unknown>(): R;
    setAccessibilityFullScreenButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityGrowArea<R = unknown>(): R;
    setAccessibilityGrowArea<R = void, P0 = unknown>(_v: P0): R;
    accessibilityHandles<R = cocoa.NSArray>(): R;
    setAccessibilityHandles<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityHeader<R = unknown>(): R;
    setAccessibilityHeader<R = void, P0 = unknown>(_v: P0): R;
    accessibilityHelp<R = cocoa.NSString>(): R;
    setAccessibilityHelp<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityHidden<R = boolean>(): R;
    setAccessibilityHidden<R = void, P0 = boolean>(_v: P0): R;
    accessibilityHorizontalScrollBar<R = unknown>(): R;
    setAccessibilityHorizontalScrollBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityHorizontalUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityHorizontalUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityHorizontalUnits<R = number>(): R;
    setAccessibilityHorizontalUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityIdentifier<R = cocoa.NSString>(): R;
    setAccessibilityIdentifier<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityIncrementButton<R = unknown>(): R;
    setAccessibilityIncrementButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityIndex<R = number>(): R;
    setAccessibilityIndex<R = void, P0 = number>(_v: P0): R;
    accessibilityInsertionPointLineNumber<R = number>(): R;
    setAccessibilityInsertionPointLineNumber<R = void, P0 = number>(_v: P0): R;
    accessibilityLabel<R = cocoa.NSString>(): R;
    setAccessibilityLabel<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityLabelUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityLabelUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityLabelValue<R = number>(): R;
    setAccessibilityLabelValue<R = void, P0 = number>(_v: P0): R;
    accessibilityLinkedUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityLinkedUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityMain<R = boolean>(): R;
    setAccessibilityMain<R = void, P0 = boolean>(_v: P0): R;
    accessibilityMainWindow<R = unknown>(): R;
    setAccessibilityMainWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMarkerGroupUIElement<R = unknown>(): R;
    setAccessibilityMarkerGroupUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMarkerTypeDescription<R = cocoa.NSString>(): R;
    setAccessibilityMarkerTypeDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityMarkerUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityMarkerUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityMarkerValues<R = unknown>(): R;
    setAccessibilityMarkerValues<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMaxValue<R = unknown>(): R;
    setAccessibilityMaxValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMenuBar<R = unknown>(): R;
    setAccessibilityMenuBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMinValue<R = unknown>(): R;
    setAccessibilityMinValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMinimizeButton<R = unknown>(): R;
    setAccessibilityMinimizeButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityMinimized<R = boolean>(): R;
    setAccessibilityMinimized<R = void, P0 = boolean>(_v: P0): R;
    accessibilityModal<R = boolean>(): R;
    setAccessibilityModal<R = void, P0 = boolean>(_v: P0): R;
    accessibilityNextContents<R = cocoa.NSArray>(): R;
    setAccessibilityNextContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityNumberOfCharacters<R = number>(): R;
    setAccessibilityNumberOfCharacters<R = void, P0 = number>(_v: P0): R;
    accessibilityOrderedByRow<R = boolean>(): R;
    setAccessibilityOrderedByRow<R = void, P0 = boolean>(_v: P0): R;
    accessibilityOrientation<R = number>(): R;
    setAccessibilityOrientation<R = void, P0 = number>(_v: P0): R;
    accessibilityOverflowButton<R = unknown>(): R;
    setAccessibilityOverflowButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityPlaceholderValue<R = cocoa.NSString>(): R;
    setAccessibilityPlaceholderValue<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityPreviousContents<R = cocoa.NSArray>(): R;
    setAccessibilityPreviousContents<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityProtectedContent<R = boolean>(): R;
    setAccessibilityProtectedContent<R = void, P0 = boolean>(_v: P0): R;
    accessibilityProxy<R = unknown>(): R;
    setAccessibilityProxy<R = void, P0 = unknown>(_v: P0): R;
    accessibilityRequired<R = boolean>(): R;
    setAccessibilityRequired<R = void, P0 = boolean>(_v: P0): R;
    accessibilityRole<R = cocoa.NSString>(): R;
    setAccessibilityRole<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityRoleDescription<R = cocoa.NSString>(): R;
    setAccessibilityRoleDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityRowCount<R = number>(): R;
    setAccessibilityRowCount<R = void, P0 = number>(_v: P0): R;
    accessibilityRowHeaderUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityRowHeaderUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityRowIndexRange<R = cocoa._NSRange>(): R;
    setAccessibilityRowIndexRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityRows<R = cocoa.NSArray>(): R;
    setAccessibilityRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityRulerMarkerType<R = number>(): R;
    setAccessibilityRulerMarkerType<R = void, P0 = number>(_v: P0): R;
    accessibilitySearchButton<R = unknown>(): R;
    setAccessibilitySearchButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilitySearchMenu<R = unknown>(): R;
    setAccessibilitySearchMenu<R = void, P0 = unknown>(_v: P0): R;
    accessibilitySelected<R = boolean>(): R;
    setAccessibilitySelected<R = void, P0 = boolean>(_v: P0): R;
    accessibilitySelectedCells<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedCells<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedChildren<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedColumns<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedRows<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySelectedText<R = cocoa.NSString>(): R;
    setAccessibilitySelectedText<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilitySelectedTextRange<R = cocoa._NSRange>(): R;
    setAccessibilitySelectedTextRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilitySelectedTextRanges<R = cocoa.NSArray>(): R;
    setAccessibilitySelectedTextRanges<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityServesAsTitleForUIElements<R = cocoa.NSArray>(): R;
    setAccessibilityServesAsTitleForUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySharedCharacterRange<R = cocoa._NSRange>(): R;
    setAccessibilitySharedCharacterRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilitySharedFocusElements<R = cocoa.NSArray>(): R;
    setAccessibilitySharedFocusElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySharedTextUIElements<R = cocoa.NSArray>(): R;
    setAccessibilitySharedTextUIElements<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityShownMenu<R = unknown>(): R;
    setAccessibilityShownMenu<R = void, P0 = unknown>(_v: P0): R;
    accessibilitySortDirection<R = number>(): R;
    setAccessibilitySortDirection<R = void, P0 = number>(_v: P0): R;
    accessibilitySplitters<R = cocoa.NSArray>(): R;
    setAccessibilitySplitters<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilitySubrole<R = cocoa.NSString>(): R;
    setAccessibilitySubrole<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityTabs<R = cocoa.NSArray>(): R;
    setAccessibilityTabs<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityTitle<R = cocoa.NSString>(): R;
    setAccessibilityTitle<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityTitleUIElement<R = unknown>(): R;
    setAccessibilityTitleUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityToolbarButton<R = unknown>(): R;
    setAccessibilityToolbarButton<R = void, P0 = unknown>(_v: P0): R;
    accessibilityTopLevelUIElement<R = unknown>(): R;
    setAccessibilityTopLevelUIElement<R = void, P0 = unknown>(_v: P0): R;
    accessibilityURL<R = cocoa.NSURL>(): R;
    setAccessibilityURL<R = void, P0 = cocoa.NSURL>(_v: P0): R;
    accessibilityUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityUnits<R = number>(): R;
    setAccessibilityUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityValue<R = unknown>(): R;
    setAccessibilityValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityValueDescription<R = cocoa.NSString>(): R;
    setAccessibilityValueDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityVerticalScrollBar<R = unknown>(): R;
    setAccessibilityVerticalScrollBar<R = void, P0 = unknown>(_v: P0): R;
    accessibilityVerticalUnitDescription<R = cocoa.NSString>(): R;
    setAccessibilityVerticalUnitDescription<R = void, P0 = cocoa.NSString>(_v: P0): R;
    accessibilityVerticalUnits<R = number>(): R;
    setAccessibilityVerticalUnits<R = void, P0 = number>(_v: P0): R;
    accessibilityVisibleCells<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleCells<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleCharacterRange<R = cocoa._NSRange>(): R;
    setAccessibilityVisibleCharacterRange<R = void, P0 = cocoa._NSRange>(_v: P0): R;
    accessibilityVisibleChildren<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleChildren<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleColumns<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleColumns<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityVisibleRows<R = cocoa.NSArray>(): R;
    setAccessibilityVisibleRows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityWarningValue<R = unknown>(): R;
    setAccessibilityWarningValue<R = void, P0 = unknown>(_v: P0): R;
    accessibilityWindow<R = unknown>(): R;
    setAccessibilityWindow<R = void, P0 = unknown>(_v: P0): R;
    accessibilityWindows<R = cocoa.NSArray>(): R;
    setAccessibilityWindows<R = void, P0 = cocoa.NSArray>(_v: P0): R;
    accessibilityZoomButton<R = unknown>(): R;
    setAccessibilityZoomButton<R = void, P0 = unknown>(_v: P0): R;
    debugDescription<R = cocoa.NSString>(): R;
    description<R = cocoa.NSString>(): R;
    hash<R = number>(): R;
    superclass<R = unknown>(): R;
    // + NSView(Autolayout,Block_Animation,CHViewAdditions,History,InspectorStackViewFinding,MSDropableView,MSPreferredNextKeyView,NextKeyViewSupport,PopoverDismissal,Separator):
    widthConstraint<R = unknown>(): R;
    constraintsWithView_attributeMatcher<R = unknown, P0 = unknown, P1 = cocoa.CDUnknownBlockType>(_constraintsWithView: P0, _attributeMatcher: P1): R;
    verticalConstraintsWithView<R = unknown, P0 = unknown>(_verticalConstraintsWithView: P0): R;
    verticalConstraintWithView<R = unknown, P0 = unknown>(_verticalConstraintWithView: P0): R;
    horizontalConstraintsWithView<R = unknown, P0 = unknown>(_horizontalConstraintsWithView: P0): R;
    horizontalConstraintWithView<R = unknown, P0 = unknown>(_horizontalConstraintWithView: P0): R;
    showWithWidth<R = void, P0 = number>(_showWithWidth: P0): R;
    showWithHeight<R = void, P0 = number>(_showWithHeight: P0): R;
    hideWithZeroWidth<R = void>(): R;
    hideWithZeroHeight<R = void>(): R;
    heightConstraint<R = unknown>(): R;
    constrainWidth_priority<R = void, P0 = number, P1 = number>(_constrainWidth: P0, _priority: P1): R;
    constrainWidth<R = void, P0 = number>(_constrainWidth: P0): R;
    constrainHeight_priority<R = void, P0 = number, P1 = number>(_constrainHeight: P0, _priority: P1): R;
    constrainHeight<R = void, P0 = number>(_constrainHeight: P0): R;
    addSubview_constrainedBy_priority<R = void, P0 = unknown, P1 = cocoa.NSEdgeInsets, P2 = number>(_addSubview: P0, _constrainedBy: P1, _priority: P2): R;
    constraintWithSelfAsFirstItemBoundToAttribute<R = unknown, P0 = number>(_constraintWithSelfAsFirstItemBoundToAttribute: P0): R;
    animateToFrameOriginX_completionBlock<R = void, P0 = number, P1 = cocoa.CDUnknownBlockType>(_animateToFrameOriginX: P0, _completionBlock: P1): R;
    animateToFrameOrigin_completionBlock<R = void, P0 = cocoa.CGPoint, P1 = cocoa.CDUnknownBlockType>(_animateToFrameOrigin: P0, _completionBlock: P1): R;
    animateToFrameOriginX<R = void, P0 = number>(_animateToFrameOriginX: P0): R;
    nestedSubviewWithIdentifier<R = unknown, P0 = unknown>(_nestedSubviewWithIdentifier: P0): R;
    isContainedByCollapsedSplitViewSubview<R = boolean>(): R;
    containingAncestorViewOfClass<R = unknown, P0 = unknown>(_containingAncestorViewOfClass: P0): R;
    beginDragFromEvent_image_writersBlock<R = void, P0 = unknown, P1 = unknown, P2 = cocoa.CDUnknownBlockType>(_beginDragFromEvent: P0, _image: P1, _writersBlock: P2): R;
    beginDragFromEvent_image_type_data<R = void, P0 = unknown, P1 = unknown, P2 = unknown, P3 = unknown>(_beginDragFromEvent: P0, _image: P1, _type: P2, _data: P3): R;
    imageRepresentation<R = unknown>(): R;
    setNeedsDisplay<R = void>(): R;
    setFrameOriginY<R = void, P0 = number>(_setFrameOriginY: P0): R;
    setFrameOriginX<R = void, P0 = number>(_setFrameOriginX: P0): R;
    setFrameWidth<R = void, P0 = number>(_setFrameWidth: P0): R;
    setFrameHeight<R = void, P0 = number>(_setFrameHeight: P0): R;
    viewHistoryMaker<R = unknown>(): R;
    enclosingStackView<R = unknown>(): R;
    updateDraggingItemsForDrag<R = void, P0 = unknown>(_updateDraggingItemsForDrag: P0): R;
    wantsPeriodicDraggingUpdates<R = boolean>(): R;
    draggingEnded<R = void, P0 = unknown>(_draggingEnded: P0): R;
    concludeDragOperation<R = void, P0 = unknown>(_concludeDragOperation: P0): R;
    prepareForDragOperation<R = boolean, P0 = unknown>(_prepareForDragOperation: P0): R;
    draggingExited<R = void, P0 = unknown>(_draggingExited: P0): R;
    draggingUpdated<R = number, P0 = unknown>(_draggingUpdated: P0): R;
    draggingEntered<R = number, P0 = unknown>(_draggingEntered: P0): R;
    defaultDragOperation<R = number, P0 = unknown>(_defaultDragOperation: P0): R;
    performDragOperation<R = boolean, P0 = unknown>(_performDragOperation: P0): R;
    preferredNextKeyView<R = unknown>(): R;
    clickShouldDismissPopover<R = boolean, P0 = unknown>(_clickShouldDismissPopover: P0): R;
    separatorInsetBetweenSelfAndView<R = cocoa.NSEdgeInsets, P0 = unknown>(_separatorInsetBetweenSelfAndView: P0): R;
    wantsSeparatorBetweenSelfAndView<R = boolean, P0 = unknown>(_wantsSeparatorBetweenSelfAndView: P0): R;
    allSubviews<R = cocoa.NSArray>(): R;
    dropDelegate_bc<R = cocoa.MSDropableViewDelegate>(): R;
    setDropDelegate_bc<R = void, P0 = cocoa.MSDropableViewDelegate>(_v: P0): R;
    canBeKeyView<R = boolean>(): R;
    wantsSeparator<R = boolean>(): R;
  }
  namespace classes {
    export interface NSView<T = any> extends cocoa.classes.NSResponder, cocoa.classes.NSAppearanceCustomizationInternalProtocol, cocoa.classes.NSAnimatablePropertyContainerProtocol, cocoa.classes.NSUserInterfaceItemIdentificationProtocol, cocoa.classes.NSDraggingDestinationProtocol, cocoa.classes.NSAppearanceCustomizationProtocol, cocoa.classes.NSAccessibilityElementProtocol, cocoa.classes.NSAccessibilityProtocol {
      alloc<R = NSView>(): R;
      new: <R = NSView>() => R;
      isCompatibleWithResponsiveScrolling<R = boolean>(): R;
      defaultMenu<R = unknown>(): R;
      _dynamicToolTipManagerClass<R = unknown>(): R;
      _findFirstKeyViewInDirection_forKeyLoopGroupingView<R = unknown, P0 = number, P1 = unknown>(__findFirstKeyViewInDirection: P0, _forKeyLoopGroupingView: P1): R;
      _debug_layoutFrameChangeCount<R = number>(): R;
      _debug_incrementLayoutFrameChangeCount<R = void>(): R;
      _debug_clearLayoutFrameChangeCount<R = void>(): R;
      _debug_layoutFrameChangeFlag<R = boolean>(): R;
      _debug_setLayoutFrameChangeFlag<R = void, P0 = boolean>(__debug_setLayoutFrameChangeFlag: P0): R;
      _debug_shouldReportUnnecessaryLayoutCalls<R = boolean>(): R;
      focusView<R = unknown>(): R;
      _performWithoutAnimation<R = void, P0 = cocoa.CDUnknownBlockType>(__performWithoutAnimation: P0): R;
      automaticallyNotifiesObserversOfWantsLayer<R = boolean>(): R;
      defaultFocusRingType<R = number>(): R;
      new<R = unknown>(): R;
      _antialiasThresholdChanged<R = void, P0 = unknown>(__antialiasThresholdChanged: P0): R;
      _setShowsAlignmentRects<R = void, P0 = boolean>(__setShowsAlignmentRects: P0): R;
      _setShowsAllViews<R = void, P0 = boolean>(__setShowsAllViews: P0): R;
      _setShowsAllDrawing<R = void, P0 = boolean>(__setShowsAllDrawing: P0): R;
      _hiddenViewsTint<R = unknown>(): R;
      _setHiddenViewsTint<R = void, P0 = unknown>(__setHiddenViewsTint: P0): R;
      automaticallyNotifiesObserversOf_recommendedDrawableSize<R = boolean>(): R;
      keyPathsForValuesAffectingFunctionRow<R = unknown>(): R;
      requiresConstraintBasedLayout<R = boolean>(): R;
      keyPathsForValuesAffectingAlignmentRectInsets<R = unknown>(): R;
      keyPathsForValuesInvalidatingDisplay<R = unknown>(): R;
      keyPathsForValuesInvalidatingLayout<R = unknown>(): R;
      keyPathsForValuesInvalidatingIntrinsicContentSize<R = unknown>(): R;
      keyPathsForValuesInvalidatingConstraints<R = unknown>(): R;
      // + NSView(Autolayout,Block_Animation,CHViewAdditions,History,InspectorStackViewFinding,MSDropableView,MSPreferredNextKeyView,NextKeyViewSupport,PopoverDismissal,Separator):
      
    }
  }
}

declare const NSView: cocoa.classes.NSView;
